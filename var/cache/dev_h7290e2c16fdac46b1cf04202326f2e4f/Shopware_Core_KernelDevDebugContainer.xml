<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/home/avinash/Desktop/work/Shopware</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.runtime_environment">%env(default:kernel.environment:APP_RUNTIME_ENV)%</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.build_dir">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f</parameter>
    <parameter key="kernel.cache_dir">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f</parameter>
    <parameter key="kernel.logs_dir">/home/avinash/Desktop/work/Shopware/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="Framework">Shopware\Core\Framework\Framework</parameter>
      <parameter key="System">Shopware\Core\System\System</parameter>
      <parameter key="Content">Shopware\Core\Content\Content</parameter>
      <parameter key="Checkout">Shopware\Core\Checkout\Checkout</parameter>
      <parameter key="Maintenance">Shopware\Core\Maintenance\Maintenance</parameter>
      <parameter key="Profiling">Shopware\Core\Profiling\Profiling</parameter>
      <parameter key="Administration">Shopware\Administration\Administration</parameter>
      <parameter key="Elasticsearch">Shopware\Elasticsearch\Elasticsearch</parameter>
      <parameter key="Storefront">Shopware\Storefront\Storefront</parameter>
      <parameter key="DbalKernelPluginLoader">Shopware\Core\Framework\Plugin\KernelPluginLoader\DbalKernelPluginLoader</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/symfony/debug-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="Framework" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework</parameter>
        <parameter key="namespace">Shopware\Core\Framework</parameter>
      </parameter>
      <parameter key="System" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/System</parameter>
        <parameter key="namespace">Shopware\Core\System</parameter>
      </parameter>
      <parameter key="Content" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Content</parameter>
        <parameter key="namespace">Shopware\Core\Content</parameter>
      </parameter>
      <parameter key="Checkout" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Checkout</parameter>
        <parameter key="namespace">Shopware\Core\Checkout</parameter>
      </parameter>
      <parameter key="Maintenance" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Maintenance</parameter>
        <parameter key="namespace">Shopware\Core\Maintenance</parameter>
      </parameter>
      <parameter key="Profiling" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Profiling</parameter>
        <parameter key="namespace">Shopware\Core\Profiling</parameter>
      </parameter>
      <parameter key="Administration" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/shopware/administration</parameter>
        <parameter key="namespace">Shopware\Administration</parameter>
      </parameter>
      <parameter key="Elasticsearch" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/shopware/elasticsearch</parameter>
        <parameter key="namespace">Shopware\Elasticsearch</parameter>
      </parameter>
      <parameter key="Storefront" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront</parameter>
        <parameter key="namespace">Shopware\Storefront</parameter>
      </parameter>
      <parameter key="DbalKernelPluginLoader" type="collection">
        <parameter key="path">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework/Plugin/KernelPluginLoader</parameter>
        <parameter key="namespace">Shopware\Core\Framework\Plugin\KernelPluginLoader</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">Shopware_Core_KernelDevDebugContainer</parameter>
    <parameter key="kernel.cache.hash">7290e2c16fdac46b1cf04202326f2e4f</parameter>
    <parameter key="kernel.shopware_version">6.5.7.3</parameter>
    <parameter key="kernel.shopware_version_revision">c49293c611793c19adf7bf7f6ef10b858d93dd31</parameter>
    <parameter key="kernel.shopware_core_dir">/home/avinash/Desktop/work/Shopware/vendor/shopware/core</parameter>
    <parameter key="kernel.plugin_dir">/home/avinash/Desktop/work/Shopware/custom/plugins</parameter>
    <parameter key="kernel.app_dir">/home/avinash/Desktop/work/Shopware/custom/apps</parameter>
    <parameter key="kernel.active_plugins" type="collection"/>
    <parameter key="kernel.plugin_infos" type="collection">
      <parameter type="collection">
        <parameter key="name">TestPlugin</parameter>
        <parameter key="baseClass">TestPlugin\TestPlugin</parameter>
        <parameter key="active">false</parameter>
        <parameter key="path">custom/plugins/TestPlugin/</parameter>
        <parameter key="version">1.0.0</parameter>
        <parameter key="autoload" type="collection">
          <parameter key="psr-4" type="collection">
            <parameter key="TestPlugin\">src/</parameter>
          </parameter>
        </parameter>
        <parameter key="managedByComposer">false</parameter>
        <parameter key="composerName">test-plugin/test-plugin</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="name">Heptastore</parameter>
        <parameter key="baseClass">Heptastore\Heptastore</parameter>
        <parameter key="active">false</parameter>
        <parameter key="path">custom/plugins/Heptastore/</parameter>
        <parameter key="version">1.0.0</parameter>
        <parameter key="autoload" type="collection">
          <parameter key="psr-4" type="collection">
            <parameter key="Heptastore\">src/</parameter>
          </parameter>
        </parameter>
        <parameter key="managedByComposer">false</parameter>
        <parameter key="composerName">heptastore/heptastore</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="name">SwagPayPal</parameter>
        <parameter key="baseClass">Swag\PayPal\SwagPayPal</parameter>
        <parameter key="active">false</parameter>
        <parameter key="path">custom/plugins/SwagPayPal/</parameter>
        <parameter key="version">7.3.1</parameter>
        <parameter key="autoload" type="collection">
          <parameter key="psr-4" type="collection">
            <parameter key="Swag\PayPal\">src/</parameter>
          </parameter>
        </parameter>
        <parameter key="managedByComposer">false</parameter>
        <parameter key="composerName">swag/paypal</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.supported_api_versions" type="collection">
      <parameter>2</parameter>
      <parameter>3</parameter>
      <parameter>4</parameter>
    </parameter>
    <parameter key="defaults_bool_true">true</parameter>
    <parameter key="defaults_bool_false">false</parameter>
    <parameter key="default_whitespace"> </parameter>
    <parameter key="locale">en-GB</parameter>
    <parameter key="messenger.default_transport_name">v65</parameter>
    <parameter key="env(MESSENGER_TRANSPORT_DSN)">doctrine://default?auto_setup=false</parameter>
    <parameter key="env(MESSENGER_TRANSPORT_LOW_PRIORITY_DSN)">doctrine://default?auto_setup=false&amp;queue_name=low_priority</parameter>
    <parameter key="env(MESSENGER_TRANSPORT_FAILURE_DSN)">doctrine://default?queue_name=failed&amp;auto_setup=false</parameter>
    <parameter key="env(MAILER_DSN)">null://null</parameter>
    <parameter key="default_cdn_strategy">physical_filename</parameter>
    <parameter key="env(APP_URL)"></parameter>
    <parameter key="APP_URL">%env(string:APP_URL)%</parameter>
    <parameter key="env(REDIS_PREFIX)"></parameter>
    <parameter key="shopware.slug.config" type="collection">
      <parameter key="regexp">/([^A-Za-z0-9\.]|-)+/</parameter>
      <parameter key="lowercase">false</parameter>
    </parameter>
    <parameter key="shopware.routing.registered_api_prefixes" type="collection">
      <parameter>_wdt</parameter>
      <parameter>_profiler</parameter>
      <parameter>_error</parameter>
      <parameter>api</parameter>
      <parameter>sw-domain-hash.html</parameter>
      <parameter>store-api</parameter>
      <parameter>%env(resolve:SHOPWARE_ADMINISTRATION_PATH_NAME)%</parameter>
      <parameter>api</parameter>
    </parameter>
    <parameter key="core.migration.directories" type="collection"/>
    <parameter key="migration.active" type="collection"/>
    <parameter key="shopware.security.csp_templates" type="collection">
      <parameter key="default">
object-src 'none';
script-src 'none';
base-uri 'self';
            </parameter>
      <parameter key="administration">
object-src 'none';
script-src 'strict-dynamic' 'nonce-%nonce%' 'unsafe-inline' 'unsafe-eval' https: http:;
base-uri 'self';
            </parameter>
      <parameter key="storefront"></parameter>
      <parameter key="installer"></parameter>
    </parameter>
    <parameter key="shopware.app_dir">/home/avinash/Desktop/work/Shopware/custom/apps</parameter>
    <parameter key="env(SHOPWARE_DBAL_TIMEZONE_SUPPORT_ENABLED)">0</parameter>
    <parameter key="shopware.dbal.time_zone_support_enabled">%env(bool:SHOPWARE_DBAL_TIMEZONE_SUPPORT_ENABLED)%</parameter>
    <parameter key="env(SHOPWARE_DBAL_TOKEN_MINIMUM_LENGTH)">3</parameter>
    <parameter key="shopware.dbal.token_minimum_length">%env(int:SHOPWARE_DBAL_TOKEN_MINIMUM_LENGTH)%</parameter>
    <parameter key="env(INSTANCE_ID)"></parameter>
    <parameter key="instance_id">%env(INSTANCE_ID)%</parameter>
    <parameter key="shopware.store_endpoints" type="collection">
      <parameter key="my_extensions">/swplatform/licenseenvironment</parameter>
      <parameter key="my_plugin_updates">/swplatform/pluginupdates</parameter>
      <parameter key="environment_information">/swplatform/environmentinformation</parameter>
      <parameter key="updater_extension_compatibility">/swplatform/autoupdate</parameter>
      <parameter key="updater_permission">/swplatform/autoupdate/permission</parameter>
      <parameter key="plugin_download">/swplatform/pluginfiles/{pluginName}</parameter>
      <parameter key="app_generate_signature">/swplatform/generatesignature</parameter>
      <parameter key="cancel_license">/swplatform/pluginlicenses/%s/cancel</parameter>
      <parameter key="login">/swplatform/login</parameter>
      <parameter key="create_rating">/swplatform/extensionstore/extensions/%s/ratings</parameter>
      <parameter key="user_info">/swplatform/userinfo</parameter>
    </parameter>
    <parameter key="env(SHOPWARE_DISABLE_UPDATE_CHECK)"></parameter>
    <parameter key="shopware.media.metadata.types" type="collection">
      <parameter>\Shopware\Core\Content\Media\Metadata\Type\ImageMetadata</parameter>
      <parameter>\Shopware\Core\Content\Media\Metadata\Type\DocumentMetadata</parameter>
      <parameter>\Shopware\Core\Content\Media\Metadata\Type\VideoMetadata</parameter>
    </parameter>
    <parameter key="product_export.directory">export</parameter>
    <parameter key="product_export.read_buffer_size">100</parameter>
    <parameter key="import_export.supported_entities" type="collection">
      <parameter>customer</parameter>
      <parameter>product</parameter>
    </parameter>
    <parameter key="import_export.supported_file_types" type="collection">
      <parameter>text/csv</parameter>
    </parameter>
    <parameter key="import_export.read_buffer_size">100</parameter>
    <parameter key="import_export.write_buffer_size">100</parameter>
    <parameter key="import_export.http_batch_size">100</parameter>
    <parameter key="customer.account_types" type="collection">
      <parameter>business</parameter>
      <parameter>private</parameter>
    </parameter>
    <parameter key="env(APP_URL_CHECK_DISABLED)">false</parameter>
    <parameter key="env(SHOPWARE_ADMINISTRATION_PATH_NAME)">admin</parameter>
    <parameter key="shopware_administration.path_name">%env(resolve:SHOPWARE_ADMINISTRATION_PATH_NAME)%</parameter>
    <parameter key="elasticsearch.index.config" type="collection">
      <parameter key="settings" type="collection">
        <parameter key="index" type="collection">
          <parameter key="number_of_shards">3</parameter>
          <parameter key="number_of_replicas">3</parameter>
          <parameter key="mapping.total_fields.limit">50000</parameter>
          <parameter key="mapping.nested_fields.limit">500</parameter>
          <parameter key="mapping.nested_objects.limit">1000000</parameter>
        </parameter>
        <parameter key="analysis" type="collection">
          <parameter key="normalizer" type="collection">
            <parameter key="sw_lowercase_normalizer" type="collection">
              <parameter key="type">custom</parameter>
              <parameter key="filter" type="collection">
                <parameter>lowercase</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter key="analyzer" type="collection">
            <parameter key="sw_ngram_analyzer" type="collection">
              <parameter key="type">custom</parameter>
              <parameter key="tokenizer">whitespace</parameter>
              <parameter key="filter" type="collection">
                <parameter>lowercase</parameter>
                <parameter>sw_ngram_filter</parameter>
              </parameter>
            </parameter>
            <parameter key="sw_english_analyzer" type="collection">
              <parameter key="type">custom</parameter>
              <parameter key="tokenizer">standard</parameter>
              <parameter key="filter" type="collection">
                <parameter>lowercase</parameter>
                <parameter>sw_english_stop_filter</parameter>
              </parameter>
            </parameter>
            <parameter key="sw_german_analyzer" type="collection">
              <parameter key="type">custom</parameter>
              <parameter key="tokenizer">standard</parameter>
              <parameter key="filter" type="collection">
                <parameter>lowercase</parameter>
                <parameter>sw_german_stop_filter</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter key="filter" type="collection">
            <parameter key="sw_ngram_filter" type="collection">
              <parameter key="type">ngram</parameter>
              <parameter key="min_gram">4</parameter>
              <parameter key="max_gram">5</parameter>
            </parameter>
            <parameter key="sw_english_stop_filter" type="collection">
              <parameter key="type">stop</parameter>
              <parameter key="stopwords">_english_</parameter>
            </parameter>
            <parameter key="sw_german_stop_filter" type="collection">
              <parameter key="type">stop</parameter>
              <parameter key="stopwords">_german_</parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.index.mapping" type="collection">
      <parameter key="dynamic_templates" type="collection">
        <parameter type="collection">
          <parameter key="keywords" type="collection">
            <parameter key="match_mapping_type">string</parameter>
            <parameter key="mapping" type="collection">
              <parameter key="type">keyword</parameter>
              <parameter key="normalizer">sw_lowercase_normalizer</parameter>
              <parameter key="fields" type="collection">
                <parameter key="text" type="collection">
                  <parameter key="type">text</parameter>
                </parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.administration.index.config" type="collection">
      <parameter key="settings" type="collection">
        <parameter key="index" type="collection">
          <parameter key="number_of_shards">3</parameter>
          <parameter key="number_of_replicas">3</parameter>
          <parameter key="mapping.total_fields.limit">50000</parameter>
          <parameter key="mapping.nested_fields.limit">500</parameter>
          <parameter key="mapping.nested_objects.limit">1000000</parameter>
        </parameter>
        <parameter key="analysis" type="collection">
          <parameter key="normalizer" type="collection">
            <parameter key="sw_lowercase_normalizer" type="collection">
              <parameter key="type">custom</parameter>
              <parameter key="filter" type="collection">
                <parameter>lowercase</parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.administration.index.mapping" type="collection">
      <parameter key="dynamic_templates" type="collection">
        <parameter type="collection">
          <parameter key="keywords" type="collection">
            <parameter key="match_mapping_type">string</parameter>
            <parameter key="mapping" type="collection">
              <parameter key="type">keyword</parameter>
              <parameter key="normalizer">sw_lowercase_normalizer</parameter>
              <parameter key="fields" type="collection">
                <parameter key="text" type="collection">
                  <parameter key="type">text</parameter>
                </parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="default_elasticsearch_prefix">sw</parameter>
    <parameter key="env(SHOPWARE_ES_ENABLED)"></parameter>
    <parameter key="env(SHOPWARE_ES_INDEXING_ENABLED)"></parameter>
    <parameter key="env(OPENSEARCH_URL)">http://localhost:9200</parameter>
    <parameter key="env(SHOPWARE_ES_INDEX_PREFIX)">sw</parameter>
    <parameter key="env(SHOPWARE_ES_THROW_EXCEPTION)" type="string">1</parameter>
    <parameter key="env(SHOPWARE_ADMIN_ES_ENABLED)"></parameter>
    <parameter key="env(ADMIN_OPENSEARCH_URL)"></parameter>
    <parameter key="env(SHOPWARE_ADMIN_ES_INDEX_PREFIX)">sw-admin</parameter>
    <parameter key="env(SHOPWARE_ADMIN_ES_REFRESH_INDICES)"></parameter>
    <parameter key="env(SHOPWARE_ES_INDEXING_BATCH_SIZE)">100</parameter>
    <parameter key="env(SHOPWARE_ES_EXCLUDE_SOURCE)" type="string">0</parameter>
    <parameter key="shopware_http_cache_enabled_default">1</parameter>
    <parameter key="shopware.http.cache.enabled">%env(default:shopware_http_cache_enabled_default:SHOPWARE_HTTP_CACHE_ENABLED)%</parameter>
    <parameter key="shopware_http_cache_default_ttl_default">7200</parameter>
    <parameter key="shopware.http.cache.default_ttl">%env(default:shopware_http_cache_default_ttl_default:SHOPWARE_HTTP_DEFAULT_TTL)%</parameter>
    <parameter key="shopware.twig.app_variable.allowed_server_params" type="collection">
      <parameter>server_name</parameter>
      <parameter>request_uri</parameter>
      <parameter>app_url</parameter>
      <parameter>http_user_agent</parameter>
      <parameter>http_host</parameter>
      <parameter>server_name</parameter>
      <parameter>server_port</parameter>
      <parameter>redirect_url</parameter>
      <parameter>https</parameter>
      <parameter>forwarded</parameter>
      <parameter>host</parameter>
      <parameter>remote_addr</parameter>
      <parameter>http_x_forwarded_for</parameter>
      <parameter>http_x_forwarded_host</parameter>
      <parameter>http_x_forwarded_proto</parameter>
      <parameter>http_x_forwarded_port</parameter>
      <parameter>http_x_forwarded_prefix</parameter>
    </parameter>
    <parameter key="storefrontRoot">/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront</parameter>
    <parameter key=".container.dumper.inline_class_loader">true</parameter>
    <parameter key=".container.dumper.inline_factories">true</parameter>
    <parameter key="shopware.store.frw" type="string">1</parameter>
    <parameter key="shopware.cdn.strategy">%env(default:default_cdn_strategy:SHOPWARE_CDN_STRATEGY_DEFAULT)%</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleSignalEvent">console.signal</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trust_x_sendfile_type_header">false</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en-GB</parameter>
    <parameter key="kernel.enabled_locales" type="collection"/>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">%env(default::SYMFONY_IDE)%</parameter>
    <parameter key="asset.request_context.base_path">null</parameter>
    <parameter key="asset.request_context.secure">null</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources/snippet</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/Shopware_Core_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_dir">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/serialization.php</parameter>
    <parameter key="cache.prefix.seed">7290e2c16fdac46b1cf04202326f2e4f</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="name">session-</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">null</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="validator.mapping.cache.file">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="data_collector.templates" type="collection"/>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/home/avinash/Desktop/work/Shopware/templates</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.elasticsearch" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>elasticsearch</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.business_event_handler_buffer" type="collection">
        <parameter key="type">inclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>business_events</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="env(VAR_DUMPER_SERVER)">127.0.0.1:9912</parameter>
    <parameter key="shopware.feature" type="collection">
      <parameter key="flags" type="collection">
        <parameter key="v6.5.0.0" type="collection">
          <parameter key="default">true</parameter>
          <parameter key="major">true</parameter>
        </parameter>
        <parameter key="v6.6.0.0" type="collection">
          <parameter key="default">false</parameter>
          <parameter key="major">true</parameter>
        </parameter>
        <parameter key="v6.7.0.0" type="collection">
          <parameter key="default">false</parameter>
          <parameter key="major">true</parameter>
        </parameter>
        <parameter key="VUE3" type="collection">
          <parameter key="default">false</parameter>
          <parameter key="major">true</parameter>
        </parameter>
        <parameter key="media_path" type="collection">
          <parameter key="default">false</parameter>
          <parameter key="major">true</parameter>
          <parameter key="description">Enables new media path behavior, which calls new services to generate media urls</parameter>
        </parameter>
        <parameter key="ES_MULTILINGUAL_INDEX" type="collection">
          <parameter key="default">false</parameter>
          <parameter key="major">true</parameter>
          <parameter key="description">Change Elasticsearch mapping data to support multi languages in one index</parameter>
        </parameter>
        <parameter key="STOCK_HANDLING" type="collection">
          <parameter key="default">false</parameter>
          <parameter key="major">false</parameter>
        </parameter>
        <parameter key="ASYNC_THEME_COMPILATION" type="collection">
          <parameter key="default">false</parameter>
          <parameter key="major">true</parameter>
          <parameter key="description">Asynchronous theme compilation via message queue - experimental stableVersion:v6.6.0 feature:ASYNC_THEME_COMPILATION</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.feature.flags" type="collection">
      <parameter key="v6.5.0.0" type="collection">
        <parameter key="default">true</parameter>
        <parameter key="major">true</parameter>
      </parameter>
      <parameter key="v6.6.0.0" type="collection">
        <parameter key="default">false</parameter>
        <parameter key="major">true</parameter>
      </parameter>
      <parameter key="v6.7.0.0" type="collection">
        <parameter key="default">false</parameter>
        <parameter key="major">true</parameter>
      </parameter>
      <parameter key="VUE3" type="collection">
        <parameter key="default">false</parameter>
        <parameter key="major">true</parameter>
      </parameter>
      <parameter key="media_path" type="collection">
        <parameter key="default">false</parameter>
        <parameter key="major">true</parameter>
        <parameter key="description">Enables new media path behavior, which calls new services to generate media urls</parameter>
      </parameter>
      <parameter key="ES_MULTILINGUAL_INDEX" type="collection">
        <parameter key="default">false</parameter>
        <parameter key="major">true</parameter>
        <parameter key="description">Change Elasticsearch mapping data to support multi languages in one index</parameter>
      </parameter>
      <parameter key="STOCK_HANDLING" type="collection">
        <parameter key="default">false</parameter>
        <parameter key="major">false</parameter>
      </parameter>
      <parameter key="ASYNC_THEME_COMPILATION" type="collection">
        <parameter key="default">false</parameter>
        <parameter key="major">true</parameter>
        <parameter key="description">Asynchronous theme compilation via message queue - experimental stableVersion:v6.6.0 feature:ASYNC_THEME_COMPILATION</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.feature.flags.v6.5.0.0" type="collection">
      <parameter key="default">true</parameter>
      <parameter key="major">true</parameter>
    </parameter>
    <parameter key="shopware.feature.flags.v6.5.0.0.default">true</parameter>
    <parameter key="shopware.feature.flags.v6.5.0.0.major">true</parameter>
    <parameter key="shopware.feature.flags.v6.6.0.0" type="collection">
      <parameter key="default">false</parameter>
      <parameter key="major">true</parameter>
    </parameter>
    <parameter key="shopware.feature.flags.v6.6.0.0.default">false</parameter>
    <parameter key="shopware.feature.flags.v6.6.0.0.major">true</parameter>
    <parameter key="shopware.feature.flags.v6.7.0.0" type="collection">
      <parameter key="default">false</parameter>
      <parameter key="major">true</parameter>
    </parameter>
    <parameter key="shopware.feature.flags.v6.7.0.0.default">false</parameter>
    <parameter key="shopware.feature.flags.v6.7.0.0.major">true</parameter>
    <parameter key="shopware.feature.flags.VUE3" type="collection">
      <parameter key="default">false</parameter>
      <parameter key="major">true</parameter>
    </parameter>
    <parameter key="shopware.feature.flags.VUE3.default">false</parameter>
    <parameter key="shopware.feature.flags.VUE3.major">true</parameter>
    <parameter key="shopware.feature.flags.media_path" type="collection">
      <parameter key="default">false</parameter>
      <parameter key="major">true</parameter>
      <parameter key="description">Enables new media path behavior, which calls new services to generate media urls</parameter>
    </parameter>
    <parameter key="shopware.feature.flags.media_path.default">false</parameter>
    <parameter key="shopware.feature.flags.media_path.major">true</parameter>
    <parameter key="shopware.feature.flags.media_path.description">Enables new media path behavior, which calls new services to generate media urls</parameter>
    <parameter key="shopware.feature.flags.ES_MULTILINGUAL_INDEX" type="collection">
      <parameter key="default">false</parameter>
      <parameter key="major">true</parameter>
      <parameter key="description">Change Elasticsearch mapping data to support multi languages in one index</parameter>
    </parameter>
    <parameter key="shopware.feature.flags.ES_MULTILINGUAL_INDEX.default">false</parameter>
    <parameter key="shopware.feature.flags.ES_MULTILINGUAL_INDEX.major">true</parameter>
    <parameter key="shopware.feature.flags.ES_MULTILINGUAL_INDEX.description">Change Elasticsearch mapping data to support multi languages in one index</parameter>
    <parameter key="shopware.feature.flags.STOCK_HANDLING" type="collection">
      <parameter key="default">false</parameter>
      <parameter key="major">false</parameter>
    </parameter>
    <parameter key="shopware.feature.flags.STOCK_HANDLING.default">false</parameter>
    <parameter key="shopware.feature.flags.STOCK_HANDLING.major">false</parameter>
    <parameter key="shopware.feature.flags.ASYNC_THEME_COMPILATION" type="collection">
      <parameter key="default">false</parameter>
      <parameter key="major">true</parameter>
      <parameter key="description">Asynchronous theme compilation via message queue - experimental stableVersion:v6.6.0 feature:ASYNC_THEME_COMPILATION</parameter>
    </parameter>
    <parameter key="shopware.feature.flags.ASYNC_THEME_COMPILATION.default">false</parameter>
    <parameter key="shopware.feature.flags.ASYNC_THEME_COMPILATION.major">true</parameter>
    <parameter key="shopware.feature.flags.ASYNC_THEME_COMPILATION.description">Asynchronous theme compilation via message queue - experimental stableVersion:v6.6.0 feature:ASYNC_THEME_COMPILATION</parameter>
    <parameter key="shopware.profiler" type="collection">
      <parameter key="integrations" type="collection">
        <parameter>Symfony</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.profiler.integrations" type="collection">
      <parameter>Symfony</parameter>
    </parameter>
    <parameter key="shopware.profiler.integrations.0">Symfony</parameter>
    <parameter key="shopware.filesystem" type="collection">
      <parameter key="private" type="collection">
        <parameter key="type">local</parameter>
        <parameter key="config" type="collection">
          <parameter key="root">/home/avinash/Desktop/work/Shopware/files</parameter>
        </parameter>
      </parameter>
      <parameter key="public" type="collection">
        <parameter key="type">local</parameter>
        <parameter key="config" type="collection">
          <parameter key="root">/home/avinash/Desktop/work/Shopware/public</parameter>
        </parameter>
      </parameter>
      <parameter key="temp" type="collection">
        <parameter key="type">local</parameter>
        <parameter key="config" type="collection">
          <parameter key="root">/home/avinash/Desktop/work/Shopware/var</parameter>
        </parameter>
      </parameter>
      <parameter key="theme" type="collection"/>
      <parameter key="asset" type="collection"/>
      <parameter key="sitemap" type="collection"/>
      <parameter key="allowed_extensions" type="collection">
        <parameter>jpg</parameter>
        <parameter>jpeg</parameter>
        <parameter>png</parameter>
        <parameter>webp</parameter>
        <parameter>gif</parameter>
        <parameter>svg</parameter>
        <parameter>bmp</parameter>
        <parameter>tiff</parameter>
        <parameter>tif</parameter>
        <parameter>eps</parameter>
        <parameter>webm</parameter>
        <parameter>mkv</parameter>
        <parameter>flv</parameter>
        <parameter>ogv</parameter>
        <parameter>ogg</parameter>
        <parameter>mov</parameter>
        <parameter>mp4</parameter>
        <parameter>avi</parameter>
        <parameter>wmv</parameter>
        <parameter>pdf</parameter>
        <parameter>aac</parameter>
        <parameter>mp3</parameter>
        <parameter>wav</parameter>
        <parameter>flac</parameter>
        <parameter>oga</parameter>
        <parameter>wma</parameter>
        <parameter>txt</parameter>
        <parameter>doc</parameter>
        <parameter>ico</parameter>
      </parameter>
      <parameter key="private_allowed_extensions" type="collection">
        <parameter>jpg</parameter>
        <parameter>jpeg</parameter>
        <parameter>png</parameter>
        <parameter>webp</parameter>
        <parameter>gif</parameter>
        <parameter>svg</parameter>
        <parameter>bmp</parameter>
        <parameter>tiff</parameter>
        <parameter>tif</parameter>
        <parameter>eps</parameter>
        <parameter>webm</parameter>
        <parameter>mkv</parameter>
        <parameter>flv</parameter>
        <parameter>ogv</parameter>
        <parameter>ogg</parameter>
        <parameter>mov</parameter>
        <parameter>mp4</parameter>
        <parameter>avi</parameter>
        <parameter>wmv</parameter>
        <parameter>pdf</parameter>
        <parameter>aac</parameter>
        <parameter>mp3</parameter>
        <parameter>wav</parameter>
        <parameter>flac</parameter>
        <parameter>oga</parameter>
        <parameter>wma</parameter>
        <parameter>txt</parameter>
        <parameter>doc</parameter>
        <parameter>ico</parameter>
        <parameter>zip</parameter>
        <parameter>rar</parameter>
      </parameter>
      <parameter key="private_local_download_strategy">php</parameter>
    </parameter>
    <parameter key="shopware.filesystem.private" type="collection">
      <parameter key="type">local</parameter>
      <parameter key="config" type="collection">
        <parameter key="root">/home/avinash/Desktop/work/Shopware/files</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.filesystem.private.type">local</parameter>
    <parameter key="shopware.filesystem.private.config" type="collection">
      <parameter key="root">/home/avinash/Desktop/work/Shopware/files</parameter>
    </parameter>
    <parameter key="shopware.filesystem.private.config.root">/home/avinash/Desktop/work/Shopware/files</parameter>
    <parameter key="shopware.filesystem.public" type="collection">
      <parameter key="type">local</parameter>
      <parameter key="config" type="collection">
        <parameter key="root">/home/avinash/Desktop/work/Shopware/public</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.filesystem.public.type">local</parameter>
    <parameter key="shopware.filesystem.public.config" type="collection">
      <parameter key="root">/home/avinash/Desktop/work/Shopware/public</parameter>
    </parameter>
    <parameter key="shopware.filesystem.public.config.root">/home/avinash/Desktop/work/Shopware/public</parameter>
    <parameter key="shopware.filesystem.temp" type="collection">
      <parameter key="type">local</parameter>
      <parameter key="config" type="collection">
        <parameter key="root">/home/avinash/Desktop/work/Shopware/var</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.filesystem.temp.type">local</parameter>
    <parameter key="shopware.filesystem.temp.config" type="collection">
      <parameter key="root">/home/avinash/Desktop/work/Shopware/var</parameter>
    </parameter>
    <parameter key="shopware.filesystem.temp.config.root">/home/avinash/Desktop/work/Shopware/var</parameter>
    <parameter key="shopware.filesystem.theme" type="collection">
      <parameter key="type">local</parameter>
      <parameter key="config" type="collection">
        <parameter key="root">/home/avinash/Desktop/work/Shopware/public</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.filesystem.asset" type="collection">
      <parameter key="type">local</parameter>
      <parameter key="config" type="collection">
        <parameter key="root">/home/avinash/Desktop/work/Shopware/public</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.filesystem.sitemap" type="collection">
      <parameter key="type">local</parameter>
      <parameter key="config" type="collection">
        <parameter key="root">/home/avinash/Desktop/work/Shopware/public</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.filesystem.allowed_extensions" type="collection">
      <parameter>jpg</parameter>
      <parameter>jpeg</parameter>
      <parameter>png</parameter>
      <parameter>webp</parameter>
      <parameter>gif</parameter>
      <parameter>svg</parameter>
      <parameter>bmp</parameter>
      <parameter>tiff</parameter>
      <parameter>tif</parameter>
      <parameter>eps</parameter>
      <parameter>webm</parameter>
      <parameter>mkv</parameter>
      <parameter>flv</parameter>
      <parameter>ogv</parameter>
      <parameter>ogg</parameter>
      <parameter>mov</parameter>
      <parameter>mp4</parameter>
      <parameter>avi</parameter>
      <parameter>wmv</parameter>
      <parameter>pdf</parameter>
      <parameter>aac</parameter>
      <parameter>mp3</parameter>
      <parameter>wav</parameter>
      <parameter>flac</parameter>
      <parameter>oga</parameter>
      <parameter>wma</parameter>
      <parameter>txt</parameter>
      <parameter>doc</parameter>
      <parameter>ico</parameter>
    </parameter>
    <parameter key="shopware.filesystem.allowed_extensions.0">jpg</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.1">jpeg</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.2">png</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.3">webp</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.4">gif</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.5">svg</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.6">bmp</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.7">tiff</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.8">tif</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.9">eps</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.10">webm</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.11">mkv</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.12">flv</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.13">ogv</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.14">ogg</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.15">mov</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.16">mp4</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.17">avi</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.18">wmv</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.19">pdf</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.20">aac</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.21">mp3</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.22">wav</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.23">flac</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.24">oga</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.25">wma</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.26">txt</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.27">doc</parameter>
    <parameter key="shopware.filesystem.allowed_extensions.28">ico</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions" type="collection">
      <parameter>jpg</parameter>
      <parameter>jpeg</parameter>
      <parameter>png</parameter>
      <parameter>webp</parameter>
      <parameter>gif</parameter>
      <parameter>svg</parameter>
      <parameter>bmp</parameter>
      <parameter>tiff</parameter>
      <parameter>tif</parameter>
      <parameter>eps</parameter>
      <parameter>webm</parameter>
      <parameter>mkv</parameter>
      <parameter>flv</parameter>
      <parameter>ogv</parameter>
      <parameter>ogg</parameter>
      <parameter>mov</parameter>
      <parameter>mp4</parameter>
      <parameter>avi</parameter>
      <parameter>wmv</parameter>
      <parameter>pdf</parameter>
      <parameter>aac</parameter>
      <parameter>mp3</parameter>
      <parameter>wav</parameter>
      <parameter>flac</parameter>
      <parameter>oga</parameter>
      <parameter>wma</parameter>
      <parameter>txt</parameter>
      <parameter>doc</parameter>
      <parameter>ico</parameter>
      <parameter>zip</parameter>
      <parameter>rar</parameter>
    </parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.0">jpg</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.1">jpeg</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.2">png</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.3">webp</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.4">gif</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.5">svg</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.6">bmp</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.7">tiff</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.8">tif</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.9">eps</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.10">webm</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.11">mkv</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.12">flv</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.13">ogv</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.14">ogg</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.15">mov</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.16">mp4</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.17">avi</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.18">wmv</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.19">pdf</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.20">aac</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.21">mp3</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.22">wav</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.23">flac</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.24">oga</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.25">wma</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.26">txt</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.27">doc</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.28">ico</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.29">zip</parameter>
    <parameter key="shopware.filesystem.private_allowed_extensions.30">rar</parameter>
    <parameter key="shopware.filesystem.private_local_download_strategy">php</parameter>
    <parameter key="shopware.cdn" type="collection">
      <parameter key="url"></parameter>
      <parameter key="strategy">%env(string:default:default_cdn_strategy:SHOPWARE_CDN_STRATEGY_DEFAULT)%</parameter>
    </parameter>
    <parameter key="shopware.cdn.url"></parameter>
    <parameter key="shopware.increment" type="collection">
      <parameter key="user_activity" type="collection">
        <parameter key="type">mysql</parameter>
      </parameter>
      <parameter key="message_queue" type="collection">
        <parameter key="type">mysql</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.increment.user_activity" type="collection">
      <parameter key="type">mysql</parameter>
    </parameter>
    <parameter key="shopware.increment.user_activity.type">mysql</parameter>
    <parameter key="shopware.increment.message_queue" type="collection">
      <parameter key="type">mysql</parameter>
    </parameter>
    <parameter key="shopware.increment.message_queue.type">mysql</parameter>
    <parameter key="shopware.api" type="collection">
      <parameter key="max_limit">null</parameter>
      <parameter key="api_browser" type="collection">
        <parameter key="auth_required">false</parameter>
      </parameter>
      <parameter key="store" type="collection">
        <parameter key="context_lifetime">P1D</parameter>
        <parameter key="max_limit">100</parameter>
      </parameter>
      <parameter key="jwt_key" type="collection">
        <parameter key="private_key_path">file:///home/avinash/Desktop/work/Shopware/config/jwt/private.pem</parameter>
        <parameter key="private_key_passphrase">shopware</parameter>
        <parameter key="public_key_path">file:///home/avinash/Desktop/work/Shopware/config/jwt/public.pem</parameter>
      </parameter>
      <parameter key="rate_limiter" type="collection">
        <parameter key="login" type="collection">
          <parameter key="enabled">true</parameter>
          <parameter key="policy">time_backoff</parameter>
          <parameter key="reset">24 hours</parameter>
          <parameter key="limits" type="collection">
            <parameter type="collection">
              <parameter key="limit">10</parameter>
              <parameter key="interval">10 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">15</parameter>
              <parameter key="interval">30 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">20</parameter>
              <parameter key="interval">60 seconds</parameter>
            </parameter>
          </parameter>
          <parameter key="lock_factory">lock.factory</parameter>
          <parameter key="cache_pool">cache.rate_limiter</parameter>
        </parameter>
        <parameter key="guest_login" type="collection">
          <parameter key="enabled">true</parameter>
          <parameter key="policy">time_backoff</parameter>
          <parameter key="reset">24 hours</parameter>
          <parameter key="limits" type="collection">
            <parameter type="collection">
              <parameter key="limit">10</parameter>
              <parameter key="interval">10 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">15</parameter>
              <parameter key="interval">30 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">20</parameter>
              <parameter key="interval">60 seconds</parameter>
            </parameter>
          </parameter>
          <parameter key="lock_factory">lock.factory</parameter>
          <parameter key="cache_pool">cache.rate_limiter</parameter>
        </parameter>
        <parameter key="oauth" type="collection">
          <parameter key="enabled">true</parameter>
          <parameter key="policy">time_backoff</parameter>
          <parameter key="reset">24 hours</parameter>
          <parameter key="limits" type="collection">
            <parameter type="collection">
              <parameter key="limit">10</parameter>
              <parameter key="interval">10 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">15</parameter>
              <parameter key="interval">30 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">20</parameter>
              <parameter key="interval">60 seconds</parameter>
            </parameter>
          </parameter>
          <parameter key="lock_factory">lock.factory</parameter>
          <parameter key="cache_pool">cache.rate_limiter</parameter>
        </parameter>
        <parameter key="reset_password" type="collection">
          <parameter key="enabled">true</parameter>
          <parameter key="policy">time_backoff</parameter>
          <parameter key="reset">24 hours</parameter>
          <parameter key="limits" type="collection">
            <parameter type="collection">
              <parameter key="limit">3</parameter>
              <parameter key="interval">30 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">5</parameter>
              <parameter key="interval">60 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">10</parameter>
              <parameter key="interval">90 seconds</parameter>
            </parameter>
          </parameter>
          <parameter key="lock_factory">lock.factory</parameter>
          <parameter key="cache_pool">cache.rate_limiter</parameter>
        </parameter>
        <parameter key="user_recovery" type="collection">
          <parameter key="enabled">true</parameter>
          <parameter key="policy">time_backoff</parameter>
          <parameter key="reset">24 hours</parameter>
          <parameter key="limits" type="collection">
            <parameter type="collection">
              <parameter key="limit">3</parameter>
              <parameter key="interval">30 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">5</parameter>
              <parameter key="interval">60 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">10</parameter>
              <parameter key="interval">90 seconds</parameter>
            </parameter>
          </parameter>
          <parameter key="lock_factory">lock.factory</parameter>
          <parameter key="cache_pool">cache.rate_limiter</parameter>
        </parameter>
        <parameter key="contact_form" type="collection">
          <parameter key="enabled">true</parameter>
          <parameter key="policy">time_backoff</parameter>
          <parameter key="reset">24 hours</parameter>
          <parameter key="limits" type="collection">
            <parameter type="collection">
              <parameter key="limit">3</parameter>
              <parameter key="interval">30 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">5</parameter>
              <parameter key="interval">60 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">10</parameter>
              <parameter key="interval">90 seconds</parameter>
            </parameter>
          </parameter>
          <parameter key="lock_factory">lock.factory</parameter>
          <parameter key="cache_pool">cache.rate_limiter</parameter>
        </parameter>
        <parameter key="notification" type="collection">
          <parameter key="enabled">true</parameter>
          <parameter key="policy">time_backoff</parameter>
          <parameter key="reset">24 hours</parameter>
          <parameter key="limits" type="collection">
            <parameter type="collection">
              <parameter key="limit">10</parameter>
              <parameter key="interval">10 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">15</parameter>
              <parameter key="interval">30 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">20</parameter>
              <parameter key="interval">60 seconds</parameter>
            </parameter>
          </parameter>
          <parameter key="lock_factory">lock.factory</parameter>
          <parameter key="cache_pool">cache.rate_limiter</parameter>
        </parameter>
        <parameter key="newsletter_form" type="collection">
          <parameter key="enabled">true</parameter>
          <parameter key="policy">time_backoff</parameter>
          <parameter key="reset">24 hours</parameter>
          <parameter key="limits" type="collection">
            <parameter type="collection">
              <parameter key="limit">3</parameter>
              <parameter key="interval">30 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">5</parameter>
              <parameter key="interval">60 seconds</parameter>
            </parameter>
            <parameter type="collection">
              <parameter key="limit">10</parameter>
              <parameter key="interval">90 seconds</parameter>
            </parameter>
          </parameter>
          <parameter key="lock_factory">lock.factory</parameter>
          <parameter key="cache_pool">cache.rate_limiter</parameter>
        </parameter>
        <parameter key="cart_add_line_item" type="collection">
          <parameter key="enabled">true</parameter>
          <parameter key="policy">system_config</parameter>
          <parameter key="reset">1 hours</parameter>
          <parameter key="limits" type="collection">
            <parameter type="collection">
              <parameter key="domain">core.cart.lineItemAddLimit</parameter>
              <parameter key="interval">60 seconds</parameter>
            </parameter>
          </parameter>
          <parameter key="lock_factory">lock.factory</parameter>
          <parameter key="cache_pool">cache.rate_limiter</parameter>
        </parameter>
      </parameter>
      <parameter key="access_token_ttl">PT10M</parameter>
      <parameter key="refresh_token_ttl">P1W</parameter>
    </parameter>
    <parameter key="shopware.api.max_limit">null</parameter>
    <parameter key="shopware.api.api_browser" type="collection">
      <parameter key="auth_required">false</parameter>
    </parameter>
    <parameter key="shopware.api.api_browser.auth_required">false</parameter>
    <parameter key="shopware.api.api_browser.auth_required_str" type="string">0</parameter>
    <parameter key="shopware.api.store" type="collection">
      <parameter key="context_lifetime">P1D</parameter>
      <parameter key="max_limit">100</parameter>
    </parameter>
    <parameter key="shopware.api.store.context_lifetime">P1D</parameter>
    <parameter key="shopware.api.store.max_limit">100</parameter>
    <parameter key="shopware.api.jwt_key" type="collection">
      <parameter key="private_key_path">file:///home/avinash/Desktop/work/Shopware/config/jwt/private.pem</parameter>
      <parameter key="private_key_passphrase">shopware</parameter>
      <parameter key="public_key_path">file:///home/avinash/Desktop/work/Shopware/config/jwt/public.pem</parameter>
    </parameter>
    <parameter key="shopware.api.jwt_key.private_key_path">file:///home/avinash/Desktop/work/Shopware/config/jwt/private.pem</parameter>
    <parameter key="shopware.api.jwt_key.private_key_passphrase">shopware</parameter>
    <parameter key="shopware.api.jwt_key.public_key_path">file:///home/avinash/Desktop/work/Shopware/config/jwt/public.pem</parameter>
    <parameter key="shopware.api.rate_limiter" type="collection">
      <parameter key="login" type="collection">
        <parameter key="enabled">true</parameter>
        <parameter key="policy">time_backoff</parameter>
        <parameter key="reset">24 hours</parameter>
        <parameter key="limits" type="collection">
          <parameter type="collection">
            <parameter key="limit">10</parameter>
            <parameter key="interval">10 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">15</parameter>
            <parameter key="interval">30 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">20</parameter>
            <parameter key="interval">60 seconds</parameter>
          </parameter>
        </parameter>
        <parameter key="lock_factory">lock.factory</parameter>
        <parameter key="cache_pool">cache.rate_limiter</parameter>
      </parameter>
      <parameter key="guest_login" type="collection">
        <parameter key="enabled">true</parameter>
        <parameter key="policy">time_backoff</parameter>
        <parameter key="reset">24 hours</parameter>
        <parameter key="limits" type="collection">
          <parameter type="collection">
            <parameter key="limit">10</parameter>
            <parameter key="interval">10 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">15</parameter>
            <parameter key="interval">30 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">20</parameter>
            <parameter key="interval">60 seconds</parameter>
          </parameter>
        </parameter>
        <parameter key="lock_factory">lock.factory</parameter>
        <parameter key="cache_pool">cache.rate_limiter</parameter>
      </parameter>
      <parameter key="oauth" type="collection">
        <parameter key="enabled">true</parameter>
        <parameter key="policy">time_backoff</parameter>
        <parameter key="reset">24 hours</parameter>
        <parameter key="limits" type="collection">
          <parameter type="collection">
            <parameter key="limit">10</parameter>
            <parameter key="interval">10 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">15</parameter>
            <parameter key="interval">30 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">20</parameter>
            <parameter key="interval">60 seconds</parameter>
          </parameter>
        </parameter>
        <parameter key="lock_factory">lock.factory</parameter>
        <parameter key="cache_pool">cache.rate_limiter</parameter>
      </parameter>
      <parameter key="reset_password" type="collection">
        <parameter key="enabled">true</parameter>
        <parameter key="policy">time_backoff</parameter>
        <parameter key="reset">24 hours</parameter>
        <parameter key="limits" type="collection">
          <parameter type="collection">
            <parameter key="limit">3</parameter>
            <parameter key="interval">30 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">5</parameter>
            <parameter key="interval">60 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">10</parameter>
            <parameter key="interval">90 seconds</parameter>
          </parameter>
        </parameter>
        <parameter key="lock_factory">lock.factory</parameter>
        <parameter key="cache_pool">cache.rate_limiter</parameter>
      </parameter>
      <parameter key="user_recovery" type="collection">
        <parameter key="enabled">true</parameter>
        <parameter key="policy">time_backoff</parameter>
        <parameter key="reset">24 hours</parameter>
        <parameter key="limits" type="collection">
          <parameter type="collection">
            <parameter key="limit">3</parameter>
            <parameter key="interval">30 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">5</parameter>
            <parameter key="interval">60 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">10</parameter>
            <parameter key="interval">90 seconds</parameter>
          </parameter>
        </parameter>
        <parameter key="lock_factory">lock.factory</parameter>
        <parameter key="cache_pool">cache.rate_limiter</parameter>
      </parameter>
      <parameter key="contact_form" type="collection">
        <parameter key="enabled">true</parameter>
        <parameter key="policy">time_backoff</parameter>
        <parameter key="reset">24 hours</parameter>
        <parameter key="limits" type="collection">
          <parameter type="collection">
            <parameter key="limit">3</parameter>
            <parameter key="interval">30 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">5</parameter>
            <parameter key="interval">60 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">10</parameter>
            <parameter key="interval">90 seconds</parameter>
          </parameter>
        </parameter>
        <parameter key="lock_factory">lock.factory</parameter>
        <parameter key="cache_pool">cache.rate_limiter</parameter>
      </parameter>
      <parameter key="notification" type="collection">
        <parameter key="enabled">true</parameter>
        <parameter key="policy">time_backoff</parameter>
        <parameter key="reset">24 hours</parameter>
        <parameter key="limits" type="collection">
          <parameter type="collection">
            <parameter key="limit">10</parameter>
            <parameter key="interval">10 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">15</parameter>
            <parameter key="interval">30 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">20</parameter>
            <parameter key="interval">60 seconds</parameter>
          </parameter>
        </parameter>
        <parameter key="lock_factory">lock.factory</parameter>
        <parameter key="cache_pool">cache.rate_limiter</parameter>
      </parameter>
      <parameter key="newsletter_form" type="collection">
        <parameter key="enabled">true</parameter>
        <parameter key="policy">time_backoff</parameter>
        <parameter key="reset">24 hours</parameter>
        <parameter key="limits" type="collection">
          <parameter type="collection">
            <parameter key="limit">3</parameter>
            <parameter key="interval">30 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">5</parameter>
            <parameter key="interval">60 seconds</parameter>
          </parameter>
          <parameter type="collection">
            <parameter key="limit">10</parameter>
            <parameter key="interval">90 seconds</parameter>
          </parameter>
        </parameter>
        <parameter key="lock_factory">lock.factory</parameter>
        <parameter key="cache_pool">cache.rate_limiter</parameter>
      </parameter>
      <parameter key="cart_add_line_item" type="collection">
        <parameter key="enabled">true</parameter>
        <parameter key="policy">system_config</parameter>
        <parameter key="reset">1 hours</parameter>
        <parameter key="limits" type="collection">
          <parameter type="collection">
            <parameter key="domain">core.cart.lineItemAddLimit</parameter>
            <parameter key="interval">60 seconds</parameter>
          </parameter>
        </parameter>
        <parameter key="lock_factory">lock.factory</parameter>
        <parameter key="cache_pool">cache.rate_limiter</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.login" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="policy">time_backoff</parameter>
      <parameter key="reset">24 hours</parameter>
      <parameter key="limits" type="collection">
        <parameter type="collection">
          <parameter key="limit">10</parameter>
          <parameter key="interval">10 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">15</parameter>
          <parameter key="interval">30 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">20</parameter>
          <parameter key="interval">60 seconds</parameter>
        </parameter>
      </parameter>
      <parameter key="lock_factory">lock.factory</parameter>
      <parameter key="cache_pool">cache.rate_limiter</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.login.enabled">true</parameter>
    <parameter key="shopware.api.rate_limiter.login.policy">time_backoff</parameter>
    <parameter key="shopware.api.rate_limiter.login.reset">24 hours</parameter>
    <parameter key="shopware.api.rate_limiter.login.limits" type="collection">
      <parameter type="collection">
        <parameter key="limit">10</parameter>
        <parameter key="interval">10 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">15</parameter>
        <parameter key="interval">30 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">20</parameter>
        <parameter key="interval">60 seconds</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.login.limits.0" type="collection">
      <parameter key="limit">10</parameter>
      <parameter key="interval">10 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.login.limits.0.limit">10</parameter>
    <parameter key="shopware.api.rate_limiter.login.limits.0.interval">10 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.login.limits.1" type="collection">
      <parameter key="limit">15</parameter>
      <parameter key="interval">30 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.login.limits.1.limit">15</parameter>
    <parameter key="shopware.api.rate_limiter.login.limits.1.interval">30 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.login.limits.2" type="collection">
      <parameter key="limit">20</parameter>
      <parameter key="interval">60 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.login.limits.2.limit">20</parameter>
    <parameter key="shopware.api.rate_limiter.login.limits.2.interval">60 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.login.lock_factory">lock.factory</parameter>
    <parameter key="shopware.api.rate_limiter.login.cache_pool">cache.rate_limiter</parameter>
    <parameter key="shopware.api.rate_limiter.guest_login" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="policy">time_backoff</parameter>
      <parameter key="reset">24 hours</parameter>
      <parameter key="limits" type="collection">
        <parameter type="collection">
          <parameter key="limit">10</parameter>
          <parameter key="interval">10 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">15</parameter>
          <parameter key="interval">30 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">20</parameter>
          <parameter key="interval">60 seconds</parameter>
        </parameter>
      </parameter>
      <parameter key="lock_factory">lock.factory</parameter>
      <parameter key="cache_pool">cache.rate_limiter</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.enabled">true</parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.policy">time_backoff</parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.reset">24 hours</parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.limits" type="collection">
      <parameter type="collection">
        <parameter key="limit">10</parameter>
        <parameter key="interval">10 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">15</parameter>
        <parameter key="interval">30 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">20</parameter>
        <parameter key="interval">60 seconds</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.limits.0" type="collection">
      <parameter key="limit">10</parameter>
      <parameter key="interval">10 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.limits.0.limit">10</parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.limits.0.interval">10 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.limits.1" type="collection">
      <parameter key="limit">15</parameter>
      <parameter key="interval">30 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.limits.1.limit">15</parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.limits.1.interval">30 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.limits.2" type="collection">
      <parameter key="limit">20</parameter>
      <parameter key="interval">60 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.limits.2.limit">20</parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.limits.2.interval">60 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.lock_factory">lock.factory</parameter>
    <parameter key="shopware.api.rate_limiter.guest_login.cache_pool">cache.rate_limiter</parameter>
    <parameter key="shopware.api.rate_limiter.oauth" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="policy">time_backoff</parameter>
      <parameter key="reset">24 hours</parameter>
      <parameter key="limits" type="collection">
        <parameter type="collection">
          <parameter key="limit">10</parameter>
          <parameter key="interval">10 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">15</parameter>
          <parameter key="interval">30 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">20</parameter>
          <parameter key="interval">60 seconds</parameter>
        </parameter>
      </parameter>
      <parameter key="lock_factory">lock.factory</parameter>
      <parameter key="cache_pool">cache.rate_limiter</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.oauth.enabled">true</parameter>
    <parameter key="shopware.api.rate_limiter.oauth.policy">time_backoff</parameter>
    <parameter key="shopware.api.rate_limiter.oauth.reset">24 hours</parameter>
    <parameter key="shopware.api.rate_limiter.oauth.limits" type="collection">
      <parameter type="collection">
        <parameter key="limit">10</parameter>
        <parameter key="interval">10 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">15</parameter>
        <parameter key="interval">30 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">20</parameter>
        <parameter key="interval">60 seconds</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.oauth.limits.0" type="collection">
      <parameter key="limit">10</parameter>
      <parameter key="interval">10 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.oauth.limits.0.limit">10</parameter>
    <parameter key="shopware.api.rate_limiter.oauth.limits.0.interval">10 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.oauth.limits.1" type="collection">
      <parameter key="limit">15</parameter>
      <parameter key="interval">30 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.oauth.limits.1.limit">15</parameter>
    <parameter key="shopware.api.rate_limiter.oauth.limits.1.interval">30 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.oauth.limits.2" type="collection">
      <parameter key="limit">20</parameter>
      <parameter key="interval">60 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.oauth.limits.2.limit">20</parameter>
    <parameter key="shopware.api.rate_limiter.oauth.limits.2.interval">60 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.oauth.lock_factory">lock.factory</parameter>
    <parameter key="shopware.api.rate_limiter.oauth.cache_pool">cache.rate_limiter</parameter>
    <parameter key="shopware.api.rate_limiter.reset_password" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="policy">time_backoff</parameter>
      <parameter key="reset">24 hours</parameter>
      <parameter key="limits" type="collection">
        <parameter type="collection">
          <parameter key="limit">3</parameter>
          <parameter key="interval">30 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">5</parameter>
          <parameter key="interval">60 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">10</parameter>
          <parameter key="interval">90 seconds</parameter>
        </parameter>
      </parameter>
      <parameter key="lock_factory">lock.factory</parameter>
      <parameter key="cache_pool">cache.rate_limiter</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.enabled">true</parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.policy">time_backoff</parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.reset">24 hours</parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.limits" type="collection">
      <parameter type="collection">
        <parameter key="limit">3</parameter>
        <parameter key="interval">30 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">5</parameter>
        <parameter key="interval">60 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">10</parameter>
        <parameter key="interval">90 seconds</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.limits.0" type="collection">
      <parameter key="limit">3</parameter>
      <parameter key="interval">30 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.limits.0.limit">3</parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.limits.0.interval">30 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.limits.1" type="collection">
      <parameter key="limit">5</parameter>
      <parameter key="interval">60 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.limits.1.limit">5</parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.limits.1.interval">60 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.limits.2" type="collection">
      <parameter key="limit">10</parameter>
      <parameter key="interval">90 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.limits.2.limit">10</parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.limits.2.interval">90 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.lock_factory">lock.factory</parameter>
    <parameter key="shopware.api.rate_limiter.reset_password.cache_pool">cache.rate_limiter</parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="policy">time_backoff</parameter>
      <parameter key="reset">24 hours</parameter>
      <parameter key="limits" type="collection">
        <parameter type="collection">
          <parameter key="limit">3</parameter>
          <parameter key="interval">30 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">5</parameter>
          <parameter key="interval">60 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">10</parameter>
          <parameter key="interval">90 seconds</parameter>
        </parameter>
      </parameter>
      <parameter key="lock_factory">lock.factory</parameter>
      <parameter key="cache_pool">cache.rate_limiter</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.enabled">true</parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.policy">time_backoff</parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.reset">24 hours</parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.limits" type="collection">
      <parameter type="collection">
        <parameter key="limit">3</parameter>
        <parameter key="interval">30 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">5</parameter>
        <parameter key="interval">60 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">10</parameter>
        <parameter key="interval">90 seconds</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.limits.0" type="collection">
      <parameter key="limit">3</parameter>
      <parameter key="interval">30 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.limits.0.limit">3</parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.limits.0.interval">30 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.limits.1" type="collection">
      <parameter key="limit">5</parameter>
      <parameter key="interval">60 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.limits.1.limit">5</parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.limits.1.interval">60 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.limits.2" type="collection">
      <parameter key="limit">10</parameter>
      <parameter key="interval">90 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.limits.2.limit">10</parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.limits.2.interval">90 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.lock_factory">lock.factory</parameter>
    <parameter key="shopware.api.rate_limiter.user_recovery.cache_pool">cache.rate_limiter</parameter>
    <parameter key="shopware.api.rate_limiter.contact_form" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="policy">time_backoff</parameter>
      <parameter key="reset">24 hours</parameter>
      <parameter key="limits" type="collection">
        <parameter type="collection">
          <parameter key="limit">3</parameter>
          <parameter key="interval">30 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">5</parameter>
          <parameter key="interval">60 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">10</parameter>
          <parameter key="interval">90 seconds</parameter>
        </parameter>
      </parameter>
      <parameter key="lock_factory">lock.factory</parameter>
      <parameter key="cache_pool">cache.rate_limiter</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.enabled">true</parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.policy">time_backoff</parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.reset">24 hours</parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.limits" type="collection">
      <parameter type="collection">
        <parameter key="limit">3</parameter>
        <parameter key="interval">30 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">5</parameter>
        <parameter key="interval">60 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">10</parameter>
        <parameter key="interval">90 seconds</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.limits.0" type="collection">
      <parameter key="limit">3</parameter>
      <parameter key="interval">30 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.limits.0.limit">3</parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.limits.0.interval">30 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.limits.1" type="collection">
      <parameter key="limit">5</parameter>
      <parameter key="interval">60 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.limits.1.limit">5</parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.limits.1.interval">60 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.limits.2" type="collection">
      <parameter key="limit">10</parameter>
      <parameter key="interval">90 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.limits.2.limit">10</parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.limits.2.interval">90 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.lock_factory">lock.factory</parameter>
    <parameter key="shopware.api.rate_limiter.contact_form.cache_pool">cache.rate_limiter</parameter>
    <parameter key="shopware.api.rate_limiter.notification" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="policy">time_backoff</parameter>
      <parameter key="reset">24 hours</parameter>
      <parameter key="limits" type="collection">
        <parameter type="collection">
          <parameter key="limit">10</parameter>
          <parameter key="interval">10 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">15</parameter>
          <parameter key="interval">30 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">20</parameter>
          <parameter key="interval">60 seconds</parameter>
        </parameter>
      </parameter>
      <parameter key="lock_factory">lock.factory</parameter>
      <parameter key="cache_pool">cache.rate_limiter</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.notification.enabled">true</parameter>
    <parameter key="shopware.api.rate_limiter.notification.policy">time_backoff</parameter>
    <parameter key="shopware.api.rate_limiter.notification.reset">24 hours</parameter>
    <parameter key="shopware.api.rate_limiter.notification.limits" type="collection">
      <parameter type="collection">
        <parameter key="limit">10</parameter>
        <parameter key="interval">10 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">15</parameter>
        <parameter key="interval">30 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">20</parameter>
        <parameter key="interval">60 seconds</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.notification.limits.0" type="collection">
      <parameter key="limit">10</parameter>
      <parameter key="interval">10 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.notification.limits.0.limit">10</parameter>
    <parameter key="shopware.api.rate_limiter.notification.limits.0.interval">10 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.notification.limits.1" type="collection">
      <parameter key="limit">15</parameter>
      <parameter key="interval">30 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.notification.limits.1.limit">15</parameter>
    <parameter key="shopware.api.rate_limiter.notification.limits.1.interval">30 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.notification.limits.2" type="collection">
      <parameter key="limit">20</parameter>
      <parameter key="interval">60 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.notification.limits.2.limit">20</parameter>
    <parameter key="shopware.api.rate_limiter.notification.limits.2.interval">60 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.notification.lock_factory">lock.factory</parameter>
    <parameter key="shopware.api.rate_limiter.notification.cache_pool">cache.rate_limiter</parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="policy">time_backoff</parameter>
      <parameter key="reset">24 hours</parameter>
      <parameter key="limits" type="collection">
        <parameter type="collection">
          <parameter key="limit">3</parameter>
          <parameter key="interval">30 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">5</parameter>
          <parameter key="interval">60 seconds</parameter>
        </parameter>
        <parameter type="collection">
          <parameter key="limit">10</parameter>
          <parameter key="interval">90 seconds</parameter>
        </parameter>
      </parameter>
      <parameter key="lock_factory">lock.factory</parameter>
      <parameter key="cache_pool">cache.rate_limiter</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.enabled">true</parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.policy">time_backoff</parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.reset">24 hours</parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.limits" type="collection">
      <parameter type="collection">
        <parameter key="limit">3</parameter>
        <parameter key="interval">30 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">5</parameter>
        <parameter key="interval">60 seconds</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="limit">10</parameter>
        <parameter key="interval">90 seconds</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.limits.0" type="collection">
      <parameter key="limit">3</parameter>
      <parameter key="interval">30 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.limits.0.limit">3</parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.limits.0.interval">30 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.limits.1" type="collection">
      <parameter key="limit">5</parameter>
      <parameter key="interval">60 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.limits.1.limit">5</parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.limits.1.interval">60 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.limits.2" type="collection">
      <parameter key="limit">10</parameter>
      <parameter key="interval">90 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.limits.2.limit">10</parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.limits.2.interval">90 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.lock_factory">lock.factory</parameter>
    <parameter key="shopware.api.rate_limiter.newsletter_form.cache_pool">cache.rate_limiter</parameter>
    <parameter key="shopware.api.rate_limiter.cart_add_line_item" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="policy">system_config</parameter>
      <parameter key="reset">1 hours</parameter>
      <parameter key="limits" type="collection">
        <parameter type="collection">
          <parameter key="domain">core.cart.lineItemAddLimit</parameter>
          <parameter key="interval">60 seconds</parameter>
        </parameter>
      </parameter>
      <parameter key="lock_factory">lock.factory</parameter>
      <parameter key="cache_pool">cache.rate_limiter</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.cart_add_line_item.enabled">true</parameter>
    <parameter key="shopware.api.rate_limiter.cart_add_line_item.policy">system_config</parameter>
    <parameter key="shopware.api.rate_limiter.cart_add_line_item.reset">1 hours</parameter>
    <parameter key="shopware.api.rate_limiter.cart_add_line_item.limits" type="collection">
      <parameter type="collection">
        <parameter key="domain">core.cart.lineItemAddLimit</parameter>
        <parameter key="interval">60 seconds</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.cart_add_line_item.limits.0" type="collection">
      <parameter key="domain">core.cart.lineItemAddLimit</parameter>
      <parameter key="interval">60 seconds</parameter>
    </parameter>
    <parameter key="shopware.api.rate_limiter.cart_add_line_item.limits.0.domain">core.cart.lineItemAddLimit</parameter>
    <parameter key="shopware.api.rate_limiter.cart_add_line_item.limits.0.interval">60 seconds</parameter>
    <parameter key="shopware.api.rate_limiter.cart_add_line_item.lock_factory">lock.factory</parameter>
    <parameter key="shopware.api.rate_limiter.cart_add_line_item.cache_pool">cache.rate_limiter</parameter>
    <parameter key="shopware.api.access_token_ttl">PT10M</parameter>
    <parameter key="shopware.api.refresh_token_ttl">P1W</parameter>
    <parameter key="shopware.admin_worker" type="collection">
      <parameter key="enable_admin_worker">true</parameter>
      <parameter key="enable_queue_stats_worker">true</parameter>
      <parameter key="enable_notification_worker">true</parameter>
      <parameter key="poll_interval">20</parameter>
      <parameter key="transports" type="collection">
        <parameter>async</parameter>
        <parameter>low_priority</parameter>
      </parameter>
      <parameter key="memory_limit">128M</parameter>
    </parameter>
    <parameter key="shopware.admin_worker.enable_admin_worker">true</parameter>
    <parameter key="shopware.admin_worker.enable_queue_stats_worker">true</parameter>
    <parameter key="shopware.admin_worker.enable_notification_worker">true</parameter>
    <parameter key="shopware.admin_worker.poll_interval">20</parameter>
    <parameter key="shopware.admin_worker.transports" type="collection">
      <parameter>async</parameter>
      <parameter>low_priority</parameter>
    </parameter>
    <parameter key="shopware.admin_worker.transports.0">async</parameter>
    <parameter key="shopware.admin_worker.transports.1">low_priority</parameter>
    <parameter key="shopware.admin_worker.memory_limit">128M</parameter>
    <parameter key="shopware.auto_update" type="collection">
      <parameter key="enabled">true</parameter>
    </parameter>
    <parameter key="shopware.auto_update.enabled">true</parameter>
    <parameter key="shopware.store" type="collection">
      <parameter key="frw">false</parameter>
    </parameter>
    <parameter key="shopware.sitemap" type="collection">
      <parameter key="batchsize">100</parameter>
      <parameter key="custom_urls" type="collection"/>
      <parameter key="excluded_urls" type="collection"/>
    </parameter>
    <parameter key="shopware.sitemap.batchsize">100</parameter>
    <parameter key="shopware.sitemap.custom_urls" type="collection"/>
    <parameter key="shopware.sitemap.excluded_urls" type="collection"/>
    <parameter key="shopware.deployment" type="collection">
      <parameter key="blue_green">%env(bool:default:defaults_bool_true:BLUE_GREEN_DEPLOYMENT)%</parameter>
      <parameter key="cluster_setup">false</parameter>
    </parameter>
    <parameter key="shopware.deployment.blue_green">%env(bool:default:defaults_bool_true:BLUE_GREEN_DEPLOYMENT)%</parameter>
    <parameter key="shopware.deployment.cluster_setup">false</parameter>
    <parameter key="shopware.media" type="collection">
      <parameter key="enable_url_upload_feature">true</parameter>
      <parameter key="enable_url_validation">false</parameter>
      <parameter key="url_upload_max_size">0</parameter>
    </parameter>
    <parameter key="shopware.media.enable_url_upload_feature">true</parameter>
    <parameter key="shopware.media.enable_url_validation">false</parameter>
    <parameter key="shopware.media.url_upload_max_size">0</parameter>
    <parameter key="shopware.dal" type="collection">
      <parameter key="batch_size">125</parameter>
      <parameter key="max_rule_prices">100</parameter>
      <parameter key="versioning" type="collection">
        <parameter key="expire_days">30</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.dal.batch_size">125</parameter>
    <parameter key="shopware.dal.max_rule_prices">100</parameter>
    <parameter key="shopware.dal.versioning" type="collection">
      <parameter key="expire_days">30</parameter>
    </parameter>
    <parameter key="shopware.dal.versioning.expire_days">30</parameter>
    <parameter key="shopware.mail" type="collection">
      <parameter key="update_mail_variables_on_send">true</parameter>
    </parameter>
    <parameter key="shopware.mail.update_mail_variables_on_send">true</parameter>
    <parameter key="shopware.cart" type="collection">
      <parameter key="compress">false</parameter>
      <parameter key="expire_days">120</parameter>
      <parameter key="redis_url">false</parameter>
    </parameter>
    <parameter key="shopware.cart.compress">false</parameter>
    <parameter key="shopware.cart.expire_days">120</parameter>
    <parameter key="shopware.cart.redis_url">false</parameter>
    <parameter key="shopware.number_range" type="collection">
      <parameter key="increment_storage">SQL</parameter>
      <parameter key="redis_url">false</parameter>
    </parameter>
    <parameter key="shopware.number_range.increment_storage">SQL</parameter>
    <parameter key="shopware.number_range.redis_url">false</parameter>
    <parameter key="shopware.sales_channel_context" type="collection">
      <parameter key="expire_days">120</parameter>
    </parameter>
    <parameter key="shopware.sales_channel_context.expire_days">120</parameter>
    <parameter key="shopware.html_sanitizer" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="cache_dir">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f</parameter>
      <parameter key="cache_enabled">true</parameter>
      <parameter key="sets" type="collection">
        <parameter key="basic" type="collection">
          <parameter key="tags" type="collection">
            <parameter>a</parameter>
            <parameter>abbr</parameter>
            <parameter>acronym</parameter>
            <parameter>address</parameter>
            <parameter>b</parameter>
            <parameter>bdo</parameter>
            <parameter>big</parameter>
            <parameter>blockquote</parameter>
            <parameter>br</parameter>
            <parameter>caption</parameter>
            <parameter>center</parameter>
            <parameter>cite</parameter>
            <parameter>code</parameter>
            <parameter>col</parameter>
            <parameter>colgroup</parameter>
            <parameter>dd</parameter>
            <parameter>del</parameter>
            <parameter>dfn</parameter>
            <parameter>dir</parameter>
            <parameter>div</parameter>
            <parameter>dl</parameter>
            <parameter>dt</parameter>
            <parameter>em</parameter>
            <parameter>font</parameter>
            <parameter>h1</parameter>
            <parameter>h2</parameter>
            <parameter>h3</parameter>
            <parameter>h4</parameter>
            <parameter>h5</parameter>
            <parameter>h6</parameter>
            <parameter>hr</parameter>
            <parameter>i</parameter>
            <parameter>ins</parameter>
            <parameter>kbd</parameter>
            <parameter>li</parameter>
            <parameter>menu</parameter>
            <parameter>ol</parameter>
            <parameter>p</parameter>
            <parameter>pre</parameter>
            <parameter>q</parameter>
            <parameter>s</parameter>
            <parameter>samp</parameter>
            <parameter>small</parameter>
            <parameter>span</parameter>
            <parameter>strike</parameter>
            <parameter>strong</parameter>
            <parameter>sub</parameter>
            <parameter>sup</parameter>
            <parameter>table</parameter>
            <parameter>tbody</parameter>
            <parameter>td</parameter>
            <parameter>tfoot</parameter>
            <parameter>th</parameter>
            <parameter>thead</parameter>
            <parameter>tr</parameter>
            <parameter>tt</parameter>
            <parameter>u</parameter>
            <parameter>ul</parameter>
            <parameter>var</parameter>
            <parameter>img</parameter>
          </parameter>
          <parameter key="attributes" type="collection">
            <parameter>align</parameter>
            <parameter>bgcolor</parameter>
            <parameter>border</parameter>
            <parameter>cellpadding</parameter>
            <parameter>cellspacing</parameter>
            <parameter>cite</parameter>
            <parameter>class</parameter>
            <parameter>clear</parameter>
            <parameter>color</parameter>
            <parameter>colspan</parameter>
            <parameter>dir</parameter>
            <parameter>face</parameter>
            <parameter>frame</parameter>
            <parameter>height</parameter>
            <parameter>href</parameter>
            <parameter>id</parameter>
            <parameter>lang</parameter>
            <parameter>name</parameter>
            <parameter>noshade</parameter>
            <parameter>nowrap</parameter>
            <parameter>rel</parameter>
            <parameter>rev</parameter>
            <parameter>rowspan</parameter>
            <parameter>scope</parameter>
            <parameter>size</parameter>
            <parameter>span</parameter>
            <parameter>start</parameter>
            <parameter>style</parameter>
            <parameter>summary</parameter>
            <parameter>title</parameter>
            <parameter>type</parameter>
            <parameter>valign</parameter>
            <parameter>value</parameter>
            <parameter>width</parameter>
            <parameter>target</parameter>
            <parameter>src</parameter>
            <parameter>alt</parameter>
          </parameter>
          <parameter key="options" type="collection">
            <parameter key="Attr.AllowedFrameTargets" type="collection">
              <parameter key="values" type="collection">
                <parameter>_blank</parameter>
                <parameter>_self</parameter>
                <parameter>_parent</parameter>
                <parameter>_top</parameter>
              </parameter>
            </parameter>
            <parameter key="Attr.AllowedRel" type="collection">
              <parameter key="values" type="collection">
                <parameter>nofollow</parameter>
                <parameter>print</parameter>
              </parameter>
            </parameter>
            <parameter key="Attr.EnableID">true</parameter>
          </parameter>
          <parameter key="custom_attributes" type="collection"/>
        </parameter>
        <parameter key="media" type="collection">
          <parameter key="tags" type="collection">
            <parameter>img</parameter>
          </parameter>
          <parameter key="attributes" type="collection">
            <parameter>src</parameter>
            <parameter>alt</parameter>
          </parameter>
          <parameter key="custom_attributes" type="collection"/>
          <parameter key="options" type="collection"/>
        </parameter>
        <parameter key="script" type="collection">
          <parameter key="tags" type="collection">
            <parameter>script</parameter>
          </parameter>
          <parameter key="options" type="collection">
            <parameter key="HTML.Trusted">true</parameter>
          </parameter>
          <parameter key="attributes" type="collection"/>
          <parameter key="custom_attributes" type="collection"/>
        </parameter>
        <parameter key="tidy" type="collection">
          <parameter key="options" type="collection">
            <parameter key="Output.TidyFormat">true</parameter>
          </parameter>
          <parameter key="tags" type="collection"/>
          <parameter key="attributes" type="collection"/>
          <parameter key="custom_attributes" type="collection"/>
        </parameter>
        <parameter key="bootstrap" type="collection">
          <parameter key="tags" type="collection">
            <parameter>a</parameter>
            <parameter>span</parameter>
          </parameter>
          <parameter key="attributes" type="collection">
            <parameter>role</parameter>
            <parameter>aria-label</parameter>
            <parameter>aria-labelledly</parameter>
            <parameter>aria-current</parameter>
            <parameter>aria-expanded</parameter>
            <parameter>aria-controls</parameter>
            <parameter>aria-hidden</parameter>
            <parameter>aria-describedby</parameter>
            <parameter>tabindex</parameter>
            <parameter>aria-modal</parameter>
            <parameter>data-bs-toggle</parameter>
            <parameter>data-bs-target</parameter>
            <parameter>data-bs-dismiss</parameter>
            <parameter>data-bs-slide</parameter>
            <parameter>data-bs-slide-to</parameter>
            <parameter>data-bs-parent</parameter>
            <parameter>data-bs-config</parameter>
            <parameter>data-bs-content</parameter>
            <parameter>data-bs-spy</parameter>
          </parameter>
          <parameter key="custom_attributes" type="collection">
            <parameter type="collection">
              <parameter key="tags" type="collection">
                <parameter>a</parameter>
                <parameter>span</parameter>
              </parameter>
              <parameter key="attributes" type="collection">
                <parameter>href</parameter>
                <parameter>role</parameter>
                <parameter>aria-label</parameter>
                <parameter>aria-labelledly</parameter>
                <parameter>aria-current</parameter>
                <parameter>aria-expanded</parameter>
                <parameter>aria-controls</parameter>
                <parameter>aria-hidden</parameter>
                <parameter>aria-describedby</parameter>
                <parameter>tabindex</parameter>
                <parameter>aria-modal</parameter>
                <parameter>data-bs-toggle</parameter>
                <parameter>data-bs-target</parameter>
                <parameter>data-bs-dismiss</parameter>
                <parameter>data-bs-slide</parameter>
                <parameter>data-bs-slide-to</parameter>
                <parameter>data-bs-parent</parameter>
                <parameter>data-bs-config</parameter>
                <parameter>data-bs-content</parameter>
                <parameter>data-bs-spy</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter key="options" type="collection"/>
        </parameter>
        <parameter key="snippet" type="collection">
          <parameter key="tags" type="collection">
            <parameter>a</parameter>
          </parameter>
          <parameter key="attributes" type="collection">
            <parameter>data-url</parameter>
            <parameter>data-ajax-modal</parameter>
          </parameter>
          <parameter key="custom_attributes" type="collection">
            <parameter type="collection">
              <parameter key="tags" type="collection">
                <parameter>a</parameter>
              </parameter>
              <parameter key="attributes" type="collection">
                <parameter>data-url</parameter>
                <parameter>data-ajax-modal</parameter>
              </parameter>
            </parameter>
          </parameter>
          <parameter key="options" type="collection"/>
        </parameter>
      </parameter>
      <parameter key="fields" type="collection">
        <parameter key="product_translation.description" type="collection">
          <parameter key="sets" type="collection">
            <parameter>basic</parameter>
            <parameter>media</parameter>
          </parameter>
        </parameter>
        <parameter key="app_cms_block.template" type="collection">
          <parameter key="sets" type="collection">
            <parameter>basic</parameter>
            <parameter>media</parameter>
            <parameter>tidy</parameter>
          </parameter>
        </parameter>
        <parameter key="snippet.value" type="collection">
          <parameter key="sets" type="collection">
            <parameter>basic</parameter>
            <parameter>media</parameter>
            <parameter>bootstrap</parameter>
            <parameter>snippet</parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.enabled">true</parameter>
    <parameter key="shopware.html_sanitizer.cache_dir">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f</parameter>
    <parameter key="shopware.html_sanitizer.cache_enabled">true</parameter>
    <parameter key="shopware.html_sanitizer.sets" type="collection">
      <parameter key="basic" type="collection">
        <parameter key="tags" type="collection">
          <parameter>a</parameter>
          <parameter>abbr</parameter>
          <parameter>acronym</parameter>
          <parameter>address</parameter>
          <parameter>b</parameter>
          <parameter>bdo</parameter>
          <parameter>big</parameter>
          <parameter>blockquote</parameter>
          <parameter>br</parameter>
          <parameter>caption</parameter>
          <parameter>center</parameter>
          <parameter>cite</parameter>
          <parameter>code</parameter>
          <parameter>col</parameter>
          <parameter>colgroup</parameter>
          <parameter>dd</parameter>
          <parameter>del</parameter>
          <parameter>dfn</parameter>
          <parameter>dir</parameter>
          <parameter>div</parameter>
          <parameter>dl</parameter>
          <parameter>dt</parameter>
          <parameter>em</parameter>
          <parameter>font</parameter>
          <parameter>h1</parameter>
          <parameter>h2</parameter>
          <parameter>h3</parameter>
          <parameter>h4</parameter>
          <parameter>h5</parameter>
          <parameter>h6</parameter>
          <parameter>hr</parameter>
          <parameter>i</parameter>
          <parameter>ins</parameter>
          <parameter>kbd</parameter>
          <parameter>li</parameter>
          <parameter>menu</parameter>
          <parameter>ol</parameter>
          <parameter>p</parameter>
          <parameter>pre</parameter>
          <parameter>q</parameter>
          <parameter>s</parameter>
          <parameter>samp</parameter>
          <parameter>small</parameter>
          <parameter>span</parameter>
          <parameter>strike</parameter>
          <parameter>strong</parameter>
          <parameter>sub</parameter>
          <parameter>sup</parameter>
          <parameter>table</parameter>
          <parameter>tbody</parameter>
          <parameter>td</parameter>
          <parameter>tfoot</parameter>
          <parameter>th</parameter>
          <parameter>thead</parameter>
          <parameter>tr</parameter>
          <parameter>tt</parameter>
          <parameter>u</parameter>
          <parameter>ul</parameter>
          <parameter>var</parameter>
          <parameter>img</parameter>
        </parameter>
        <parameter key="attributes" type="collection">
          <parameter>align</parameter>
          <parameter>bgcolor</parameter>
          <parameter>border</parameter>
          <parameter>cellpadding</parameter>
          <parameter>cellspacing</parameter>
          <parameter>cite</parameter>
          <parameter>class</parameter>
          <parameter>clear</parameter>
          <parameter>color</parameter>
          <parameter>colspan</parameter>
          <parameter>dir</parameter>
          <parameter>face</parameter>
          <parameter>frame</parameter>
          <parameter>height</parameter>
          <parameter>href</parameter>
          <parameter>id</parameter>
          <parameter>lang</parameter>
          <parameter>name</parameter>
          <parameter>noshade</parameter>
          <parameter>nowrap</parameter>
          <parameter>rel</parameter>
          <parameter>rev</parameter>
          <parameter>rowspan</parameter>
          <parameter>scope</parameter>
          <parameter>size</parameter>
          <parameter>span</parameter>
          <parameter>start</parameter>
          <parameter>style</parameter>
          <parameter>summary</parameter>
          <parameter>title</parameter>
          <parameter>type</parameter>
          <parameter>valign</parameter>
          <parameter>value</parameter>
          <parameter>width</parameter>
          <parameter>target</parameter>
          <parameter>src</parameter>
          <parameter>alt</parameter>
        </parameter>
        <parameter key="options" type="collection">
          <parameter key="Attr.AllowedFrameTargets" type="collection">
            <parameter key="values" type="collection">
              <parameter>_blank</parameter>
              <parameter>_self</parameter>
              <parameter>_parent</parameter>
              <parameter>_top</parameter>
            </parameter>
          </parameter>
          <parameter key="Attr.AllowedRel" type="collection">
            <parameter key="values" type="collection">
              <parameter>nofollow</parameter>
              <parameter>print</parameter>
            </parameter>
          </parameter>
          <parameter key="Attr.EnableID">true</parameter>
        </parameter>
        <parameter key="custom_attributes" type="collection"/>
      </parameter>
      <parameter key="media" type="collection">
        <parameter key="tags" type="collection">
          <parameter>img</parameter>
        </parameter>
        <parameter key="attributes" type="collection">
          <parameter>src</parameter>
          <parameter>alt</parameter>
        </parameter>
        <parameter key="custom_attributes" type="collection"/>
        <parameter key="options" type="collection"/>
      </parameter>
      <parameter key="script" type="collection">
        <parameter key="tags" type="collection">
          <parameter>script</parameter>
        </parameter>
        <parameter key="options" type="collection">
          <parameter key="HTML.Trusted">true</parameter>
        </parameter>
        <parameter key="attributes" type="collection"/>
        <parameter key="custom_attributes" type="collection"/>
      </parameter>
      <parameter key="tidy" type="collection">
        <parameter key="options" type="collection">
          <parameter key="Output.TidyFormat">true</parameter>
        </parameter>
        <parameter key="tags" type="collection"/>
        <parameter key="attributes" type="collection"/>
        <parameter key="custom_attributes" type="collection"/>
      </parameter>
      <parameter key="bootstrap" type="collection">
        <parameter key="tags" type="collection">
          <parameter>a</parameter>
          <parameter>span</parameter>
        </parameter>
        <parameter key="attributes" type="collection">
          <parameter>role</parameter>
          <parameter>aria-label</parameter>
          <parameter>aria-labelledly</parameter>
          <parameter>aria-current</parameter>
          <parameter>aria-expanded</parameter>
          <parameter>aria-controls</parameter>
          <parameter>aria-hidden</parameter>
          <parameter>aria-describedby</parameter>
          <parameter>tabindex</parameter>
          <parameter>aria-modal</parameter>
          <parameter>data-bs-toggle</parameter>
          <parameter>data-bs-target</parameter>
          <parameter>data-bs-dismiss</parameter>
          <parameter>data-bs-slide</parameter>
          <parameter>data-bs-slide-to</parameter>
          <parameter>data-bs-parent</parameter>
          <parameter>data-bs-config</parameter>
          <parameter>data-bs-content</parameter>
          <parameter>data-bs-spy</parameter>
        </parameter>
        <parameter key="custom_attributes" type="collection">
          <parameter type="collection">
            <parameter key="tags" type="collection">
              <parameter>a</parameter>
              <parameter>span</parameter>
            </parameter>
            <parameter key="attributes" type="collection">
              <parameter>href</parameter>
              <parameter>role</parameter>
              <parameter>aria-label</parameter>
              <parameter>aria-labelledly</parameter>
              <parameter>aria-current</parameter>
              <parameter>aria-expanded</parameter>
              <parameter>aria-controls</parameter>
              <parameter>aria-hidden</parameter>
              <parameter>aria-describedby</parameter>
              <parameter>tabindex</parameter>
              <parameter>aria-modal</parameter>
              <parameter>data-bs-toggle</parameter>
              <parameter>data-bs-target</parameter>
              <parameter>data-bs-dismiss</parameter>
              <parameter>data-bs-slide</parameter>
              <parameter>data-bs-slide-to</parameter>
              <parameter>data-bs-parent</parameter>
              <parameter>data-bs-config</parameter>
              <parameter>data-bs-content</parameter>
              <parameter>data-bs-spy</parameter>
            </parameter>
          </parameter>
        </parameter>
        <parameter key="options" type="collection"/>
      </parameter>
      <parameter key="snippet" type="collection">
        <parameter key="tags" type="collection">
          <parameter>a</parameter>
        </parameter>
        <parameter key="attributes" type="collection">
          <parameter>data-url</parameter>
          <parameter>data-ajax-modal</parameter>
        </parameter>
        <parameter key="custom_attributes" type="collection">
          <parameter type="collection">
            <parameter key="tags" type="collection">
              <parameter>a</parameter>
            </parameter>
            <parameter key="attributes" type="collection">
              <parameter>data-url</parameter>
              <parameter>data-ajax-modal</parameter>
            </parameter>
          </parameter>
        </parameter>
        <parameter key="options" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.basic" type="collection">
      <parameter key="tags" type="collection">
        <parameter>a</parameter>
        <parameter>abbr</parameter>
        <parameter>acronym</parameter>
        <parameter>address</parameter>
        <parameter>b</parameter>
        <parameter>bdo</parameter>
        <parameter>big</parameter>
        <parameter>blockquote</parameter>
        <parameter>br</parameter>
        <parameter>caption</parameter>
        <parameter>center</parameter>
        <parameter>cite</parameter>
        <parameter>code</parameter>
        <parameter>col</parameter>
        <parameter>colgroup</parameter>
        <parameter>dd</parameter>
        <parameter>del</parameter>
        <parameter>dfn</parameter>
        <parameter>dir</parameter>
        <parameter>div</parameter>
        <parameter>dl</parameter>
        <parameter>dt</parameter>
        <parameter>em</parameter>
        <parameter>font</parameter>
        <parameter>h1</parameter>
        <parameter>h2</parameter>
        <parameter>h3</parameter>
        <parameter>h4</parameter>
        <parameter>h5</parameter>
        <parameter>h6</parameter>
        <parameter>hr</parameter>
        <parameter>i</parameter>
        <parameter>ins</parameter>
        <parameter>kbd</parameter>
        <parameter>li</parameter>
        <parameter>menu</parameter>
        <parameter>ol</parameter>
        <parameter>p</parameter>
        <parameter>pre</parameter>
        <parameter>q</parameter>
        <parameter>s</parameter>
        <parameter>samp</parameter>
        <parameter>small</parameter>
        <parameter>span</parameter>
        <parameter>strike</parameter>
        <parameter>strong</parameter>
        <parameter>sub</parameter>
        <parameter>sup</parameter>
        <parameter>table</parameter>
        <parameter>tbody</parameter>
        <parameter>td</parameter>
        <parameter>tfoot</parameter>
        <parameter>th</parameter>
        <parameter>thead</parameter>
        <parameter>tr</parameter>
        <parameter>tt</parameter>
        <parameter>u</parameter>
        <parameter>ul</parameter>
        <parameter>var</parameter>
        <parameter>img</parameter>
      </parameter>
      <parameter key="attributes" type="collection">
        <parameter>align</parameter>
        <parameter>bgcolor</parameter>
        <parameter>border</parameter>
        <parameter>cellpadding</parameter>
        <parameter>cellspacing</parameter>
        <parameter>cite</parameter>
        <parameter>class</parameter>
        <parameter>clear</parameter>
        <parameter>color</parameter>
        <parameter>colspan</parameter>
        <parameter>dir</parameter>
        <parameter>face</parameter>
        <parameter>frame</parameter>
        <parameter>height</parameter>
        <parameter>href</parameter>
        <parameter>id</parameter>
        <parameter>lang</parameter>
        <parameter>name</parameter>
        <parameter>noshade</parameter>
        <parameter>nowrap</parameter>
        <parameter>rel</parameter>
        <parameter>rev</parameter>
        <parameter>rowspan</parameter>
        <parameter>scope</parameter>
        <parameter>size</parameter>
        <parameter>span</parameter>
        <parameter>start</parameter>
        <parameter>style</parameter>
        <parameter>summary</parameter>
        <parameter>title</parameter>
        <parameter>type</parameter>
        <parameter>valign</parameter>
        <parameter>value</parameter>
        <parameter>width</parameter>
        <parameter>target</parameter>
        <parameter>src</parameter>
        <parameter>alt</parameter>
      </parameter>
      <parameter key="options" type="collection">
        <parameter key="Attr.AllowedFrameTargets" type="collection">
          <parameter key="values" type="collection">
            <parameter>_blank</parameter>
            <parameter>_self</parameter>
            <parameter>_parent</parameter>
            <parameter>_top</parameter>
          </parameter>
        </parameter>
        <parameter key="Attr.AllowedRel" type="collection">
          <parameter key="values" type="collection">
            <parameter>nofollow</parameter>
            <parameter>print</parameter>
          </parameter>
        </parameter>
        <parameter key="Attr.EnableID">true</parameter>
      </parameter>
      <parameter key="custom_attributes" type="collection"/>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags" type="collection">
      <parameter>a</parameter>
      <parameter>abbr</parameter>
      <parameter>acronym</parameter>
      <parameter>address</parameter>
      <parameter>b</parameter>
      <parameter>bdo</parameter>
      <parameter>big</parameter>
      <parameter>blockquote</parameter>
      <parameter>br</parameter>
      <parameter>caption</parameter>
      <parameter>center</parameter>
      <parameter>cite</parameter>
      <parameter>code</parameter>
      <parameter>col</parameter>
      <parameter>colgroup</parameter>
      <parameter>dd</parameter>
      <parameter>del</parameter>
      <parameter>dfn</parameter>
      <parameter>dir</parameter>
      <parameter>div</parameter>
      <parameter>dl</parameter>
      <parameter>dt</parameter>
      <parameter>em</parameter>
      <parameter>font</parameter>
      <parameter>h1</parameter>
      <parameter>h2</parameter>
      <parameter>h3</parameter>
      <parameter>h4</parameter>
      <parameter>h5</parameter>
      <parameter>h6</parameter>
      <parameter>hr</parameter>
      <parameter>i</parameter>
      <parameter>ins</parameter>
      <parameter>kbd</parameter>
      <parameter>li</parameter>
      <parameter>menu</parameter>
      <parameter>ol</parameter>
      <parameter>p</parameter>
      <parameter>pre</parameter>
      <parameter>q</parameter>
      <parameter>s</parameter>
      <parameter>samp</parameter>
      <parameter>small</parameter>
      <parameter>span</parameter>
      <parameter>strike</parameter>
      <parameter>strong</parameter>
      <parameter>sub</parameter>
      <parameter>sup</parameter>
      <parameter>table</parameter>
      <parameter>tbody</parameter>
      <parameter>td</parameter>
      <parameter>tfoot</parameter>
      <parameter>th</parameter>
      <parameter>thead</parameter>
      <parameter>tr</parameter>
      <parameter>tt</parameter>
      <parameter>u</parameter>
      <parameter>ul</parameter>
      <parameter>var</parameter>
      <parameter>img</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.0">a</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.1">abbr</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.2">acronym</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.3">address</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.4">b</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.5">bdo</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.6">big</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.7">blockquote</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.8">br</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.9">caption</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.10">center</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.11">cite</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.12">code</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.13">col</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.14">colgroup</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.15">dd</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.16">del</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.17">dfn</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.18">dir</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.19">div</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.20">dl</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.21">dt</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.22">em</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.23">font</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.24">h1</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.25">h2</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.26">h3</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.27">h4</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.28">h5</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.29">h6</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.30">hr</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.31">i</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.32">ins</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.33">kbd</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.34">li</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.35">menu</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.36">ol</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.37">p</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.38">pre</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.39">q</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.40">s</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.41">samp</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.42">small</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.43">span</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.44">strike</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.45">strong</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.46">sub</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.47">sup</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.48">table</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.49">tbody</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.50">td</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.51">tfoot</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.52">th</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.53">thead</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.54">tr</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.55">tt</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.56">u</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.57">ul</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.58">var</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.tags.59">img</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes" type="collection">
      <parameter>align</parameter>
      <parameter>bgcolor</parameter>
      <parameter>border</parameter>
      <parameter>cellpadding</parameter>
      <parameter>cellspacing</parameter>
      <parameter>cite</parameter>
      <parameter>class</parameter>
      <parameter>clear</parameter>
      <parameter>color</parameter>
      <parameter>colspan</parameter>
      <parameter>dir</parameter>
      <parameter>face</parameter>
      <parameter>frame</parameter>
      <parameter>height</parameter>
      <parameter>href</parameter>
      <parameter>id</parameter>
      <parameter>lang</parameter>
      <parameter>name</parameter>
      <parameter>noshade</parameter>
      <parameter>nowrap</parameter>
      <parameter>rel</parameter>
      <parameter>rev</parameter>
      <parameter>rowspan</parameter>
      <parameter>scope</parameter>
      <parameter>size</parameter>
      <parameter>span</parameter>
      <parameter>start</parameter>
      <parameter>style</parameter>
      <parameter>summary</parameter>
      <parameter>title</parameter>
      <parameter>type</parameter>
      <parameter>valign</parameter>
      <parameter>value</parameter>
      <parameter>width</parameter>
      <parameter>target</parameter>
      <parameter>src</parameter>
      <parameter>alt</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.0">align</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.1">bgcolor</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.2">border</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.3">cellpadding</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.4">cellspacing</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.5">cite</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.6">class</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.7">clear</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.8">color</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.9">colspan</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.10">dir</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.11">face</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.12">frame</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.13">height</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.14">href</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.15">id</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.16">lang</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.17">name</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.18">noshade</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.19">nowrap</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.20">rel</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.21">rev</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.22">rowspan</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.23">scope</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.24">size</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.25">span</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.26">start</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.27">style</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.28">summary</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.29">title</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.30">type</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.31">valign</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.32">value</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.33">width</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.34">target</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.35">src</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.attributes.36">alt</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options" type="collection">
      <parameter key="Attr.AllowedFrameTargets" type="collection">
        <parameter key="values" type="collection">
          <parameter>_blank</parameter>
          <parameter>_self</parameter>
          <parameter>_parent</parameter>
          <parameter>_top</parameter>
        </parameter>
      </parameter>
      <parameter key="Attr.AllowedRel" type="collection">
        <parameter key="values" type="collection">
          <parameter>nofollow</parameter>
          <parameter>print</parameter>
        </parameter>
      </parameter>
      <parameter key="Attr.EnableID">true</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options.Attr.AllowedFrameTargets" type="collection">
      <parameter key="values" type="collection">
        <parameter>_blank</parameter>
        <parameter>_self</parameter>
        <parameter>_parent</parameter>
        <parameter>_top</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options.Attr.AllowedFrameTargets.values" type="collection">
      <parameter>_blank</parameter>
      <parameter>_self</parameter>
      <parameter>_parent</parameter>
      <parameter>_top</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options.Attr.AllowedFrameTargets.values.0">_blank</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options.Attr.AllowedFrameTargets.values.1">_self</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options.Attr.AllowedFrameTargets.values.2">_parent</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options.Attr.AllowedFrameTargets.values.3">_top</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options.Attr.AllowedRel" type="collection">
      <parameter key="values" type="collection">
        <parameter>nofollow</parameter>
        <parameter>print</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options.Attr.AllowedRel.values" type="collection">
      <parameter>nofollow</parameter>
      <parameter>print</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options.Attr.AllowedRel.values.0">nofollow</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options.Attr.AllowedRel.values.1">print</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.options.Attr.EnableID">true</parameter>
    <parameter key="shopware.html_sanitizer.sets.basic.custom_attributes" type="collection"/>
    <parameter key="shopware.html_sanitizer.sets.media" type="collection">
      <parameter key="tags" type="collection">
        <parameter>img</parameter>
      </parameter>
      <parameter key="attributes" type="collection">
        <parameter>src</parameter>
        <parameter>alt</parameter>
      </parameter>
      <parameter key="custom_attributes" type="collection"/>
      <parameter key="options" type="collection"/>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.media.tags" type="collection">
      <parameter>img</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.media.tags.0">img</parameter>
    <parameter key="shopware.html_sanitizer.sets.media.attributes" type="collection">
      <parameter>src</parameter>
      <parameter>alt</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.media.attributes.0">src</parameter>
    <parameter key="shopware.html_sanitizer.sets.media.attributes.1">alt</parameter>
    <parameter key="shopware.html_sanitizer.sets.media.custom_attributes" type="collection"/>
    <parameter key="shopware.html_sanitizer.sets.media.options" type="collection"/>
    <parameter key="shopware.html_sanitizer.sets.script" type="collection">
      <parameter key="tags" type="collection">
        <parameter>script</parameter>
      </parameter>
      <parameter key="options" type="collection">
        <parameter key="HTML.Trusted">true</parameter>
      </parameter>
      <parameter key="attributes" type="collection"/>
      <parameter key="custom_attributes" type="collection"/>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.script.tags" type="collection">
      <parameter>script</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.script.tags.0">script</parameter>
    <parameter key="shopware.html_sanitizer.sets.script.options" type="collection">
      <parameter key="HTML.Trusted">true</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.script.options.HTML.Trusted">true</parameter>
    <parameter key="shopware.html_sanitizer.sets.script.attributes" type="collection"/>
    <parameter key="shopware.html_sanitizer.sets.script.custom_attributes" type="collection"/>
    <parameter key="shopware.html_sanitizer.sets.tidy" type="collection">
      <parameter key="options" type="collection">
        <parameter key="Output.TidyFormat">true</parameter>
      </parameter>
      <parameter key="tags" type="collection"/>
      <parameter key="attributes" type="collection"/>
      <parameter key="custom_attributes" type="collection"/>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.tidy.options" type="collection">
      <parameter key="Output.TidyFormat">true</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.tidy.options.Output.TidyFormat">true</parameter>
    <parameter key="shopware.html_sanitizer.sets.tidy.tags" type="collection"/>
    <parameter key="shopware.html_sanitizer.sets.tidy.attributes" type="collection"/>
    <parameter key="shopware.html_sanitizer.sets.tidy.custom_attributes" type="collection"/>
    <parameter key="shopware.html_sanitizer.sets.bootstrap" type="collection">
      <parameter key="tags" type="collection">
        <parameter>a</parameter>
        <parameter>span</parameter>
      </parameter>
      <parameter key="attributes" type="collection">
        <parameter>role</parameter>
        <parameter>aria-label</parameter>
        <parameter>aria-labelledly</parameter>
        <parameter>aria-current</parameter>
        <parameter>aria-expanded</parameter>
        <parameter>aria-controls</parameter>
        <parameter>aria-hidden</parameter>
        <parameter>aria-describedby</parameter>
        <parameter>tabindex</parameter>
        <parameter>aria-modal</parameter>
        <parameter>data-bs-toggle</parameter>
        <parameter>data-bs-target</parameter>
        <parameter>data-bs-dismiss</parameter>
        <parameter>data-bs-slide</parameter>
        <parameter>data-bs-slide-to</parameter>
        <parameter>data-bs-parent</parameter>
        <parameter>data-bs-config</parameter>
        <parameter>data-bs-content</parameter>
        <parameter>data-bs-spy</parameter>
      </parameter>
      <parameter key="custom_attributes" type="collection">
        <parameter type="collection">
          <parameter key="tags" type="collection">
            <parameter>a</parameter>
            <parameter>span</parameter>
          </parameter>
          <parameter key="attributes" type="collection">
            <parameter>href</parameter>
            <parameter>role</parameter>
            <parameter>aria-label</parameter>
            <parameter>aria-labelledly</parameter>
            <parameter>aria-current</parameter>
            <parameter>aria-expanded</parameter>
            <parameter>aria-controls</parameter>
            <parameter>aria-hidden</parameter>
            <parameter>aria-describedby</parameter>
            <parameter>tabindex</parameter>
            <parameter>aria-modal</parameter>
            <parameter>data-bs-toggle</parameter>
            <parameter>data-bs-target</parameter>
            <parameter>data-bs-dismiss</parameter>
            <parameter>data-bs-slide</parameter>
            <parameter>data-bs-slide-to</parameter>
            <parameter>data-bs-parent</parameter>
            <parameter>data-bs-config</parameter>
            <parameter>data-bs-content</parameter>
            <parameter>data-bs-spy</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="options" type="collection"/>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.tags" type="collection">
      <parameter>a</parameter>
      <parameter>span</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.tags.0">a</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.tags.1">span</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes" type="collection">
      <parameter>role</parameter>
      <parameter>aria-label</parameter>
      <parameter>aria-labelledly</parameter>
      <parameter>aria-current</parameter>
      <parameter>aria-expanded</parameter>
      <parameter>aria-controls</parameter>
      <parameter>aria-hidden</parameter>
      <parameter>aria-describedby</parameter>
      <parameter>tabindex</parameter>
      <parameter>aria-modal</parameter>
      <parameter>data-bs-toggle</parameter>
      <parameter>data-bs-target</parameter>
      <parameter>data-bs-dismiss</parameter>
      <parameter>data-bs-slide</parameter>
      <parameter>data-bs-slide-to</parameter>
      <parameter>data-bs-parent</parameter>
      <parameter>data-bs-config</parameter>
      <parameter>data-bs-content</parameter>
      <parameter>data-bs-spy</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.0">role</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.1">aria-label</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.2">aria-labelledly</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.3">aria-current</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.4">aria-expanded</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.5">aria-controls</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.6">aria-hidden</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.7">aria-describedby</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.8">tabindex</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.9">aria-modal</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.10">data-bs-toggle</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.11">data-bs-target</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.12">data-bs-dismiss</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.13">data-bs-slide</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.14">data-bs-slide-to</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.15">data-bs-parent</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.16">data-bs-config</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.17">data-bs-content</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.attributes.18">data-bs-spy</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes" type="collection">
      <parameter type="collection">
        <parameter key="tags" type="collection">
          <parameter>a</parameter>
          <parameter>span</parameter>
        </parameter>
        <parameter key="attributes" type="collection">
          <parameter>href</parameter>
          <parameter>role</parameter>
          <parameter>aria-label</parameter>
          <parameter>aria-labelledly</parameter>
          <parameter>aria-current</parameter>
          <parameter>aria-expanded</parameter>
          <parameter>aria-controls</parameter>
          <parameter>aria-hidden</parameter>
          <parameter>aria-describedby</parameter>
          <parameter>tabindex</parameter>
          <parameter>aria-modal</parameter>
          <parameter>data-bs-toggle</parameter>
          <parameter>data-bs-target</parameter>
          <parameter>data-bs-dismiss</parameter>
          <parameter>data-bs-slide</parameter>
          <parameter>data-bs-slide-to</parameter>
          <parameter>data-bs-parent</parameter>
          <parameter>data-bs-config</parameter>
          <parameter>data-bs-content</parameter>
          <parameter>data-bs-spy</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0" type="collection">
      <parameter key="tags" type="collection">
        <parameter>a</parameter>
        <parameter>span</parameter>
      </parameter>
      <parameter key="attributes" type="collection">
        <parameter>href</parameter>
        <parameter>role</parameter>
        <parameter>aria-label</parameter>
        <parameter>aria-labelledly</parameter>
        <parameter>aria-current</parameter>
        <parameter>aria-expanded</parameter>
        <parameter>aria-controls</parameter>
        <parameter>aria-hidden</parameter>
        <parameter>aria-describedby</parameter>
        <parameter>tabindex</parameter>
        <parameter>aria-modal</parameter>
        <parameter>data-bs-toggle</parameter>
        <parameter>data-bs-target</parameter>
        <parameter>data-bs-dismiss</parameter>
        <parameter>data-bs-slide</parameter>
        <parameter>data-bs-slide-to</parameter>
        <parameter>data-bs-parent</parameter>
        <parameter>data-bs-config</parameter>
        <parameter>data-bs-content</parameter>
        <parameter>data-bs-spy</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.tags" type="collection">
      <parameter>a</parameter>
      <parameter>span</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.tags.0">a</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.tags.1">span</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes" type="collection">
      <parameter>href</parameter>
      <parameter>role</parameter>
      <parameter>aria-label</parameter>
      <parameter>aria-labelledly</parameter>
      <parameter>aria-current</parameter>
      <parameter>aria-expanded</parameter>
      <parameter>aria-controls</parameter>
      <parameter>aria-hidden</parameter>
      <parameter>aria-describedby</parameter>
      <parameter>tabindex</parameter>
      <parameter>aria-modal</parameter>
      <parameter>data-bs-toggle</parameter>
      <parameter>data-bs-target</parameter>
      <parameter>data-bs-dismiss</parameter>
      <parameter>data-bs-slide</parameter>
      <parameter>data-bs-slide-to</parameter>
      <parameter>data-bs-parent</parameter>
      <parameter>data-bs-config</parameter>
      <parameter>data-bs-content</parameter>
      <parameter>data-bs-spy</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.0">href</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.1">role</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.2">aria-label</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.3">aria-labelledly</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.4">aria-current</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.5">aria-expanded</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.6">aria-controls</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.7">aria-hidden</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.8">aria-describedby</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.9">tabindex</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.10">aria-modal</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.11">data-bs-toggle</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.12">data-bs-target</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.13">data-bs-dismiss</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.14">data-bs-slide</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.15">data-bs-slide-to</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.16">data-bs-parent</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.17">data-bs-config</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.18">data-bs-content</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.custom_attributes.0.attributes.19">data-bs-spy</parameter>
    <parameter key="shopware.html_sanitizer.sets.bootstrap.options" type="collection"/>
    <parameter key="shopware.html_sanitizer.sets.snippet" type="collection">
      <parameter key="tags" type="collection">
        <parameter>a</parameter>
      </parameter>
      <parameter key="attributes" type="collection">
        <parameter>data-url</parameter>
        <parameter>data-ajax-modal</parameter>
      </parameter>
      <parameter key="custom_attributes" type="collection">
        <parameter type="collection">
          <parameter key="tags" type="collection">
            <parameter>a</parameter>
          </parameter>
          <parameter key="attributes" type="collection">
            <parameter>data-url</parameter>
            <parameter>data-ajax-modal</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="options" type="collection"/>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.tags" type="collection">
      <parameter>a</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.tags.0">a</parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.attributes" type="collection">
      <parameter>data-url</parameter>
      <parameter>data-ajax-modal</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.attributes.0">data-url</parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.attributes.1">data-ajax-modal</parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.custom_attributes" type="collection">
      <parameter type="collection">
        <parameter key="tags" type="collection">
          <parameter>a</parameter>
        </parameter>
        <parameter key="attributes" type="collection">
          <parameter>data-url</parameter>
          <parameter>data-ajax-modal</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.custom_attributes.0" type="collection">
      <parameter key="tags" type="collection">
        <parameter>a</parameter>
      </parameter>
      <parameter key="attributes" type="collection">
        <parameter>data-url</parameter>
        <parameter>data-ajax-modal</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.custom_attributes.0.tags" type="collection">
      <parameter>a</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.custom_attributes.0.tags.0">a</parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.custom_attributes.0.attributes" type="collection">
      <parameter>data-url</parameter>
      <parameter>data-ajax-modal</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.custom_attributes.0.attributes.0">data-url</parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.custom_attributes.0.attributes.1">data-ajax-modal</parameter>
    <parameter key="shopware.html_sanitizer.sets.snippet.options" type="collection"/>
    <parameter key="shopware.html_sanitizer.fields" type="collection">
      <parameter key="product_translation.description" type="collection">
        <parameter key="sets" type="collection">
          <parameter>basic</parameter>
          <parameter>media</parameter>
        </parameter>
      </parameter>
      <parameter key="app_cms_block.template" type="collection">
        <parameter key="sets" type="collection">
          <parameter>basic</parameter>
          <parameter>media</parameter>
          <parameter>tidy</parameter>
        </parameter>
      </parameter>
      <parameter key="snippet.value" type="collection">
        <parameter key="sets" type="collection">
          <parameter>basic</parameter>
          <parameter>media</parameter>
          <parameter>bootstrap</parameter>
          <parameter>snippet</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.fields.product_translation.description" type="collection">
      <parameter key="sets" type="collection">
        <parameter>basic</parameter>
        <parameter>media</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.fields.product_translation.description.sets" type="collection">
      <parameter>basic</parameter>
      <parameter>media</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.fields.product_translation.description.sets.0">basic</parameter>
    <parameter key="shopware.html_sanitizer.fields.product_translation.description.sets.1">media</parameter>
    <parameter key="shopware.html_sanitizer.fields.app_cms_block.template" type="collection">
      <parameter key="sets" type="collection">
        <parameter>basic</parameter>
        <parameter>media</parameter>
        <parameter>tidy</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.fields.app_cms_block.template.sets" type="collection">
      <parameter>basic</parameter>
      <parameter>media</parameter>
      <parameter>tidy</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.fields.app_cms_block.template.sets.0">basic</parameter>
    <parameter key="shopware.html_sanitizer.fields.app_cms_block.template.sets.1">media</parameter>
    <parameter key="shopware.html_sanitizer.fields.app_cms_block.template.sets.2">tidy</parameter>
    <parameter key="shopware.html_sanitizer.fields.snippet.value" type="collection">
      <parameter key="sets" type="collection">
        <parameter>basic</parameter>
        <parameter>media</parameter>
        <parameter>bootstrap</parameter>
        <parameter>snippet</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.fields.snippet.value.sets" type="collection">
      <parameter>basic</parameter>
      <parameter>media</parameter>
      <parameter>bootstrap</parameter>
      <parameter>snippet</parameter>
    </parameter>
    <parameter key="shopware.html_sanitizer.fields.snippet.value.sets.0">basic</parameter>
    <parameter key="shopware.html_sanitizer.fields.snippet.value.sets.1">media</parameter>
    <parameter key="shopware.html_sanitizer.fields.snippet.value.sets.2">bootstrap</parameter>
    <parameter key="shopware.html_sanitizer.fields.snippet.value.sets.3">snippet</parameter>
    <parameter key="shopware.logger" type="collection">
      <parameter key="file_rotation_count">14</parameter>
      <parameter key="exclude_exception" type="collection">
        <parameter>League\OAuth2\Server\Exception\OAuthServerException</parameter>
        <parameter>Symfony\Component\HttpKernel\Exception\NotFoundHttpException</parameter>
        <parameter>Shopware\Core\Content\Media\Exception\DuplicatedMediaFileNameException</parameter>
        <parameter>Shopware\Core\Framework\Routing\Exception\LanguageNotFoundException</parameter>
      </parameter>
      <parameter key="exclude_events" type="collection">
        <parameter>user.recovery.request</parameter>
        <parameter>customer.recovery.request</parameter>
      </parameter>
      <parameter key="error_code_log_levels" type="collection">
        <parameter key="PRODUCT__CATEGORY_NOT_FOUND">notice</parameter>
        <parameter key="PRODUCT_SORTING_NOT_FOUND">notice</parameter>
        <parameter key="PROMOTION__INDIVIDUAL_CODES_PATTERN_ALREADY_IN_USE">notice</parameter>
        <parameter key="CHECKOUT__CART_INVALID_LINE_ITEM_QUANTITY">notice</parameter>
        <parameter key="CHECKOUT__INSUFFICIENT_PERMISSION">notice</parameter>
        <parameter key="CHECKOUT__TAX_ID_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__TAX_ID_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="CHECKOUT__PRICE_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="CHECKOUT__PRICES_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMERS_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_GROUP_REQUEST_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_GROUP_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_NOT_LOGGED_IN">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_ADDRESS_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_AUTH_BAD_CREDENTIALS">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_ADDRESS_IS_ACTIVE">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_ADDRESS_IS_DEFAULT">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_IS_ALREADY_CONFIRMED">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_GROUP_REGISTRATION_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_NOT_FOUND_BY_HASH">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_NOT_FOUND_BY_ID">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_RECOVERY_HASH_EXPIRED">notice</parameter>
        <parameter key="CHECKOUT__WISHLIST_IS_NOT_ACTIVATED">notice</parameter>
        <parameter key="CHECKOUT__WISHLIST_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__DUPLICATE_WISHLIST_PRODUCT">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_IS_INACTIVE">notice</parameter>
        <parameter key="CHECKOUT__LEGACY_PASSWORD_ENCODER_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__NO_HASH_PROVIDED">notice</parameter>
        <parameter key="CHECKOUT__WISHLIST_PRODUCT_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_AUTH_THROTTLED">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_OPTIN_NOT_COMPLETED">notice</parameter>
        <parameter key="CHECKOUT__LINE_ITEM_DOWNLOAD_FILE_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_IDS_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="CHECKOUT__ORDER_CUSTOMER_NOT_LOGGED_IN">notice</parameter>
        <parameter key="CHECKOUT__PROMOTION__NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__PROMOTION_DISCOUNT_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__SERVICE_CATEGORY_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__FOOTER_CATEGORY_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__DUPLICATE_SHIPPING_METHOD_PRICE">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_COUNTRY_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__COUNTRY_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__COUNTRY_STATE_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__ASYNC_PAYMENT_FINALIZE_INTERRUPTED">notice</parameter>
        <parameter key="CHECKOUT__ASYNC_PAYMENT_PROCESS_INTERRUPTED">notice</parameter>
        <parameter key="CHECKOUT__CAPTURE_PREPARED_PAYMENT_ERROR">notice</parameter>
        <parameter key="CHECKOUT__CUSTOMER_CANCELED_EXTERNAL_PAYMENT">notice</parameter>
        <parameter key="CHECKOUT__SYNC_PAYMENT_PROCESS_INTERRUPTED">notice</parameter>
        <parameter key="CHECKOUT__RECURRING_PROCESS_INTERRUPTED">notice</parameter>
        <parameter key="CHECKOUT__REFUND_PROCESS_INTERRUPTED">notice</parameter>
        <parameter key="CONTENT__AFTER_CATEGORY_NOT_FOUND">notice</parameter>
        <parameter key="CHECKOUT__CART_LINE_ITEM_NOT_STACKABLE">notice</parameter>
        <parameter key="DOCUMENT__INVALID_DOCUMENT_ID">notice</parameter>
        <parameter key="DOCUMENT__INVALID_GENERATOR_TYPE">notice</parameter>
        <parameter key="DOCUMENT__ORDER_NOT_FOUND">notice</parameter>
        <parameter key="CONTENT__MEDIA_INVALID_CONTENT_LENGTH">notice</parameter>
        <parameter key="CONTENT__MEDIA_INVALID_URL">notice</parameter>
        <parameter key="CONTENT__MEDIA_ILLEGAL_URL">notice</parameter>
        <parameter key="CONTENT__MEDIA_DISABLE_URL_UPLOAD_FEATURE">notice</parameter>
        <parameter key="CONTENT__MEDIA_CANNOT_OPEN_SOURCE_STREAM_TO_READ">notice</parameter>
        <parameter key="CONTENT__MEDIA_CANNOT_OPEN_SOURCE_STREAM_TO_WRITE">notice</parameter>
        <parameter key="CONTENT__MEDIA_FILE_SIZE_LIMIT_EXCEEDED">notice</parameter>
        <parameter key="CONTENT__MEDIA_MISSING_FILE_EXTENSION">notice</parameter>
        <parameter key="CONTENT__MEDIA_ILLEGAL_FILE_NAME">notice</parameter>
        <parameter key="CONTENT__MEDIA_EMPTY_FILE">notice</parameter>
        <parameter key="CONTENT__MEDIA_INVALID_FILE">notice</parameter>
        <parameter key="CONTENT__MEDIA_EMPTY_FILE_NAME">notice</parameter>
        <parameter key="CONTENT__MEDIA_FOLDER_NOT_FOUND">notice</parameter>
        <parameter key="CONTENT__MEDIA_FOLDER_NAME_NOT_FOUND">notice</parameter>
        <parameter key="CONTENT__MEDIA_FILE_TYPE_NOT_SUPPORTED">notice</parameter>
        <parameter key="CONTENT__MEDIA_EMPTY_ID">notice</parameter>
        <parameter key="CONTENT__MEDIA_FILE_NOT_SUPPORTED_FOR_THUMBNAIL">notice</parameter>
        <parameter key="CONTENT__MEDIA_STRATEGY_NOT_FOUND">notice</parameter>
        <parameter key="CONTENT__MEDIA_DUPLICATED_FILE_NAME">notice</parameter>
        <parameter key="CONTENT__MEDIA_NOT_FOUND">notice</parameter>
        <parameter key="CONTENT__MEDIA_MISSING_FILE">notice</parameter>
        <parameter key="CONTENT__NEWSLETTER_RECIPIENT_THROTTLED">notice</parameter>
        <parameter key="CONTENT__NEWSLETTER_RECIPIENT_NOT_FOUND">notice</parameter>
        <parameter key="CONTENT__PRODUCT_EXPORT_EMPTY">notice</parameter>
        <parameter key="FRAMEWORK__RATE_LIMIT_EXCEEDED">notice</parameter>
        <parameter key="FRAMEWORK__SALES_CHANNEL_ID_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="FRAMEWORK__TEMPLATE_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="FRAMEWORK__ROUTE_NAME_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="FRAMEWORK__ENTITY_NAME_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="FRAMEWORK__SALES_CHANNEL_NOT_FOUND">notice</parameter>
        <parameter key="FRAMEWORK__API_UNSUPPORTED_ASSOCIATION_FIELD_EXCEPTION">notice</parameter>
        <parameter key="FRAMEWORK__NOT_EXISTING_RELATION_EXCEPTION">notice</parameter>
        <parameter key="FRAMEWORK__INVALID_VERSION_ID">notice</parameter>
        <parameter key="FRAMEWORK__API_TYPE_PARAMETER_INVALID">notice</parameter>
        <parameter key="FRAMEWORK__APP_ID_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="FRAMEWORK__APP_NOT_COMPATIBLE">notice</parameter>
        <parameter key="FRAMEWORK__API_SALES_CHANNEL_ID_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="FRAMEWORK__API_CUSTOMER_ID_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="FRAMEWORK__API_INVALID_ACCESS_KEY">notice</parameter>
        <parameter key="FRAMEWORK__API_INVALID_ACCESS_KEY_IDENTIFIER">notice</parameter>
        <parameter key="FRAMEWORK__API_SHIPPING_COSTS_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="FRAMEWORK__KEY_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="FRAMEWORK__CLUSTER_PARAMETER_IS_MISSING">notice</parameter>
        <parameter key="FRAMEWORK__INVALID_API_CRITERIA_IDS">notice</parameter>
        <parameter key="FRAMEWORK__INVALID_CRITERIA_IDS">notice</parameter>
        <parameter key="FRAMEWORK__DEFINITION_NOT_FOUND">notice</parameter>
        <parameter key="FRAMEWORK__LANGUAGE_NOT_FOUND">notice</parameter>
        <parameter key="FRAMEWORK__SYNC_ACTION_PROCESS_INTERRUPTED">notice</parameter>
        <parameter key="FRAMEWORK__WRITE_TYPE_INTEND_ERROR">notice</parameter>
        <parameter key="SYSTEM__SALES_CHANNEL_DOES_NOT_EXISTS">notice</parameter>
        <parameter key="SYSTEM__LANGUAGE_INVALID_EXCEPTION">notice</parameter>
        <parameter key="SYSTEM__COUNTRY_DOES_NOT_EXISTS_EXCEPTION">notice</parameter>
        <parameter key="SYSTEM__CURRENCY_DOES_NOT_EXISTS_EXCEPTION">notice</parameter>
        <parameter key="SYSTEM__COUNTRY_STATE_DOES_NOT_EXISTS_EXCEPTION">notice</parameter>
        <parameter key="SYSTEM__SALES_CHANNEL_LANGUAGE_NOT_AVAILABLE_EXCEPTION">notice</parameter>
        <parameter key="SYSTEM__NO_CONTEXT_DATA_EXCEPTION">notice</parameter>
        <parameter key="PRODUCT_EXPORT__RENDER_FOOTER_EXCEPTION">notice</parameter>
        <parameter key="PRODUCT_EXPORT__RENDER_HEADER_EXCEPTION">notice</parameter>
        <parameter key="PRODUCT_EXPORT__RENDER_PRODUCT_EXCEPTION">notice</parameter>
        <parameter key="SYSTEM__SCOPE_NOT_FOUND">notice</parameter>
        <parameter key="FRAMEWORK__EXTENSION_THEME_STILL_IN_USE">notice</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.logger.file_rotation_count">14</parameter>
    <parameter key="shopware.logger.exclude_exception" type="collection">
      <parameter>League\OAuth2\Server\Exception\OAuthServerException</parameter>
      <parameter>Symfony\Component\HttpKernel\Exception\NotFoundHttpException</parameter>
      <parameter>Shopware\Core\Content\Media\Exception\DuplicatedMediaFileNameException</parameter>
      <parameter>Shopware\Core\Framework\Routing\Exception\LanguageNotFoundException</parameter>
    </parameter>
    <parameter key="shopware.logger.exclude_exception.0">League\OAuth2\Server\Exception\OAuthServerException</parameter>
    <parameter key="shopware.logger.exclude_exception.1">Symfony\Component\HttpKernel\Exception\NotFoundHttpException</parameter>
    <parameter key="shopware.logger.exclude_exception.2">Shopware\Core\Content\Media\Exception\DuplicatedMediaFileNameException</parameter>
    <parameter key="shopware.logger.exclude_exception.3">Shopware\Core\Framework\Routing\Exception\LanguageNotFoundException</parameter>
    <parameter key="shopware.logger.exclude_events" type="collection">
      <parameter>user.recovery.request</parameter>
      <parameter>customer.recovery.request</parameter>
    </parameter>
    <parameter key="shopware.logger.exclude_events.0">user.recovery.request</parameter>
    <parameter key="shopware.logger.exclude_events.1">customer.recovery.request</parameter>
    <parameter key="shopware.logger.error_code_log_levels" type="collection">
      <parameter key="PRODUCT__CATEGORY_NOT_FOUND">notice</parameter>
      <parameter key="PRODUCT_SORTING_NOT_FOUND">notice</parameter>
      <parameter key="PROMOTION__INDIVIDUAL_CODES_PATTERN_ALREADY_IN_USE">notice</parameter>
      <parameter key="CHECKOUT__CART_INVALID_LINE_ITEM_QUANTITY">notice</parameter>
      <parameter key="CHECKOUT__INSUFFICIENT_PERMISSION">notice</parameter>
      <parameter key="CHECKOUT__TAX_ID_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__TAX_ID_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="CHECKOUT__PRICE_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="CHECKOUT__PRICES_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMERS_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_GROUP_REQUEST_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_GROUP_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_NOT_LOGGED_IN">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_ADDRESS_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_AUTH_BAD_CREDENTIALS">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_ADDRESS_IS_ACTIVE">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_ADDRESS_IS_DEFAULT">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_IS_ALREADY_CONFIRMED">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_GROUP_REGISTRATION_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_NOT_FOUND_BY_HASH">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_NOT_FOUND_BY_ID">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_RECOVERY_HASH_EXPIRED">notice</parameter>
      <parameter key="CHECKOUT__WISHLIST_IS_NOT_ACTIVATED">notice</parameter>
      <parameter key="CHECKOUT__WISHLIST_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__DUPLICATE_WISHLIST_PRODUCT">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_IS_INACTIVE">notice</parameter>
      <parameter key="CHECKOUT__LEGACY_PASSWORD_ENCODER_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__NO_HASH_PROVIDED">notice</parameter>
      <parameter key="CHECKOUT__WISHLIST_PRODUCT_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_AUTH_THROTTLED">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_OPTIN_NOT_COMPLETED">notice</parameter>
      <parameter key="CHECKOUT__LINE_ITEM_DOWNLOAD_FILE_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_IDS_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="CHECKOUT__ORDER_CUSTOMER_NOT_LOGGED_IN">notice</parameter>
      <parameter key="CHECKOUT__PROMOTION__NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__PROMOTION_DISCOUNT_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__SERVICE_CATEGORY_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__FOOTER_CATEGORY_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__DUPLICATE_SHIPPING_METHOD_PRICE">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_COUNTRY_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__COUNTRY_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__COUNTRY_STATE_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__ASYNC_PAYMENT_FINALIZE_INTERRUPTED">notice</parameter>
      <parameter key="CHECKOUT__ASYNC_PAYMENT_PROCESS_INTERRUPTED">notice</parameter>
      <parameter key="CHECKOUT__CAPTURE_PREPARED_PAYMENT_ERROR">notice</parameter>
      <parameter key="CHECKOUT__CUSTOMER_CANCELED_EXTERNAL_PAYMENT">notice</parameter>
      <parameter key="CHECKOUT__SYNC_PAYMENT_PROCESS_INTERRUPTED">notice</parameter>
      <parameter key="CHECKOUT__RECURRING_PROCESS_INTERRUPTED">notice</parameter>
      <parameter key="CHECKOUT__REFUND_PROCESS_INTERRUPTED">notice</parameter>
      <parameter key="CONTENT__AFTER_CATEGORY_NOT_FOUND">notice</parameter>
      <parameter key="CHECKOUT__CART_LINE_ITEM_NOT_STACKABLE">notice</parameter>
      <parameter key="DOCUMENT__INVALID_DOCUMENT_ID">notice</parameter>
      <parameter key="DOCUMENT__INVALID_GENERATOR_TYPE">notice</parameter>
      <parameter key="DOCUMENT__ORDER_NOT_FOUND">notice</parameter>
      <parameter key="CONTENT__MEDIA_INVALID_CONTENT_LENGTH">notice</parameter>
      <parameter key="CONTENT__MEDIA_INVALID_URL">notice</parameter>
      <parameter key="CONTENT__MEDIA_ILLEGAL_URL">notice</parameter>
      <parameter key="CONTENT__MEDIA_DISABLE_URL_UPLOAD_FEATURE">notice</parameter>
      <parameter key="CONTENT__MEDIA_CANNOT_OPEN_SOURCE_STREAM_TO_READ">notice</parameter>
      <parameter key="CONTENT__MEDIA_CANNOT_OPEN_SOURCE_STREAM_TO_WRITE">notice</parameter>
      <parameter key="CONTENT__MEDIA_FILE_SIZE_LIMIT_EXCEEDED">notice</parameter>
      <parameter key="CONTENT__MEDIA_MISSING_FILE_EXTENSION">notice</parameter>
      <parameter key="CONTENT__MEDIA_ILLEGAL_FILE_NAME">notice</parameter>
      <parameter key="CONTENT__MEDIA_EMPTY_FILE">notice</parameter>
      <parameter key="CONTENT__MEDIA_INVALID_FILE">notice</parameter>
      <parameter key="CONTENT__MEDIA_EMPTY_FILE_NAME">notice</parameter>
      <parameter key="CONTENT__MEDIA_FOLDER_NOT_FOUND">notice</parameter>
      <parameter key="CONTENT__MEDIA_FOLDER_NAME_NOT_FOUND">notice</parameter>
      <parameter key="CONTENT__MEDIA_FILE_TYPE_NOT_SUPPORTED">notice</parameter>
      <parameter key="CONTENT__MEDIA_EMPTY_ID">notice</parameter>
      <parameter key="CONTENT__MEDIA_FILE_NOT_SUPPORTED_FOR_THUMBNAIL">notice</parameter>
      <parameter key="CONTENT__MEDIA_STRATEGY_NOT_FOUND">notice</parameter>
      <parameter key="CONTENT__MEDIA_DUPLICATED_FILE_NAME">notice</parameter>
      <parameter key="CONTENT__MEDIA_NOT_FOUND">notice</parameter>
      <parameter key="CONTENT__MEDIA_MISSING_FILE">notice</parameter>
      <parameter key="CONTENT__NEWSLETTER_RECIPIENT_THROTTLED">notice</parameter>
      <parameter key="CONTENT__NEWSLETTER_RECIPIENT_NOT_FOUND">notice</parameter>
      <parameter key="CONTENT__PRODUCT_EXPORT_EMPTY">notice</parameter>
      <parameter key="FRAMEWORK__RATE_LIMIT_EXCEEDED">notice</parameter>
      <parameter key="FRAMEWORK__SALES_CHANNEL_ID_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="FRAMEWORK__TEMPLATE_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="FRAMEWORK__ROUTE_NAME_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="FRAMEWORK__ENTITY_NAME_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="FRAMEWORK__SALES_CHANNEL_NOT_FOUND">notice</parameter>
      <parameter key="FRAMEWORK__API_UNSUPPORTED_ASSOCIATION_FIELD_EXCEPTION">notice</parameter>
      <parameter key="FRAMEWORK__NOT_EXISTING_RELATION_EXCEPTION">notice</parameter>
      <parameter key="FRAMEWORK__INVALID_VERSION_ID">notice</parameter>
      <parameter key="FRAMEWORK__API_TYPE_PARAMETER_INVALID">notice</parameter>
      <parameter key="FRAMEWORK__APP_ID_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="FRAMEWORK__APP_NOT_COMPATIBLE">notice</parameter>
      <parameter key="FRAMEWORK__API_SALES_CHANNEL_ID_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="FRAMEWORK__API_CUSTOMER_ID_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="FRAMEWORK__API_INVALID_ACCESS_KEY">notice</parameter>
      <parameter key="FRAMEWORK__API_INVALID_ACCESS_KEY_IDENTIFIER">notice</parameter>
      <parameter key="FRAMEWORK__API_SHIPPING_COSTS_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="FRAMEWORK__KEY_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="FRAMEWORK__CLUSTER_PARAMETER_IS_MISSING">notice</parameter>
      <parameter key="FRAMEWORK__INVALID_API_CRITERIA_IDS">notice</parameter>
      <parameter key="FRAMEWORK__INVALID_CRITERIA_IDS">notice</parameter>
      <parameter key="FRAMEWORK__DEFINITION_NOT_FOUND">notice</parameter>
      <parameter key="FRAMEWORK__LANGUAGE_NOT_FOUND">notice</parameter>
      <parameter key="FRAMEWORK__SYNC_ACTION_PROCESS_INTERRUPTED">notice</parameter>
      <parameter key="FRAMEWORK__WRITE_TYPE_INTEND_ERROR">notice</parameter>
      <parameter key="SYSTEM__SALES_CHANNEL_DOES_NOT_EXISTS">notice</parameter>
      <parameter key="SYSTEM__LANGUAGE_INVALID_EXCEPTION">notice</parameter>
      <parameter key="SYSTEM__COUNTRY_DOES_NOT_EXISTS_EXCEPTION">notice</parameter>
      <parameter key="SYSTEM__CURRENCY_DOES_NOT_EXISTS_EXCEPTION">notice</parameter>
      <parameter key="SYSTEM__COUNTRY_STATE_DOES_NOT_EXISTS_EXCEPTION">notice</parameter>
      <parameter key="SYSTEM__SALES_CHANNEL_LANGUAGE_NOT_AVAILABLE_EXCEPTION">notice</parameter>
      <parameter key="SYSTEM__NO_CONTEXT_DATA_EXCEPTION">notice</parameter>
      <parameter key="PRODUCT_EXPORT__RENDER_FOOTER_EXCEPTION">notice</parameter>
      <parameter key="PRODUCT_EXPORT__RENDER_HEADER_EXCEPTION">notice</parameter>
      <parameter key="PRODUCT_EXPORT__RENDER_PRODUCT_EXCEPTION">notice</parameter>
      <parameter key="SYSTEM__SCOPE_NOT_FOUND">notice</parameter>
      <parameter key="FRAMEWORK__EXTENSION_THEME_STILL_IN_USE">notice</parameter>
    </parameter>
    <parameter key="shopware.logger.error_code_log_levels.PRODUCT__CATEGORY_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.PRODUCT_SORTING_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.PROMOTION__INDIVIDUAL_CODES_PATTERN_ALREADY_IN_USE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CART_INVALID_LINE_ITEM_QUANTITY">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__INSUFFICIENT_PERMISSION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__TAX_ID_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__TAX_ID_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__PRICE_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__PRICES_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMERS_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_GROUP_REQUEST_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_GROUP_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_NOT_LOGGED_IN">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_ADDRESS_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_AUTH_BAD_CREDENTIALS">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_ADDRESS_IS_ACTIVE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_ADDRESS_IS_DEFAULT">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_IS_ALREADY_CONFIRMED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_GROUP_REGISTRATION_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_NOT_FOUND_BY_HASH">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_NOT_FOUND_BY_ID">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_RECOVERY_HASH_EXPIRED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__WISHLIST_IS_NOT_ACTIVATED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__WISHLIST_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__DUPLICATE_WISHLIST_PRODUCT">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_IS_INACTIVE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__LEGACY_PASSWORD_ENCODER_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__NO_HASH_PROVIDED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__WISHLIST_PRODUCT_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_AUTH_THROTTLED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_OPTIN_NOT_COMPLETED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__LINE_ITEM_DOWNLOAD_FILE_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_IDS_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__ORDER_CUSTOMER_NOT_LOGGED_IN">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__PROMOTION__NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__PROMOTION_DISCOUNT_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__SERVICE_CATEGORY_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__FOOTER_CATEGORY_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__DUPLICATE_SHIPPING_METHOD_PRICE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_COUNTRY_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__COUNTRY_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__COUNTRY_STATE_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__ASYNC_PAYMENT_FINALIZE_INTERRUPTED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__ASYNC_PAYMENT_PROCESS_INTERRUPTED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CAPTURE_PREPARED_PAYMENT_ERROR">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CUSTOMER_CANCELED_EXTERNAL_PAYMENT">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__SYNC_PAYMENT_PROCESS_INTERRUPTED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__RECURRING_PROCESS_INTERRUPTED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__REFUND_PROCESS_INTERRUPTED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__AFTER_CATEGORY_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CHECKOUT__CART_LINE_ITEM_NOT_STACKABLE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.DOCUMENT__INVALID_DOCUMENT_ID">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.DOCUMENT__INVALID_GENERATOR_TYPE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.DOCUMENT__ORDER_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_INVALID_CONTENT_LENGTH">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_INVALID_URL">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_ILLEGAL_URL">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_DISABLE_URL_UPLOAD_FEATURE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_CANNOT_OPEN_SOURCE_STREAM_TO_READ">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_CANNOT_OPEN_SOURCE_STREAM_TO_WRITE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_FILE_SIZE_LIMIT_EXCEEDED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_MISSING_FILE_EXTENSION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_ILLEGAL_FILE_NAME">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_EMPTY_FILE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_INVALID_FILE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_EMPTY_FILE_NAME">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_FOLDER_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_FOLDER_NAME_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_FILE_TYPE_NOT_SUPPORTED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_EMPTY_ID">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_FILE_NOT_SUPPORTED_FOR_THUMBNAIL">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_STRATEGY_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_DUPLICATED_FILE_NAME">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__MEDIA_MISSING_FILE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__NEWSLETTER_RECIPIENT_THROTTLED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__NEWSLETTER_RECIPIENT_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.CONTENT__PRODUCT_EXPORT_EMPTY">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__RATE_LIMIT_EXCEEDED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__SALES_CHANNEL_ID_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__TEMPLATE_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__ROUTE_NAME_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__ENTITY_NAME_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__SALES_CHANNEL_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__API_UNSUPPORTED_ASSOCIATION_FIELD_EXCEPTION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__NOT_EXISTING_RELATION_EXCEPTION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__INVALID_VERSION_ID">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__API_TYPE_PARAMETER_INVALID">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__APP_ID_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__APP_NOT_COMPATIBLE">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__API_SALES_CHANNEL_ID_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__API_CUSTOMER_ID_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__API_INVALID_ACCESS_KEY">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__API_INVALID_ACCESS_KEY_IDENTIFIER">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__API_SHIPPING_COSTS_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__KEY_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__CLUSTER_PARAMETER_IS_MISSING">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__INVALID_API_CRITERIA_IDS">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__INVALID_CRITERIA_IDS">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__DEFINITION_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__LANGUAGE_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__SYNC_ACTION_PROCESS_INTERRUPTED">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__WRITE_TYPE_INTEND_ERROR">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.SYSTEM__SALES_CHANNEL_DOES_NOT_EXISTS">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.SYSTEM__LANGUAGE_INVALID_EXCEPTION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.SYSTEM__COUNTRY_DOES_NOT_EXISTS_EXCEPTION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.SYSTEM__CURRENCY_DOES_NOT_EXISTS_EXCEPTION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.SYSTEM__COUNTRY_STATE_DOES_NOT_EXISTS_EXCEPTION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.SYSTEM__SALES_CHANNEL_LANGUAGE_NOT_AVAILABLE_EXCEPTION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.SYSTEM__NO_CONTEXT_DATA_EXCEPTION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.PRODUCT_EXPORT__RENDER_FOOTER_EXCEPTION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.PRODUCT_EXPORT__RENDER_HEADER_EXCEPTION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.PRODUCT_EXPORT__RENDER_PRODUCT_EXCEPTION">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.SYSTEM__SCOPE_NOT_FOUND">notice</parameter>
    <parameter key="shopware.logger.error_code_log_levels.FRAMEWORK__EXTENSION_THEME_STILL_IN_USE">notice</parameter>
    <parameter key="shopware.cache" type="collection">
      <parameter key="redis_prefix">%env(REDIS_PREFIX)%</parameter>
      <parameter key="tagging" type="collection">
        <parameter key="each_snippet">true</parameter>
        <parameter key="each_config">true</parameter>
        <parameter key="each_theme_config">true</parameter>
      </parameter>
      <parameter key="invalidation" type="collection">
        <parameter key="delay">0</parameter>
        <parameter key="delay_options" type="collection">
          <parameter key="storage">cache</parameter>
          <parameter key="dsn">redis://localhost</parameter>
        </parameter>
        <parameter key="count">150</parameter>
        <parameter key="http_cache" type="collection">
          <parameter>logged-in</parameter>
          <parameter>cart-filled</parameter>
        </parameter>
        <parameter key="product_listing_route" type="collection"/>
        <parameter key="product_detail_route" type="collection"/>
        <parameter key="product_review_route" type="collection"/>
        <parameter key="product_search_route" type="collection"/>
        <parameter key="product_suggest_route" type="collection"/>
        <parameter key="product_cross_selling_route" type="collection"/>
        <parameter key="payment_method_route" type="collection"/>
        <parameter key="shipping_method_route" type="collection"/>
        <parameter key="navigation_route" type="collection"/>
        <parameter key="category_route" type="collection"/>
        <parameter key="landing_page_route" type="collection"/>
        <parameter key="language_route" type="collection"/>
        <parameter key="currency_route" type="collection"/>
        <parameter key="country_route" type="collection"/>
        <parameter key="country_state_route" type="collection"/>
        <parameter key="salutation_route" type="collection"/>
        <parameter key="sitemap_route" type="collection"/>
      </parameter>
      <parameter key="cache_compression">true</parameter>
    </parameter>
    <parameter key="shopware.cache.redis_prefix">%env(REDIS_PREFIX)%</parameter>
    <parameter key="shopware.cache.tagging" type="collection">
      <parameter key="each_snippet">true</parameter>
      <parameter key="each_config">true</parameter>
      <parameter key="each_theme_config">true</parameter>
    </parameter>
    <parameter key="shopware.cache.tagging.each_snippet">true</parameter>
    <parameter key="shopware.cache.tagging.each_config">true</parameter>
    <parameter key="shopware.cache.tagging.each_theme_config">true</parameter>
    <parameter key="shopware.cache.invalidation" type="collection">
      <parameter key="delay">0</parameter>
      <parameter key="delay_options" type="collection">
        <parameter key="storage">cache</parameter>
        <parameter key="dsn">redis://localhost</parameter>
      </parameter>
      <parameter key="count">150</parameter>
      <parameter key="http_cache" type="collection">
        <parameter>logged-in</parameter>
        <parameter>cart-filled</parameter>
      </parameter>
      <parameter key="product_listing_route" type="collection"/>
      <parameter key="product_detail_route" type="collection"/>
      <parameter key="product_review_route" type="collection"/>
      <parameter key="product_search_route" type="collection"/>
      <parameter key="product_suggest_route" type="collection"/>
      <parameter key="product_cross_selling_route" type="collection"/>
      <parameter key="payment_method_route" type="collection"/>
      <parameter key="shipping_method_route" type="collection"/>
      <parameter key="navigation_route" type="collection"/>
      <parameter key="category_route" type="collection"/>
      <parameter key="landing_page_route" type="collection"/>
      <parameter key="language_route" type="collection"/>
      <parameter key="currency_route" type="collection"/>
      <parameter key="country_route" type="collection"/>
      <parameter key="country_state_route" type="collection"/>
      <parameter key="salutation_route" type="collection"/>
      <parameter key="sitemap_route" type="collection"/>
    </parameter>
    <parameter key="shopware.cache.invalidation.delay">0</parameter>
    <parameter key="shopware.cache.invalidation.delay_options" type="collection">
      <parameter key="storage">cache</parameter>
      <parameter key="dsn">redis://localhost</parameter>
    </parameter>
    <parameter key="shopware.cache.invalidation.delay_options.storage">cache</parameter>
    <parameter key="shopware.cache.invalidation.delay_options.dsn">redis://localhost</parameter>
    <parameter key="shopware.cache.invalidation.count">150</parameter>
    <parameter key="shopware.cache.invalidation.http_cache" type="collection">
      <parameter>logged-in</parameter>
      <parameter>cart-filled</parameter>
    </parameter>
    <parameter key="shopware.cache.invalidation.http_cache.0">logged-in</parameter>
    <parameter key="shopware.cache.invalidation.http_cache.1">cart-filled</parameter>
    <parameter key="shopware.cache.invalidation.product_listing_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.product_detail_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.product_review_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.product_search_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.product_suggest_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.product_cross_selling_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.payment_method_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.shipping_method_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.navigation_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.category_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.landing_page_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.language_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.currency_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.country_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.country_state_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.salutation_route" type="collection"/>
    <parameter key="shopware.cache.invalidation.sitemap_route" type="collection"/>
    <parameter key="shopware.cache.cache_compression">true</parameter>
    <parameter key="shopware.twig" type="collection">
      <parameter key="allowed_php_functions" type="collection"/>
    </parameter>
    <parameter key="shopware.twig.allowed_php_functions" type="collection"/>
    <parameter key="shopware.dompdf" type="collection">
      <parameter key="options" type="collection">
        <parameter key="isRemoteEnabled">true</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.dompdf.options" type="collection">
      <parameter key="isRemoteEnabled">true</parameter>
    </parameter>
    <parameter key="shopware.dompdf.options.isRemoteEnabled">true</parameter>
    <parameter key="shopware.stock" type="collection">
      <parameter key="enable_stock_management">true</parameter>
    </parameter>
    <parameter key="shopware.stock.enable_stock_management">true</parameter>
    <parameter key="shopware.usage_data" type="collection">
      <parameter key="gateway" type="collection">
        <parameter key="base_uri">https://data.shopware.io</parameter>
        <parameter key="batch_size">50</parameter>
      </parameter>
    </parameter>
    <parameter key="shopware.usage_data.gateway" type="collection">
      <parameter key="base_uri">https://data.shopware.io</parameter>
      <parameter key="batch_size">50</parameter>
    </parameter>
    <parameter key="shopware.usage_data.gateway.base_uri">https://data.shopware.io</parameter>
    <parameter key="shopware.usage_data.gateway.batch_size">50</parameter>
    <parameter key="elasticsearch.enabled">%env(bool:SHOPWARE_ES_ENABLED)%</parameter>
    <parameter key="elasticsearch.indexing_enabled">%env(bool:SHOPWARE_ES_INDEXING_ENABLED)%</parameter>
    <parameter key="elasticsearch.indexing_batch_size">%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</parameter>
    <parameter key="elasticsearch.hosts">%env(string:OPENSEARCH_URL)%</parameter>
    <parameter key="elasticsearch.index_prefix">%env(string:SHOPWARE_ES_INDEX_PREFIX)%</parameter>
    <parameter key="elasticsearch.throw_exception">%env(string:SHOPWARE_ES_THROW_EXCEPTION)%</parameter>
    <parameter key="elasticsearch.search" type="collection">
      <parameter key="timeout">5s</parameter>
      <parameter key="term_max_length">300</parameter>
    </parameter>
    <parameter key="elasticsearch.search.timeout">5s</parameter>
    <parameter key="elasticsearch.search.term_max_length">300</parameter>
    <parameter key="elasticsearch.administration" type="collection">
      <parameter key="hosts">%env(string:ADMIN_OPENSEARCH_URL)%</parameter>
      <parameter key="enabled">%env(bool:SHOPWARE_ADMIN_ES_ENABLED)%</parameter>
      <parameter key="refresh_indices">%env(bool:SHOPWARE_ADMIN_ES_REFRESH_INDICES)%</parameter>
      <parameter key="index_prefix">%env(string:SHOPWARE_ADMIN_ES_INDEX_PREFIX)%</parameter>
      <parameter key="search" type="collection">
        <parameter key="timeout">5s</parameter>
        <parameter key="term_max_length">300</parameter>
      </parameter>
      <parameter key="index_settings" type="collection">
        <parameter key="number_of_shards">3</parameter>
        <parameter key="number_of_replicas">3</parameter>
        <parameter key="mapping.total_fields.limit">50000</parameter>
        <parameter key="mapping.nested_fields.limit">500</parameter>
        <parameter key="mapping.nested_objects.limit">1000000</parameter>
      </parameter>
      <parameter key="analysis" type="collection">
        <parameter key="normalizer" type="collection">
          <parameter key="sw_lowercase_normalizer" type="collection">
            <parameter key="type">custom</parameter>
            <parameter key="filter" type="collection">
              <parameter>lowercase</parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="dynamic_templates" type="collection">
        <parameter type="collection">
          <parameter key="keywords" type="collection">
            <parameter key="match_mapping_type">string</parameter>
            <parameter key="mapping" type="collection">
              <parameter key="type">keyword</parameter>
              <parameter key="normalizer">sw_lowercase_normalizer</parameter>
              <parameter key="fields" type="collection">
                <parameter key="text" type="collection">
                  <parameter key="type">text</parameter>
                </parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.administration.hosts">%env(string:ADMIN_OPENSEARCH_URL)%</parameter>
    <parameter key="elasticsearch.administration.enabled">%env(bool:SHOPWARE_ADMIN_ES_ENABLED)%</parameter>
    <parameter key="elasticsearch.administration.refresh_indices">%env(bool:SHOPWARE_ADMIN_ES_REFRESH_INDICES)%</parameter>
    <parameter key="elasticsearch.administration.index_prefix">%env(string:SHOPWARE_ADMIN_ES_INDEX_PREFIX)%</parameter>
    <parameter key="elasticsearch.administration.search" type="collection">
      <parameter key="timeout">5s</parameter>
      <parameter key="term_max_length">300</parameter>
    </parameter>
    <parameter key="elasticsearch.administration.search.timeout">5s</parameter>
    <parameter key="elasticsearch.administration.search.term_max_length">300</parameter>
    <parameter key="elasticsearch.administration.index_settings" type="collection">
      <parameter key="number_of_shards">3</parameter>
      <parameter key="number_of_replicas">3</parameter>
      <parameter key="mapping.total_fields.limit">50000</parameter>
      <parameter key="mapping.nested_fields.limit">500</parameter>
      <parameter key="mapping.nested_objects.limit">1000000</parameter>
    </parameter>
    <parameter key="elasticsearch.administration.index_settings.number_of_shards">3</parameter>
    <parameter key="elasticsearch.administration.index_settings.number_of_replicas">3</parameter>
    <parameter key="elasticsearch.administration.index_settings.mapping.total_fields.limit">50000</parameter>
    <parameter key="elasticsearch.administration.index_settings.mapping.nested_fields.limit">500</parameter>
    <parameter key="elasticsearch.administration.index_settings.mapping.nested_objects.limit">1000000</parameter>
    <parameter key="elasticsearch.administration.analysis" type="collection">
      <parameter key="normalizer" type="collection">
        <parameter key="sw_lowercase_normalizer" type="collection">
          <parameter key="type">custom</parameter>
          <parameter key="filter" type="collection">
            <parameter>lowercase</parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.administration.analysis.normalizer" type="collection">
      <parameter key="sw_lowercase_normalizer" type="collection">
        <parameter key="type">custom</parameter>
        <parameter key="filter" type="collection">
          <parameter>lowercase</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.administration.analysis.normalizer.sw_lowercase_normalizer" type="collection">
      <parameter key="type">custom</parameter>
      <parameter key="filter" type="collection">
        <parameter>lowercase</parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.administration.analysis.normalizer.sw_lowercase_normalizer.type">custom</parameter>
    <parameter key="elasticsearch.administration.analysis.normalizer.sw_lowercase_normalizer.filter" type="collection">
      <parameter>lowercase</parameter>
    </parameter>
    <parameter key="elasticsearch.administration.analysis.normalizer.sw_lowercase_normalizer.filter.0">lowercase</parameter>
    <parameter key="elasticsearch.administration.dynamic_templates" type="collection">
      <parameter type="collection">
        <parameter key="keywords" type="collection">
          <parameter key="match_mapping_type">string</parameter>
          <parameter key="mapping" type="collection">
            <parameter key="type">keyword</parameter>
            <parameter key="normalizer">sw_lowercase_normalizer</parameter>
            <parameter key="fields" type="collection">
              <parameter key="text" type="collection">
                <parameter key="type">text</parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.administration.dynamic_templates.0" type="collection">
      <parameter key="keywords" type="collection">
        <parameter key="match_mapping_type">string</parameter>
        <parameter key="mapping" type="collection">
          <parameter key="type">keyword</parameter>
          <parameter key="normalizer">sw_lowercase_normalizer</parameter>
          <parameter key="fields" type="collection">
            <parameter key="text" type="collection">
              <parameter key="type">text</parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.administration.dynamic_templates.0.keywords" type="collection">
      <parameter key="match_mapping_type">string</parameter>
      <parameter key="mapping" type="collection">
        <parameter key="type">keyword</parameter>
        <parameter key="normalizer">sw_lowercase_normalizer</parameter>
        <parameter key="fields" type="collection">
          <parameter key="text" type="collection">
            <parameter key="type">text</parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.administration.dynamic_templates.0.keywords.match_mapping_type">string</parameter>
    <parameter key="elasticsearch.administration.dynamic_templates.0.keywords.mapping" type="collection">
      <parameter key="type">keyword</parameter>
      <parameter key="normalizer">sw_lowercase_normalizer</parameter>
      <parameter key="fields" type="collection">
        <parameter key="text" type="collection">
          <parameter key="type">text</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.administration.dynamic_templates.0.keywords.mapping.type">keyword</parameter>
    <parameter key="elasticsearch.administration.dynamic_templates.0.keywords.mapping.normalizer">sw_lowercase_normalizer</parameter>
    <parameter key="elasticsearch.administration.dynamic_templates.0.keywords.mapping.fields" type="collection">
      <parameter key="text" type="collection">
        <parameter key="type">text</parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.administration.dynamic_templates.0.keywords.mapping.fields.text" type="collection">
      <parameter key="type">text</parameter>
    </parameter>
    <parameter key="elasticsearch.administration.dynamic_templates.0.keywords.mapping.fields.text.type">text</parameter>
    <parameter key="elasticsearch.product" type="collection">
      <parameter key="custom_fields_mapping" type="collection"/>
      <parameter key="exclude_source">%env(bool:SHOPWARE_ES_EXCLUDE_SOURCE)%</parameter>
    </parameter>
    <parameter key="elasticsearch.product.custom_fields_mapping" type="collection"/>
    <parameter key="elasticsearch.product.exclude_source">%env(bool:SHOPWARE_ES_EXCLUDE_SOURCE)%</parameter>
    <parameter key="elasticsearch.ssl" type="collection">
      <parameter key="verify_server_cert">true</parameter>
    </parameter>
    <parameter key="elasticsearch.ssl.verify_server_cert">true</parameter>
    <parameter key="elasticsearch.index_settings" type="collection">
      <parameter key="number_of_shards">3</parameter>
      <parameter key="number_of_replicas">3</parameter>
      <parameter key="mapping.total_fields.limit">50000</parameter>
      <parameter key="mapping.nested_fields.limit">500</parameter>
      <parameter key="mapping.nested_objects.limit">1000000</parameter>
    </parameter>
    <parameter key="elasticsearch.index_settings.number_of_shards">3</parameter>
    <parameter key="elasticsearch.index_settings.number_of_replicas">3</parameter>
    <parameter key="elasticsearch.index_settings.mapping.total_fields.limit">50000</parameter>
    <parameter key="elasticsearch.index_settings.mapping.nested_fields.limit">500</parameter>
    <parameter key="elasticsearch.index_settings.mapping.nested_objects.limit">1000000</parameter>
    <parameter key="elasticsearch.analysis" type="collection">
      <parameter key="normalizer" type="collection">
        <parameter key="sw_lowercase_normalizer" type="collection">
          <parameter key="type">custom</parameter>
          <parameter key="filter" type="collection">
            <parameter>lowercase</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="analyzer" type="collection">
        <parameter key="sw_ngram_analyzer" type="collection">
          <parameter key="type">custom</parameter>
          <parameter key="tokenizer">whitespace</parameter>
          <parameter key="filter" type="collection">
            <parameter>lowercase</parameter>
            <parameter>sw_ngram_filter</parameter>
          </parameter>
        </parameter>
        <parameter key="sw_english_analyzer" type="collection">
          <parameter key="type">custom</parameter>
          <parameter key="tokenizer">standard</parameter>
          <parameter key="filter" type="collection">
            <parameter>lowercase</parameter>
            <parameter>sw_english_stop_filter</parameter>
          </parameter>
        </parameter>
        <parameter key="sw_german_analyzer" type="collection">
          <parameter key="type">custom</parameter>
          <parameter key="tokenizer">standard</parameter>
          <parameter key="filter" type="collection">
            <parameter>lowercase</parameter>
            <parameter>sw_german_stop_filter</parameter>
          </parameter>
        </parameter>
      </parameter>
      <parameter key="filter" type="collection">
        <parameter key="sw_ngram_filter" type="collection">
          <parameter key="type">ngram</parameter>
          <parameter key="min_gram">4</parameter>
          <parameter key="max_gram">5</parameter>
        </parameter>
        <parameter key="sw_english_stop_filter" type="collection">
          <parameter key="type">stop</parameter>
          <parameter key="stopwords">_english_</parameter>
        </parameter>
        <parameter key="sw_german_stop_filter" type="collection">
          <parameter key="type">stop</parameter>
          <parameter key="stopwords">_german_</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.normalizer" type="collection">
      <parameter key="sw_lowercase_normalizer" type="collection">
        <parameter key="type">custom</parameter>
        <parameter key="filter" type="collection">
          <parameter>lowercase</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.normalizer.sw_lowercase_normalizer" type="collection">
      <parameter key="type">custom</parameter>
      <parameter key="filter" type="collection">
        <parameter>lowercase</parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.normalizer.sw_lowercase_normalizer.type">custom</parameter>
    <parameter key="elasticsearch.analysis.normalizer.sw_lowercase_normalizer.filter" type="collection">
      <parameter>lowercase</parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.normalizer.sw_lowercase_normalizer.filter.0">lowercase</parameter>
    <parameter key="elasticsearch.analysis.analyzer" type="collection">
      <parameter key="sw_ngram_analyzer" type="collection">
        <parameter key="type">custom</parameter>
        <parameter key="tokenizer">whitespace</parameter>
        <parameter key="filter" type="collection">
          <parameter>lowercase</parameter>
          <parameter>sw_ngram_filter</parameter>
        </parameter>
      </parameter>
      <parameter key="sw_english_analyzer" type="collection">
        <parameter key="type">custom</parameter>
        <parameter key="tokenizer">standard</parameter>
        <parameter key="filter" type="collection">
          <parameter>lowercase</parameter>
          <parameter>sw_english_stop_filter</parameter>
        </parameter>
      </parameter>
      <parameter key="sw_german_analyzer" type="collection">
        <parameter key="type">custom</parameter>
        <parameter key="tokenizer">standard</parameter>
        <parameter key="filter" type="collection">
          <parameter>lowercase</parameter>
          <parameter>sw_german_stop_filter</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_ngram_analyzer" type="collection">
      <parameter key="type">custom</parameter>
      <parameter key="tokenizer">whitespace</parameter>
      <parameter key="filter" type="collection">
        <parameter>lowercase</parameter>
        <parameter>sw_ngram_filter</parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_ngram_analyzer.type">custom</parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_ngram_analyzer.tokenizer">whitespace</parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_ngram_analyzer.filter" type="collection">
      <parameter>lowercase</parameter>
      <parameter>sw_ngram_filter</parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_ngram_analyzer.filter.0">lowercase</parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_ngram_analyzer.filter.1">sw_ngram_filter</parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_english_analyzer" type="collection">
      <parameter key="type">custom</parameter>
      <parameter key="tokenizer">standard</parameter>
      <parameter key="filter" type="collection">
        <parameter>lowercase</parameter>
        <parameter>sw_english_stop_filter</parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_english_analyzer.type">custom</parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_english_analyzer.tokenizer">standard</parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_english_analyzer.filter" type="collection">
      <parameter>lowercase</parameter>
      <parameter>sw_english_stop_filter</parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_english_analyzer.filter.0">lowercase</parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_english_analyzer.filter.1">sw_english_stop_filter</parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_german_analyzer" type="collection">
      <parameter key="type">custom</parameter>
      <parameter key="tokenizer">standard</parameter>
      <parameter key="filter" type="collection">
        <parameter>lowercase</parameter>
        <parameter>sw_german_stop_filter</parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_german_analyzer.type">custom</parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_german_analyzer.tokenizer">standard</parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_german_analyzer.filter" type="collection">
      <parameter>lowercase</parameter>
      <parameter>sw_german_stop_filter</parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_german_analyzer.filter.0">lowercase</parameter>
    <parameter key="elasticsearch.analysis.analyzer.sw_german_analyzer.filter.1">sw_german_stop_filter</parameter>
    <parameter key="elasticsearch.analysis.filter" type="collection">
      <parameter key="sw_ngram_filter" type="collection">
        <parameter key="type">ngram</parameter>
        <parameter key="min_gram">4</parameter>
        <parameter key="max_gram">5</parameter>
      </parameter>
      <parameter key="sw_english_stop_filter" type="collection">
        <parameter key="type">stop</parameter>
        <parameter key="stopwords">_english_</parameter>
      </parameter>
      <parameter key="sw_german_stop_filter" type="collection">
        <parameter key="type">stop</parameter>
        <parameter key="stopwords">_german_</parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.filter.sw_ngram_filter" type="collection">
      <parameter key="type">ngram</parameter>
      <parameter key="min_gram">4</parameter>
      <parameter key="max_gram">5</parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.filter.sw_ngram_filter.type">ngram</parameter>
    <parameter key="elasticsearch.analysis.filter.sw_ngram_filter.min_gram">4</parameter>
    <parameter key="elasticsearch.analysis.filter.sw_ngram_filter.max_gram">5</parameter>
    <parameter key="elasticsearch.analysis.filter.sw_english_stop_filter" type="collection">
      <parameter key="type">stop</parameter>
      <parameter key="stopwords">_english_</parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.filter.sw_english_stop_filter.type">stop</parameter>
    <parameter key="elasticsearch.analysis.filter.sw_english_stop_filter.stopwords">_english_</parameter>
    <parameter key="elasticsearch.analysis.filter.sw_german_stop_filter" type="collection">
      <parameter key="type">stop</parameter>
      <parameter key="stopwords">_german_</parameter>
    </parameter>
    <parameter key="elasticsearch.analysis.filter.sw_german_stop_filter.type">stop</parameter>
    <parameter key="elasticsearch.analysis.filter.sw_german_stop_filter.stopwords">_german_</parameter>
    <parameter key="elasticsearch.language_analyzer_mapping" type="collection">
      <parameter key="en">sw_english_analyzer</parameter>
      <parameter key="de">sw_german_analyzer</parameter>
      <parameter key="gsw">sw_german_analyzer</parameter>
      <parameter key="nds">sw_german_analyzer</parameter>
    </parameter>
    <parameter key="elasticsearch.language_analyzer_mapping.en">sw_english_analyzer</parameter>
    <parameter key="elasticsearch.language_analyzer_mapping.de">sw_german_analyzer</parameter>
    <parameter key="elasticsearch.language_analyzer_mapping.gsw">sw_german_analyzer</parameter>
    <parameter key="elasticsearch.language_analyzer_mapping.nds">sw_german_analyzer</parameter>
    <parameter key="elasticsearch.dynamic_templates" type="collection">
      <parameter type="collection">
        <parameter key="keywords" type="collection">
          <parameter key="match_mapping_type">string</parameter>
          <parameter key="mapping" type="collection">
            <parameter key="type">keyword</parameter>
            <parameter key="normalizer">sw_lowercase_normalizer</parameter>
            <parameter key="fields" type="collection">
              <parameter key="text" type="collection">
                <parameter key="type">text</parameter>
              </parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.dynamic_templates.0" type="collection">
      <parameter key="keywords" type="collection">
        <parameter key="match_mapping_type">string</parameter>
        <parameter key="mapping" type="collection">
          <parameter key="type">keyword</parameter>
          <parameter key="normalizer">sw_lowercase_normalizer</parameter>
          <parameter key="fields" type="collection">
            <parameter key="text" type="collection">
              <parameter key="type">text</parameter>
            </parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.dynamic_templates.0.keywords" type="collection">
      <parameter key="match_mapping_type">string</parameter>
      <parameter key="mapping" type="collection">
        <parameter key="type">keyword</parameter>
        <parameter key="normalizer">sw_lowercase_normalizer</parameter>
        <parameter key="fields" type="collection">
          <parameter key="text" type="collection">
            <parameter key="type">text</parameter>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.dynamic_templates.0.keywords.match_mapping_type">string</parameter>
    <parameter key="elasticsearch.dynamic_templates.0.keywords.mapping" type="collection">
      <parameter key="type">keyword</parameter>
      <parameter key="normalizer">sw_lowercase_normalizer</parameter>
      <parameter key="fields" type="collection">
        <parameter key="text" type="collection">
          <parameter key="type">text</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.dynamic_templates.0.keywords.mapping.type">keyword</parameter>
    <parameter key="elasticsearch.dynamic_templates.0.keywords.mapping.normalizer">sw_lowercase_normalizer</parameter>
    <parameter key="elasticsearch.dynamic_templates.0.keywords.mapping.fields" type="collection">
      <parameter key="text" type="collection">
        <parameter key="type">text</parameter>
      </parameter>
    </parameter>
    <parameter key="elasticsearch.dynamic_templates.0.keywords.mapping.fields.text" type="collection">
      <parameter key="type">text</parameter>
    </parameter>
    <parameter key="elasticsearch.dynamic_templates.0.keywords.mapping.fields.text.type">text</parameter>
    <parameter key="elasticsearch.logger_level" type="constant">Monolog\Level::Debug</parameter>
    <parameter key="storefront.reverse_proxy" type="collection">
      <parameter key="enabled">false</parameter>
      <parameter key="ban_method">BAN</parameter>
      <parameter key="hosts" type="collection">
        <parameter>http://varnish</parameter>
      </parameter>
      <parameter key="max_parallel_invalidations">2</parameter>
      <parameter key="redis_url">redis://redis</parameter>
      <parameter key="purge_all" type="collection">
        <parameter key="ban_method">BAN</parameter>
        <parameter key="ban_headers" type="collection"/>
        <parameter key="urls" type="collection">
          <parameter>/</parameter>
        </parameter>
      </parameter>
      <parameter key="fastly" type="collection">
        <parameter key="enabled">false</parameter>
        <parameter key="api_key"></parameter>
        <parameter key="instance_tag"></parameter>
        <parameter key="service_id"></parameter>
        <parameter key="soft_purge" type="string">0</parameter>
        <parameter key="tag_prefix"></parameter>
      </parameter>
      <parameter key="use_varnish_xkey">false</parameter>
      <parameter key="ban_headers" type="collection"/>
    </parameter>
    <parameter key="storefront.reverse_proxy.enabled">false</parameter>
    <parameter key="storefront.reverse_proxy.ban_method">BAN</parameter>
    <parameter key="storefront.reverse_proxy.hosts" type="collection">
      <parameter>http://varnish</parameter>
    </parameter>
    <parameter key="storefront.reverse_proxy.hosts.0">http://varnish</parameter>
    <parameter key="storefront.reverse_proxy.max_parallel_invalidations">2</parameter>
    <parameter key="storefront.reverse_proxy.redis_url">redis://redis</parameter>
    <parameter key="storefront.reverse_proxy.purge_all" type="collection">
      <parameter key="ban_method">BAN</parameter>
      <parameter key="ban_headers" type="collection"/>
      <parameter key="urls" type="collection">
        <parameter>/</parameter>
      </parameter>
    </parameter>
    <parameter key="storefront.reverse_proxy.purge_all.ban_method">BAN</parameter>
    <parameter key="storefront.reverse_proxy.purge_all.ban_headers" type="collection"/>
    <parameter key="storefront.reverse_proxy.purge_all.urls" type="collection">
      <parameter>/</parameter>
    </parameter>
    <parameter key="storefront.reverse_proxy.purge_all.urls.0">/</parameter>
    <parameter key="storefront.reverse_proxy.fastly" type="collection">
      <parameter key="enabled">false</parameter>
      <parameter key="api_key"></parameter>
      <parameter key="instance_tag"></parameter>
      <parameter key="service_id"></parameter>
      <parameter key="soft_purge" type="string">0</parameter>
      <parameter key="tag_prefix"></parameter>
    </parameter>
    <parameter key="storefront.reverse_proxy.fastly.enabled">false</parameter>
    <parameter key="storefront.reverse_proxy.fastly.api_key"></parameter>
    <parameter key="storefront.reverse_proxy.fastly.instance_tag"></parameter>
    <parameter key="storefront.reverse_proxy.fastly.service_id"></parameter>
    <parameter key="storefront.reverse_proxy.fastly.soft_purge" type="string">0</parameter>
    <parameter key="storefront.reverse_proxy.fastly.tag_prefix"></parameter>
    <parameter key="storefront.reverse_proxy.use_varnish_xkey">false</parameter>
    <parameter key="storefront.reverse_proxy.ban_headers" type="collection"/>
    <parameter key="storefront.http_cache" type="collection">
      <parameter key="ignored_url_parameters" type="collection">
        <parameter>pk_campaign</parameter>
        <parameter>piwik_campaign</parameter>
        <parameter>pk_kwd</parameter>
        <parameter>piwik_kwd</parameter>
        <parameter>pk_keyword</parameter>
        <parameter>mtm_campaign</parameter>
        <parameter>matomo_campaign</parameter>
        <parameter>mtm_cid</parameter>
        <parameter>matomo_cid</parameter>
        <parameter>mtm_kwd</parameter>
        <parameter>matomo_kwd</parameter>
        <parameter>mtm_keyword</parameter>
        <parameter>matomo_keyword</parameter>
        <parameter>mtm_source</parameter>
        <parameter>matomo_source</parameter>
        <parameter>mtm_medium</parameter>
        <parameter>matomo_medium</parameter>
        <parameter>mtm_content</parameter>
        <parameter>matomo_content</parameter>
        <parameter>mtm_group</parameter>
        <parameter>matomo_group</parameter>
        <parameter>mtm_placement</parameter>
        <parameter>matomo_placement</parameter>
        <parameter>pixelId</parameter>
        <parameter>kwid</parameter>
        <parameter>kw</parameter>
        <parameter>chl</parameter>
        <parameter>dv</parameter>
        <parameter>nk</parameter>
        <parameter>pa</parameter>
        <parameter>camid</parameter>
        <parameter>adgid</parameter>
        <parameter>utm_term</parameter>
        <parameter>utm_source</parameter>
        <parameter>utm_medium</parameter>
        <parameter>utm_campaign</parameter>
        <parameter>utm_content</parameter>
        <parameter>cx</parameter>
        <parameter>ie</parameter>
        <parameter>cof</parameter>
        <parameter>siteurl</parameter>
        <parameter>_ga</parameter>
        <parameter>adgroupid</parameter>
        <parameter>campaignid</parameter>
        <parameter>adid</parameter>
        <parameter>gclsrc</parameter>
        <parameter>gclid</parameter>
        <parameter>fbclid</parameter>
        <parameter>fb_action_ids</parameter>
        <parameter>fb_action_types</parameter>
        <parameter>fb_source</parameter>
        <parameter>mc_cid</parameter>
        <parameter>mc_eid</parameter>
        <parameter>_bta_tid</parameter>
        <parameter>_bta_c</parameter>
        <parameter>trk_contact</parameter>
        <parameter>trk_msg</parameter>
        <parameter>trk_module</parameter>
        <parameter>trk_sid</parameter>
        <parameter>gdfms</parameter>
        <parameter>gdftrk</parameter>
        <parameter>gdffi</parameter>
        <parameter>_ke</parameter>
        <parameter>redirect_log_mongo_id</parameter>
        <parameter>redirect_mongo_id</parameter>
        <parameter>sb_referer_host</parameter>
        <parameter>mkwid</parameter>
        <parameter>pcrid</parameter>
        <parameter>ef_id</parameter>
        <parameter>s_kwcid</parameter>
        <parameter>msclkid</parameter>
        <parameter>dm_i</parameter>
        <parameter>epik</parameter>
        <parameter>pp</parameter>
      </parameter>
      <parameter key="stale_while_revalidate">null</parameter>
      <parameter key="stale_if_error">null</parameter>
    </parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters" type="collection">
      <parameter>pk_campaign</parameter>
      <parameter>piwik_campaign</parameter>
      <parameter>pk_kwd</parameter>
      <parameter>piwik_kwd</parameter>
      <parameter>pk_keyword</parameter>
      <parameter>mtm_campaign</parameter>
      <parameter>matomo_campaign</parameter>
      <parameter>mtm_cid</parameter>
      <parameter>matomo_cid</parameter>
      <parameter>mtm_kwd</parameter>
      <parameter>matomo_kwd</parameter>
      <parameter>mtm_keyword</parameter>
      <parameter>matomo_keyword</parameter>
      <parameter>mtm_source</parameter>
      <parameter>matomo_source</parameter>
      <parameter>mtm_medium</parameter>
      <parameter>matomo_medium</parameter>
      <parameter>mtm_content</parameter>
      <parameter>matomo_content</parameter>
      <parameter>mtm_group</parameter>
      <parameter>matomo_group</parameter>
      <parameter>mtm_placement</parameter>
      <parameter>matomo_placement</parameter>
      <parameter>pixelId</parameter>
      <parameter>kwid</parameter>
      <parameter>kw</parameter>
      <parameter>chl</parameter>
      <parameter>dv</parameter>
      <parameter>nk</parameter>
      <parameter>pa</parameter>
      <parameter>camid</parameter>
      <parameter>adgid</parameter>
      <parameter>utm_term</parameter>
      <parameter>utm_source</parameter>
      <parameter>utm_medium</parameter>
      <parameter>utm_campaign</parameter>
      <parameter>utm_content</parameter>
      <parameter>cx</parameter>
      <parameter>ie</parameter>
      <parameter>cof</parameter>
      <parameter>siteurl</parameter>
      <parameter>_ga</parameter>
      <parameter>adgroupid</parameter>
      <parameter>campaignid</parameter>
      <parameter>adid</parameter>
      <parameter>gclsrc</parameter>
      <parameter>gclid</parameter>
      <parameter>fbclid</parameter>
      <parameter>fb_action_ids</parameter>
      <parameter>fb_action_types</parameter>
      <parameter>fb_source</parameter>
      <parameter>mc_cid</parameter>
      <parameter>mc_eid</parameter>
      <parameter>_bta_tid</parameter>
      <parameter>_bta_c</parameter>
      <parameter>trk_contact</parameter>
      <parameter>trk_msg</parameter>
      <parameter>trk_module</parameter>
      <parameter>trk_sid</parameter>
      <parameter>gdfms</parameter>
      <parameter>gdftrk</parameter>
      <parameter>gdffi</parameter>
      <parameter>_ke</parameter>
      <parameter>redirect_log_mongo_id</parameter>
      <parameter>redirect_mongo_id</parameter>
      <parameter>sb_referer_host</parameter>
      <parameter>mkwid</parameter>
      <parameter>pcrid</parameter>
      <parameter>ef_id</parameter>
      <parameter>s_kwcid</parameter>
      <parameter>msclkid</parameter>
      <parameter>dm_i</parameter>
      <parameter>epik</parameter>
      <parameter>pp</parameter>
    </parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.0">pk_campaign</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.1">piwik_campaign</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.2">pk_kwd</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.3">piwik_kwd</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.4">pk_keyword</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.5">mtm_campaign</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.6">matomo_campaign</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.7">mtm_cid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.8">matomo_cid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.9">mtm_kwd</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.10">matomo_kwd</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.11">mtm_keyword</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.12">matomo_keyword</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.13">mtm_source</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.14">matomo_source</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.15">mtm_medium</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.16">matomo_medium</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.17">mtm_content</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.18">matomo_content</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.19">mtm_group</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.20">matomo_group</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.21">mtm_placement</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.22">matomo_placement</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.23">pixelId</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.24">kwid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.25">kw</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.26">chl</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.27">dv</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.28">nk</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.29">pa</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.30">camid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.31">adgid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.32">utm_term</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.33">utm_source</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.34">utm_medium</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.35">utm_campaign</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.36">utm_content</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.37">cx</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.38">ie</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.39">cof</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.40">siteurl</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.41">_ga</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.42">adgroupid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.43">campaignid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.44">adid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.45">gclsrc</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.46">gclid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.47">fbclid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.48">fb_action_ids</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.49">fb_action_types</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.50">fb_source</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.51">mc_cid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.52">mc_eid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.53">_bta_tid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.54">_bta_c</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.55">trk_contact</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.56">trk_msg</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.57">trk_module</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.58">trk_sid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.59">gdfms</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.60">gdftrk</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.61">gdffi</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.62">_ke</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.63">redirect_log_mongo_id</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.64">redirect_mongo_id</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.65">sb_referer_host</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.66">mkwid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.67">pcrid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.68">ef_id</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.69">s_kwcid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.70">msclkid</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.71">dm_i</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.72">epik</parameter>
    <parameter key="storefront.http_cache.ignored_url_parameters.73">pp</parameter>
    <parameter key="storefront.http_cache.stale_while_revalidate">null</parameter>
    <parameter key="storefront.http_cache.stale_if_error">null</parameter>
    <parameter key="storefront.theme" type="collection">
      <parameter key="file_delete_delay">900</parameter>
      <parameter key="auto_prefix_css">false</parameter>
      <parameter key="config_loader_id">Shopware\Storefront\Theme\ConfigLoader\DatabaseConfigLoader</parameter>
      <parameter key="theme_path_builder_id">Shopware\Storefront\Theme\SeedingThemePathBuilder</parameter>
      <parameter key="available_theme_provider">Shopware\Storefront\Theme\ConfigLoader\DatabaseAvailableThemeProvider</parameter>
    </parameter>
    <parameter key="storefront.theme.file_delete_delay">900</parameter>
    <parameter key="storefront.theme.auto_prefix_css">false</parameter>
    <parameter key="storefront.theme.config_loader_id">Shopware\Storefront\Theme\ConfigLoader\DatabaseConfigLoader</parameter>
    <parameter key="storefront.theme.theme_path_builder_id">Shopware\Storefront\Theme\SeedingThemePathBuilder</parameter>
    <parameter key="storefront.theme.available_theme_provider">Shopware\Storefront\Theme\ConfigLoader\DatabaseAvailableThemeProvider</parameter>
    <parameter key="twig.cache">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/twig</parameter>
    <parameter key="shopware.filesystem.theme.url"></parameter>
    <parameter key="shopware.filesystem.theme.type">local</parameter>
    <parameter key="shopware.filesystem.theme.config" type="collection">
      <parameter key="root">/home/avinash/Desktop/work/Shopware/public</parameter>
    </parameter>
    <parameter key="shopware.filesystem.asset.url"></parameter>
    <parameter key="shopware.filesystem.asset.type">local</parameter>
    <parameter key="shopware.filesystem.asset.config" type="collection">
      <parameter key="root">/home/avinash/Desktop/work/Shopware/public</parameter>
    </parameter>
    <parameter key="shopware.filesystem.sitemap.url"></parameter>
    <parameter key="shopware.filesystem.sitemap.type">local</parameter>
    <parameter key="shopware.filesystem.sitemap.config" type="collection">
      <parameter key="root">/home/avinash/Desktop/work/Shopware/public</parameter>
    </parameter>
    <parameter key="shopware.filesystem.public.url"></parameter>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="EasyCorp\EasyLog\EasyLogHandler" class="EasyCorp\EasyLog\EasyLogHandler">
      <argument>/home/avinash/Desktop/work/Shopware/var/log/dev.log</argument>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Asset\AssetPackageService" class="Shopware\Core\Framework\Adapter\Asset\AssetPackageService" public="true">
      <deprecated package="shopware/core" version="6.6.0.0">tag:v6.6.0 - The %service_id% service will be removed in v6.6.0.0</deprecated>
    </service>
    <service id="Doctrine\DBAL\Connection" class="Doctrine\DBAL\Connection" public="true">
      <factory class="Shopware\Core\Kernel" method="getConnection"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\QueryDataBagResolver" class="Shopware\Core\Framework\Routing\QueryDataBagResolver">
      <tag name="controller.argument_value_resolver" priority="1000"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\RequestDataBagResolver" class="Shopware\Core\Framework\Routing\RequestDataBagResolver">
      <tag name="controller.argument_value_resolver" priority="1000"/>
    </service>
    <service id="slugify" class="Cocur\Slugify\Slugify">
      <argument>%shopware.slug.config%</argument>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationSource.core" class="Shopware\Core\Framework\Migration\MigrationSource">
      <tag name="shopware.migration_source"/>
      <argument>core</argument>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationSource.core.V6_3" class="Shopware\Core\Framework\Migration\MigrationSource">
      <tag name="shopware.migration_source"/>
      <argument>core.V6_3</argument>
      <call method="addDirectory">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Migration/V6_3</argument>
        <argument>Shopware\Core\Migration\V6_3</argument>
      </call>
      <call method="addDirectory">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Migration/V6_3</argument>
        <argument>Shopware\Storefront\Migration\V6_3</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationSource.core.V6_4" class="Shopware\Core\Framework\Migration\MigrationSource">
      <tag name="shopware.migration_source"/>
      <argument>core.V6_4</argument>
      <call method="addDirectory">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Migration/V6_4</argument>
        <argument>Shopware\Core\Migration\V6_4</argument>
      </call>
      <call method="addDirectory">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/administration/Migration/V6_4</argument>
        <argument>Shopware\Administration\Migration\V6_4</argument>
      </call>
      <call method="addDirectory">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Migration/V6_4</argument>
        <argument>Shopware\Storefront\Migration\V6_4</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationSource.core.V6_5" class="Shopware\Core\Framework\Migration\MigrationSource">
      <tag name="shopware.migration_source"/>
      <argument>core.V6_5</argument>
      <call method="addDirectory">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Migration/V6_5</argument>
        <argument>Shopware\Core\Migration\V6_5</argument>
      </call>
      <call method="addDirectory">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/elasticsearch/Migration/V6_5</argument>
        <argument>Shopware\Elasticsearch\Migration\V6_5</argument>
      </call>
      <call method="addDirectory">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Migration/V6_5</argument>
        <argument>Shopware\Storefront\Migration\V6_5</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationSource.core.V6_6" class="Shopware\Core\Framework\Migration\MigrationSource">
      <tag name="shopware.migration_source"/>
      <argument>core.V6_6</argument>
      <call method="addDirectory">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Migration/V6_6</argument>
        <argument>Shopware\Core\Migration\V6_6</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationSource.core.V6_7" class="Shopware\Core\Framework\Migration\MigrationSource">
      <tag name="shopware.migration_source"/>
      <argument>core.V6_7</argument>
      <call method="addDirectory">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Migration/V6_7</argument>
        <argument>Shopware\Core\Migration\V6_7</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationSource.null" class="Shopware\Core\Framework\Migration\MigrationSource">
      <tag name="shopware.migration_source"/>
      <argument type="string">null</argument>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationRuntime" class="Shopware\Core\Framework\Migration\MigrationRuntime">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationCollectionLoader" class="Shopware\Core\Framework\Migration\MigrationCollectionLoader" public="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\Migration\MigrationRuntime"/>
      <argument type="tagged_iterator" tag="shopware.migration_source"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Shopware\Core\Framework\Migration\Command\CreateMigrationCommand" class="Shopware\Core\Framework\Migration\Command\CreateMigrationCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\KernelPluginCollection"/>
      <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core</argument>
      <argument>6.5.7.3</argument>
      <call method="setName">
        <argument>database:create-migration</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new migration file</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Migration\Command\RefreshMigrationCommand" class="Shopware\Core\Framework\Migration\Command\RefreshMigrationCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>database:refresh-migration</argument>
      </call>
      <call method="setDescription">
        <argument>Refreshes the migration state</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Migration\Command\MigrationCommand" class="Shopware\Core\Framework\Migration\Command\MigrationCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument>6.5.7.3</argument>
      <call method="setName">
        <argument>database:migrate</argument>
      </call>
      <call method="setDescription">
        <argument>Executes all migrations</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Demodata\PersonalData\CleanPersonalDataCommand" class="Shopware\Core\Framework\Demodata\PersonalData\CleanPersonalDataCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="customer.repository"/>
      <call method="setName">
        <argument>database:clean-personal-data</argument>
      </call>
      <call method="setDescription">
        <argument>Cleans personal data from the database</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Migration\Command\MigrationDestructiveCommand" class="Shopware\Core\Framework\Migration\Command\MigrationDestructiveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument>6.5.7.3</argument>
      <call method="setName">
        <argument>database:migrate-destructive</argument>
      </call>
      <call method="setDescription">
        <argument>Executes all migrations</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Migration\IndexerQueuer" class="Shopware\Core\Framework\Migration\IndexerQueuer" public="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Struct\Serializer\StructNormalizer" class="Shopware\Core\Framework\Struct\Serializer\StructNormalizer">
      <tag name="serializer.normalizer"/>
    </service>
    <service id="Shopware\Core\Framework\Struct\Serializer\StructDecoder" class="Shopware\Core\Framework\Struct\Serializer\StructDecoder"/>
    <service id="Shopware\Core\Framework\Routing\ContextResolverListener" class="Shopware\Core\Framework\Routing\ContextResolverListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\CoreSubscriber" class="Shopware\Core\Framework\Routing\CoreSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>%shopware.security.csp_templates%</argument>
    </service>
    <service id="Shopware\Core\Framework\Routing\SymfonyRouteScopeWhitelist" class="Shopware\Core\Framework\Routing\SymfonyRouteScopeWhitelist">
      <tag name="shopware.route_scope_whitelist"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\PaymentScopeWhitelist" class="Shopware\Core\Framework\Routing\PaymentScopeWhitelist">
      <tag name="shopware.route_scope_whitelist"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\RouteScopeListener" class="Shopware\Core\Framework\Routing\RouteScopeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Shopware\Core\Framework\Routing\RouteScopeRegistry"/>
      <argument type="service" id="request_stack"/>
      <argument type="tagged_iterator" tag="shopware.route_scope_whitelist"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\CanonicalRedirectService" class="Shopware\Core\Framework\Routing\CanonicalRedirectService" public="true">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\RouteEventSubscriber" class="Shopware\Core\Framework\Routing\RouteEventSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\MaintenanceModeResolver" class="Shopware\Core\Framework\Routing\MaintenanceModeResolver">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\System\CustomEntity\Xml\Config\CustomEntityEnrichmentService" class="Shopware\Core\System\CustomEntity\Xml\Config\CustomEntityEnrichmentService">
      <argument type="service" id="Shopware\Core\System\CustomEntity\Xml\Config\AdminUi\AdminUiXmlSchemaValidator"/>
    </service>
    <service id="Shopware\Core\System\CustomEntity\CustomEntityLifecycleService" class="Shopware\Core\System\CustomEntity\CustomEntityLifecycleService">
      <argument type="service" id="Shopware\Core\System\CustomEntity\Schema\CustomEntityPersister"/>
      <argument type="service" id="Shopware\Core\System\CustomEntity\Schema\CustomEntitySchemaUpdater"/>
      <argument type="service" id="Shopware\Core\System\CustomEntity\Xml\Config\CustomEntityEnrichmentService"/>
      <argument type="service" id="Shopware\Core\System\CustomEntity\Xml\CustomEntityXmlSchemaValidator"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Translation\Translator" class="Shopware\Core\Framework\Adapter\Translation\Translator">
      <tag name="monolog.logger"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>dev</argument>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\System\Locale\LanguageLocaleCodeProvider"/>
      <argument type="service" id="Shopware\Core\System\Snippet\SnippetService"/>
      <argument>true</argument>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Translation\TranslatorCacheInvalidate" class="Shopware\Core\Framework\Adapter\Translation\TranslatorCacheInvalidate">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\Snippet\SnippetService" class="Shopware\Core\System\Snippet\SnippetService" lazy="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\System\Snippet\Files\SnippetFileCollection"/>
      <argument type="service" id="snippet.repository"/>
      <argument type="service" id="snippet_set.repository"/>
      <argument type="service" id="sales_channel_domain.repository"/>
      <argument type="service" id="Shopware\Core\System\Snippet\Filter\SnippetFilterFactory"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="Shopware\Storefront\Theme\SalesChannelThemeLoader" on-invalid="null"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Api\SnippetController" class="Shopware\Core\System\Snippet\Api\SnippetController" public="true">
      <argument type="service" id="Shopware\Core\System\Snippet\SnippetService"/>
      <argument type="service" id="Shopware\Core\System\Snippet\Files\SnippetFileCollection"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Snippet\Files\SnippetFileLoader" class="Shopware\Core\System\Snippet\Files\SnippetFileLoader">
      <argument type="service" id="kernel"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\System\Snippet\Files\AppSnippetFileLoader"/>
      <argument type="service" id="Shopware\Core\Framework\App\ActiveAppsLoader"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Files\AppSnippetFileLoader" class="Shopware\Core\System\Snippet\Files\AppSnippetFileLoader">
      <argument>/home/avinash/Desktop/work/Shopware</argument>
    </service>
    <service id="Shopware\Core\System\Snippet\Files\SnippetFileCollection" class="Shopware\Core\System\Snippet\Files\SnippetFileCollection" public="true" lazy="true">
      <factory service="Shopware\Core\System\Snippet\Files\SnippetFileCollectionFactory" method="createSnippetFileCollection"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Files\SnippetFileCollectionFactory" class="Shopware\Core\System\Snippet\Files\SnippetFileCollectionFactory">
      <argument type="service" id="Shopware\Core\System\Snippet\Files\SnippetFileLoader"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Filter\SnippetFilterFactory" class="Shopware\Core\System\Snippet\Filter\SnippetFilterFactory" public="true">
      <argument type="tagged_iterator" tag="shopware.snippet.filter"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Filter\AuthorFilter" class="Shopware\Core\System\Snippet\Filter\AuthorFilter">
      <tag name="shopware.snippet.filter"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Filter\AddedFilter" class="Shopware\Core\System\Snippet\Filter\AddedFilter">
      <tag name="shopware.snippet.filter"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Filter\EditedFilter" class="Shopware\Core\System\Snippet\Filter\EditedFilter">
      <tag name="shopware.snippet.filter"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Filter\EmptySnippetFilter" class="Shopware\Core\System\Snippet\Filter\EmptySnippetFilter">
      <tag name="shopware.snippet.filter"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Filter\NamespaceFilter" class="Shopware\Core\System\Snippet\Filter\NamespaceFilter">
      <tag name="shopware.snippet.filter"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Filter\TermFilter" class="Shopware\Core\System\Snippet\Filter\TermFilter">
      <tag name="shopware.snippet.filter"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Filter\TranslationKeyFilter" class="Shopware\Core\System\Snippet\Filter\TranslationKeyFilter">
      <tag name="shopware.snippet.filter"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\TemplateFinder" class="Shopware\Core\Framework\Adapter\Twig\TemplateFinder" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="twig.loader.chain"/>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/twig</argument>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\NamespaceHierarchy\NamespaceHierarchyBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\TemplateScopeDetector"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\NamespaceHierarchy\NamespaceHierarchyBuilder" class="Shopware\Core\Framework\Adapter\Twig\NamespaceHierarchy\NamespaceHierarchyBuilder">
      <argument type="tagged_iterator" tag="shopware.twig.hierarchy_builder"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\NamespaceHierarchy\BundleHierarchyBuilder" class="Shopware\Core\Framework\Adapter\Twig\NamespaceHierarchy\BundleHierarchyBuilder">
      <tag name="shopware.twig.hierarchy_builder" priority="1000"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\TemplateScopeDetector" class="Shopware\Core\Framework\Adapter\Twig\TemplateScopeDetector">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Extension\NodeExtension" class="Shopware\Core\Framework\Adapter\Twig\Extension\NodeExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\TemplateFinder"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\TemplateScopeDetector"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Extension\PhpSyntaxExtension" class="Shopware\Core\Framework\Adapter\Twig\Extension\PhpSyntaxExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Extension\FeatureFlagExtension" class="Shopware\Core\Framework\Adapter\Twig\Extension\FeatureFlagExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.intl" class="Twig\Extra\Intl\IntlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.string" class="Twig\Extra\String\StringExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Extension\PcreExtension" class="Shopware\Core\Framework\Adapter\Twig\Extension\PcreExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Extension\InstanceOfExtension" class="Shopware\Core\Framework\Adapter\Twig\Extension\InstanceOfExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Filter\CurrencyFilter" class="Shopware\Core\Framework\Adapter\Twig\Filter\CurrencyFilter">
      <tag name="twig.extension"/>
      <argument type="service" id="Shopware\Core\System\Currency\CurrencyFormatter"/>
    </service>
    <service id="Cocur\Slugify\Bridge\Twig\SlugifyExtension" class="Cocur\Slugify\Bridge\Twig\SlugifyExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="slugify"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Filter\ReplaceRecursiveFilter" class="Shopware\Core\Framework\Adapter\Twig\Filter\ReplaceRecursiveFilter">
      <tag name="twig.extension"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\SecurityExtension" class="Shopware\Core\Framework\Adapter\Twig\SecurityExtension">
      <tag name="twig.extension"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\StringTemplateRenderer" class="Shopware\Core\Framework\Adapter\Twig\StringTemplateRenderer">
      <argument type="service" id="twig"/>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/twig</argument>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\TemplateIterator" class="Shopware\Core\Framework\Adapter\Twig\TemplateIterator" public="true">
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\TemplateIterator.inner"/>
      <argument>%kernel.bundles%</argument>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\EntityTemplateLoader" class="Shopware\Core\Framework\Adapter\Twig\EntityTemplateLoader">
      <tag name="twig.loader"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument>dev</argument>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\AppTemplateIterator" class="Shopware\Core\Framework\Adapter\Twig\AppTemplateIterator" public="true">
      <tag name="container.decorator" id="twig.template_iterator" inner="Shopware\Core\Framework\Adapter\Twig\TemplateIterator.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\TemplateIterator"/>
      <argument type="service" id="app_template.repository"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\TwigVariableParser" class="Shopware\Core\Framework\Adapter\Twig\TwigVariableParser">
      <argument type="service" id="twig"/>
      <deprecated package="shopware/core" version="6.6.0.0">tag:v6.6.0 - The %service_id% service will be removed in v6.6.0.0 use "TwigVariableParserFactory" instead.</deprecated>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\TwigVariableParserFactory" class="Shopware\Core\Framework\Adapter\Twig\TwigVariableParserFactory"/>
    <service id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver" class="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver">
      <tag name="container.decorator" id="Shopware\Core\Framework\Routing\ApiRequestContextResolver" inner="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver.inner"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Routing\RouteScopeRegistry"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\ApiOrderCartService" class="Shopware\Core\Checkout\Cart\ApiOrderCartService">
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\SalesChannelProxyController" class="Shopware\Core\Framework\Api\Controller\SalesChannelProxyController" public="true">
      <argument type="service" id="kernel"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
      <argument type="service" id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\ApiOrderCartService"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartOrderRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="request_stack"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Routing\RouteScope" class="Shopware\Core\Framework\Routing\RouteScope">
      <tag name="shopware.route_scope"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\ApiRouteScope" class="Shopware\Core\Framework\Routing\ApiRouteScope">
      <tag name="shopware.route_scope"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\StoreApiRouteScope" class="Shopware\Core\Framework\Routing\StoreApiRouteScope">
      <tag name="shopware.route_scope"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\RouteScopeRegistry" class="Shopware\Core\Framework\Routing\RouteScopeRegistry">
      <argument type="tagged_iterator" tag="shopware.route_scope"/>
    </service>
    <service id="Shopware\Core\Framework\Log\LoggingService" class="Shopware\Core\Framework\Log\LoggingService">
      <tag name="kernel.event_subscriber"/>
      <argument>dev</argument>
      <argument type="service" id="monolog.logger.business_events"/>
    </service>
    <service id="Shopware\Core\Framework\Log\ScheduledTask\LogCleanupTask" class="Shopware\Core\Framework\Log\ScheduledTask\LogCleanupTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Framework\Log\ScheduledTask\LogCleanupTaskHandler" class="Shopware\Core\Framework\Log\ScheduledTask\LogCleanupTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Log\Monolog\DoctrineSQLHandler" class="Shopware\Core\Framework\Log\Monolog\DoctrineSQLHandler">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Log\LogEntryDefinition" class="Shopware\Core\Framework\Log\LogEntryDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Changelog\Processor\ChangelogGenerator" class="Shopware\Core\Framework\Changelog\Processor\ChangelogGenerator">
      <argument type="service" id="Shopware\Core\Framework\Changelog\ChangelogParser"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="filesystem"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument>%shopware.feature.flags%</argument>
    </service>
    <service id="Shopware\Core\Framework\Changelog\Processor\ChangelogReleaseCreator" class="Shopware\Core\Framework\Changelog\Processor\ChangelogReleaseCreator">
      <argument type="service" id="Shopware\Core\Framework\Changelog\ChangelogParser"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="filesystem"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument>%shopware.feature.flags%</argument>
    </service>
    <service id="Shopware\Core\Framework\Changelog\Processor\ChangelogReleaseExporter" class="Shopware\Core\Framework\Changelog\Processor\ChangelogReleaseExporter">
      <argument type="service" id="Shopware\Core\Framework\Changelog\ChangelogParser"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="filesystem"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument>%shopware.feature.flags%</argument>
    </service>
    <service id="Shopware\Core\Framework\Changelog\Processor\ChangelogValidator" class="Shopware\Core\Framework\Changelog\Processor\ChangelogValidator">
      <argument type="service" id="Shopware\Core\Framework\Changelog\ChangelogParser"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="filesystem"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument>%shopware.feature.flags%</argument>
    </service>
    <service id="Shopware\Core\Framework\Changelog\ChangelogParser" class="Shopware\Core\Framework\Changelog\ChangelogParser"/>
    <service id="Shopware\Core\Framework\Changelog\Command\ChangelogCreateCommand" class="Shopware\Core\Framework\Changelog\Command\ChangelogCreateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Changelog\Processor\ChangelogGenerator"/>
      <call method="setName">
        <argument>changelog:create</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a changelog file</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Changelog\Command\ChangelogReleaseCommand" class="Shopware\Core\Framework\Changelog\Command\ChangelogReleaseCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Changelog\Processor\ChangelogReleaseCreator"/>
      <call method="setName">
        <argument>changelog:release</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new changelog release</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Changelog\Command\ChangelogChangeCommand" class="Shopware\Core\Framework\Changelog\Command\ChangelogChangeCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Changelog\Processor\ChangelogReleaseExporter"/>
      <call method="setName">
        <argument>changelog:change</argument>
      </call>
      <call method="setDescription">
        <argument>Changes the changelog of a release</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Changelog\Command\ChangelogCheckCommand" class="Shopware\Core\Framework\Changelog\Command\ChangelogCheckCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Changelog\Processor\ChangelogValidator"/>
      <call method="setName">
        <argument>changelog:check</argument>
      </call>
      <call method="setDescription">
        <argument>Checks the changelog for errors</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Log\LoggerFactory" class="Shopware\Core\Framework\Log\LoggerFactory">
      <argument>/home/avinash/Desktop/work/Shopware/var/log/%%s_dev.log</argument>
      <argument type="service" id="monolog.logger"/>
      <argument>14</argument>
    </service>
    <service id="Shopware\Core\Framework\Routing\Annotation\CriteriaValueResolver" class="Shopware\Core\Framework\Routing\Annotation\CriteriaValueResolver">
      <tag name="controller.argument_value_resolver"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
    </service>
    <service id="Shopware\Core\Framework\Feature\Command\FeatureDumpCommand" class="Shopware\Core\Framework\Feature\Command\FeatureDumpCommand">
      <tag name="console.command"/>
      <tag name="console.command" command="administration:dump:features"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="kernel"/>
      <call method="setName">
        <argument>feature:dump</argument>
      </call>
      <call method="setAliases">
        <argument type="collection">
          <argument>administration:dump:features</argument>
          <argument>administration:dump:features</argument>
        </argument>
      </call>
      <call method="setDescription">
        <argument>Dumps all features</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Command\S3FilesystemVisibilityCommand" class="Shopware\Core\Framework\Adapter\Command\S3FilesystemVisibilityCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="shopware.filesystem.private"/>
      <argument type="service" id="shopware.filesystem.public"/>
      <argument type="service" id="shopware.filesystem.theme"/>
      <argument type="service" id="shopware.filesystem.sitemap"/>
      <argument type="service" id="shopware.filesystem.asset"/>
      <call method="setName">
        <argument>s3:set-visibility</argument>
      </call>
      <call method="setDescription">
        <argument>Sets the visibility of all files in the s3 filesystem to public</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Util\HtmlSanitizer" class="Shopware\Core\Framework\Util\HtmlSanitizer" public="true">
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f</argument>
      <argument>true</argument>
      <argument>%shopware.html_sanitizer.sets%</argument>
      <argument>%shopware.html_sanitizer.fields%</argument>
      <argument>true</argument>
    </service>
    <service id="Shopware\Core\Framework\Log\Monolog\ExcludeExceptionHandler" class="Shopware\Core\Framework\Log\Monolog\ExcludeExceptionHandler">
      <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeExceptionHandler.inner"/>
      <argument>%shopware.logger.exclude_exception%</argument>
    </service>
    <service id="Shopware\Core\Framework\Log\Monolog\ErrorCodeLogLevelHandler" class="Shopware\Core\Framework\Log\Monolog\ErrorCodeLogLevelHandler">
      <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeExceptionHandler"/>
      <argument>%shopware.logger.error_code_log_levels%</argument>
    </service>
    <service id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler" class="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="monolog.handler.main" inner="Shopware\Core\Framework\Log\Monolog\ExcludeExceptionHandler.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ErrorCodeLogLevelHandler"/>
      <argument>%shopware.logger.exclude_events%</argument>
    </service>
    <service id="Shopware\Core\Framework\Routing\RouteParamsCleanupListener" class="Shopware\Core\Framework\Routing\RouteParamsCleanupListener">
      <tag name="kernel.event_listener"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\RedisConnectionFactory" class="Shopware\Core\Framework\Adapter\Cache\RedisConnectionFactory">
      <argument>%env(REDIS_PREFIX)%</argument>
    </service>
    <service id="Shopware\Core\Framework\Routing\Facade\RequestFacadeFactory" class="Shopware\Core\Framework\Routing\Facade\RequestFacadeFactory" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Storage\AbstractKeyValueStorage" class="Shopware\Core\Framework\Adapter\Storage\MySQLKeyValueStorage">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="messenger.bus.shopware" class="Shopware\Core\Framework\Adapter\Messenger\MessageBus">
      <argument type="service" id="messenger.bus.default"/>
      <argument type="collection">
        <argument key="Shopware\Core\Framework\MessageQueue\AsyncMessageInterface">async</argument>
        <argument key="Shopware\Core\Framework\MessageQueue\LowPriorityMessageInterface">low_priority</argument>
        <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage">async</argument>
      </argument>
    </service>
    <service id="Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition" class="Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition" class="Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Acl\AclWriteValidator" class="Shopware\Core\Framework\Api\Acl\AclWriteValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Acl\AclAnnotationValidator" class="Shopware\Core\Framework\Api\Acl\AclAnnotationValidator">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Acl\AclCriteriaValidator" class="Shopware\Core\Framework\Api\Acl\AclCriteriaValidator" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Api\EventListener\Acl\CreditOrderLineItemListener" class="Shopware\Core\Framework\Api\EventListener\Acl\CreditOrderLineItemListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\AclController" class="Shopware\Core\Framework\Api\Controller\AclController" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\CacheIdLoader" class="Shopware\Core\Framework\Adapter\Cache\CacheIdLoader" public="true">
      <argument type="service" id="Shopware\Core\Framework\Adapter\Storage\AbstractKeyValueStorage"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\CacheStateSubscriber" class="Shopware\Core\Framework\Adapter\Cache\CacheStateSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
    </service>
    <service id="shopware.cache.invalidator.storage.cache" class="Shopware\Core\Framework\Adapter\Cache\InvalidatorStorage\CacheInvalidatorStorage">
      <tag name="shopware.cache.invalidator.storage" storage="cache"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="shopware.cache.invalidator.storage.redis_adapter" class="Redis">
      <argument>redis://localhost</argument>
      <factory service="Shopware\Core\Framework\Adapter\Cache\RedisConnectionFactory" method="create"/>
    </service>
    <service id="shopware.cache.invalidator.storage.redis" class="Shopware\Core\Framework\Adapter\Cache\InvalidatorStorage\RedisInvalidatorStorage">
      <tag name="shopware.cache.invalidator.storage" storage="redis"/>
      <argument type="service" id="shopware.cache.invalidator.storage.redis_adapter"/>
    </service>
    <service id="shopware.cache.invalidator.storage.locator" class="Shopware\Core\Framework\DependencyInjection\TaggedServiceLocator">
      <argument type="service" id=".service_locator..PvrcqP"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\InvalidatorStorage\AbstractInvalidatorStorage" class="Shopware\Core\Framework\Adapter\Cache\InvalidatorStorage\AbstractInvalidatorStorage">
      <argument>cache</argument>
      <factory service="shopware.cache.invalidator.storage.locator" method="get"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator" class="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator">
      <argument>0</argument>
      <argument type="collection">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
        <argument type="service" id="cache.http"/>
      </argument>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\InvalidatorStorage\AbstractInvalidatorStorage"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\InvalidateCacheTask" class="Shopware\Core\Framework\Adapter\Cache\InvalidateCacheTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\InvalidateCacheTaskHandler" class="Shopware\Core\Framework\Adapter\Cache\InvalidateCacheTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
      <argument>0</argument>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\CacheClearer" class="Shopware\Core\Framework\Adapter\Cache\CacheClearer">
      <argument type="collection">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
        <argument type="service" id="cache.http"/>
      </argument>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f</argument>
      <argument>dev</argument>
      <argument>false</argument>
      <argument type="service" id="messenger.bus.shopware"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\Message\CleanupOldCacheFoldersHandler" class="Shopware\Core\Framework\Adapter\Cache\Message\CleanupOldCacheFoldersHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheClearer"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\Script\Facade\CacheInvalidatorFacadeHookFactory" class="Shopware\Core\Framework\Adapter\Cache\Script\Facade\CacheInvalidatorFacadeHookFactory" public="true">
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\Script\ScriptCacheInvalidationSubscriber" class="Shopware\Core\Framework\Adapter\Cache\Script\ScriptCacheInvalidationSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Execution\ScriptExecutor"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber" class="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber">
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Category\Event\CategoryIndexerEvent" method="invalidateCategoryRouteByCategoryIds" priority="2000"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Category\Event\CategoryIndexerEvent" method="invalidateListingRouteByCategoryIds" priority="2001"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\LandingPage\Event\LandingPageIndexerEvent" method="invalidateIndexedLandingPages" priority="2000"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductIndexerEvent" method="invalidateSearch" priority="2000"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductIndexerEvent" method="invalidateListings" priority="2001"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductIndexerEvent" method="invalidateProductIds" priority="2002"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductIndexerEvent" method="invalidateDetailRoute" priority="2004"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductIndexerEvent" method="invalidateStreamsAfterIndexing" priority="2005"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductIndexerEvent" method="invalidateReviewRoute" priority="2006"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent" method="invalidateSearch" priority="2000"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent" method="invalidateListings" priority="2001"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent" method="invalidateProductIds" priority="2002"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent" method="invalidateDetailRoute" priority="2004"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent" method="invalidateStreamsAfterIndexing" priority="2005"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent" method="invalidateReviewRoute" priority="2006"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateCmsPageIds" priority="2001"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateCurrencyRoute" priority="2002"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateLanguageRoute" priority="2003"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateNavigationRoute" priority="2004"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidatePaymentMethodRoute" priority="2005"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateProductAssignment" priority="2006"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateManufacturerFilters" priority="2007"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidatePropertyFilters" priority="2008"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateCrossSellingRoute" priority="2009"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateContext" priority="2010"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateShippingMethodRoute" priority="2011"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateSnippets" priority="2012"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateStreamsBeforeIndexing" priority="2013"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateStreamIds" priority="2014"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateCountryRoute" priority="2015"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateSalutationRoute" priority="2016"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateInitialStateIdLoader" priority="2017"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateCountryStateRoute" priority="2018"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Seo\Event\SeoUrlUpdateEvent" method="invalidateSeoUrls" priority="2000"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Rule\Event\RuleIndexerEvent" method="invalidateRules" priority="2000"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\Plugin\Event\PluginPostInstallEvent" method="invalidateRules" priority="2000"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\Plugin\Event\PluginPostInstallEvent" method="invalidateConfig" priority="2001"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\Plugin\Event\PluginPostActivateEvent" method="invalidateRules" priority="2000"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\Plugin\Event\PluginPostActivateEvent" method="invalidateConfig" priority="2001"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\Plugin\Event\PluginPostUpdateEvent" method="invalidateRules" priority="2000"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\Plugin\Event\PluginPostUpdateEvent" method="invalidateConfig" priority="2001"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\Plugin\Event\PluginPostDeactivateEvent" method="invalidateRules" priority="2000"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Framework\Plugin\Event\PluginPostDeactivateEvent" method="invalidateConfig" priority="2001"/>
      <tag name="kernel.event_listener" event="Shopware\Core\System\SystemConfig\Event\SystemConfigChangedHook" method="invalidateConfigKey" priority="2000"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Sitemap\Event\SitemapGeneratedEvent" method="invalidateSitemap" priority="2000"/>
      <tag name="kernel.event_listener" event="product_search_config.written" method="invalidateSearch" priority="2002"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\CacheTagCollection" class="Shopware\Core\Framework\Adapter\Cache\CacheTagCollection"/>
    <service id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator" class="Shopware\Core\Framework\Adapter\Cache\CacheDecorator">
      <tag name="cache.taggable" pool="cache.object"/>
      <tag name="monolog.logger" channel="cache"/>
      <tag name="container.decorator" id="cache.object" inner="Shopware\Core\Framework\Adapter\Cache\CacheDecorator.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheTagCollection"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\FallbackController" class="Shopware\Core\Framework\Api\Controller\FallbackController" public="true">
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\EventListener\CorsListener" class="Shopware\Core\Framework\Api\EventListener\CorsListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="Shopware\Core\Framework\Api\EventListener\ResponseExceptionListener" class="Shopware\Core\Framework\Api\EventListener\ResponseExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <argument>true</argument>
    </service>
    <service id="Shopware\Core\Framework\Api\EventListener\ResponseHeaderListener" class="Shopware\Core\Framework\Api\EventListener\ResponseHeaderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Context\ContextValueResolver" class="Shopware\Core\Framework\Api\Context\ContextValueResolver">
      <tag name="controller.argument_value_resolver" priority="1000"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\AccessKeyController" class="Shopware\Core\Framework\Api\Controller\AccessKeyController" public="true">
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\ApiController" class="Shopware\Core\Framework\Api\Controller\ApiController" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api.request_criteria_builder"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\EntityProtection\EntityProtectionValidator"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Acl\AclCriteriaValidator"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\SyncController" class="Shopware\Core\Framework\Api\Controller\SyncController" public="true">
      <argument type="service" id="Shopware\Core\Framework\Api\Sync\SyncService"/>
      <argument type="service" id="serializer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\IndexingController" class="Shopware\Core\Framework\Api\Controller\IndexingController" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Command\DumpSchemaCommand" class="Shopware\Core\Framework\Api\Command\DumpSchemaCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\DefinitionService"/>
      <call method="setName">
        <argument>framework:schema</argument>
      </call>
      <call method="setDescription">
        <argument>Dumps the schema of the given entity</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Command\DumpClassSchemaCommand" class="Shopware\Core\Framework\Api\Command\DumpClassSchemaCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>%kernel.bundles_metadata%</argument>
      <call method="setName">
        <argument>framework:dump:class:schema</argument>
      </call>
      <call method="setDescription">
        <argument>Dumps the schema of the given entity</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Serializer\JsonApiDecoder" class="Shopware\Core\Framework\Api\Serializer\JsonApiDecoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Response\ResponseFactoryRegistry" class="Shopware\Core\Framework\Api\Response\ResponseFactoryRegistry">
      <argument type="service" id="Shopware\Core\Framework\Api\Response\Type\Api\JsonApiType"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Response\Type\Api\JsonType"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Response\Type\Api\JsonApiType" class="Shopware\Core\Framework\Api\Response\Type\Api\JsonApiType">
      <argument type="service" id="Shopware\Core\Framework\Api\Serializer\JsonApiEncoder"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Api\StructEncoder"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Serializer\JsonApiEncoder" class="Shopware\Core\Framework\Api\Serializer\JsonApiEncoder"/>
    <service id="Shopware\Core\Framework\Api\Serializer\JsonEntityEncoder" class="Shopware\Core\Framework\Api\Serializer\JsonEntityEncoder">
      <argument type="service" id="serializer"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Response\Type\Api\JsonType" class="Shopware\Core\Framework\Api\Response\Type\Api\JsonType">
      <argument type="service" id="Shopware\Core\Framework\Api\Serializer\JsonEntityEncoder"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Api\StructEncoder"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Converter\ConverterRegistry" class="Shopware\Core\Framework\Api\Converter\ConverterRegistry">
      <argument type="tagged_iterator" tag="shopware.api.converter"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Converter\ApiVersionConverter" class="Shopware\Core\Framework\Api\Converter\ApiVersionConverter">
      <argument type="service" id="Shopware\Core\Framework\Api\Converter\ConverterRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Api\ApiDefinition\DefinitionService" class="Shopware\Core\Framework\Api\ApiDefinition\DefinitionService">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\StoreApiGenerator"/>
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi3Generator"/>
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\CachedEntitySchemaGenerator"/>
    </service>
    <service id="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiDefinitionSchemaBuilder" class="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiDefinitionSchemaBuilder"/>
    <service id="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiPathBuilder" class="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiPathBuilder"/>
    <service id="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiSchemaBuilder" class="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiSchemaBuilder">
      <argument>6.5.7.3</argument>
    </service>
    <service id="Shopware\Core\Framework\Api\ApiDefinition\Generator\BundleSchemaPathCollection" class="Shopware\Core\Framework\Api\ApiDefinition\Generator\BundleSchemaPathCollection">
      <argument type="service" id="kernel.bundles"/>
    </service>
    <service id="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi3Generator" class="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi3Generator">
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiSchemaBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiPathBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiDefinitionSchemaBuilder"/>
      <argument>%kernel.bundles_metadata%</argument>
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\BundleSchemaPathCollection"/>
    </service>
    <service id="Shopware\Core\Framework\Api\ApiDefinition\Generator\StoreApiGenerator" class="Shopware\Core\Framework\Api\ApiDefinition\Generator\StoreApiGenerator">
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiSchemaBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\OpenApi\OpenApiDefinitionSchemaBuilder"/>
      <argument>%kernel.bundles_metadata%</argument>
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\BundleSchemaPathCollection"/>
    </service>
    <service id="Shopware\Core\Framework\Api\ApiDefinition\Generator\CachedEntitySchemaGenerator" class="Shopware\Core\Framework\Api\ApiDefinition\Generator\CachedEntitySchemaGenerator">
      <tag name="container.decorator" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\EntitySchemaGenerator" inner="Shopware\Core\Framework\Api\ApiDefinition\Generator\CachedEntitySchemaGenerator.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\Generator\CachedEntitySchemaGenerator.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\InfoController" class="Shopware\Core\Framework\Api\Controller\InfoController" public="true">
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\DefinitionService"/>
      <argument type="service" id="parameter_bag"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="assets.packages"/>
      <argument type="service" id="Shopware\Core\Framework\Event\BusinessEventCollector"/>
      <argument type="service" id="shopware.increment.gateway.registry"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Maintenance\System\Service\AppUrlVerifier"/>
      <argument type="service" id="Shopware\Core\Content\Flow\Api\FlowActionCollector" on-invalid="null"/>
      <argument>true</argument>
      <argument>%shopware.security.csp_templates%</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\AuthController" class="Shopware\Core\Framework\Api\Controller\AuthController" public="true">
      <argument type="service" id="shopware.api.authorization_server"/>
      <argument type="service" id="Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory"/>
      <argument type="service" id="shopware.rate_limiter"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\CacheController" class="Shopware\Core\Framework\Api\Controller\CacheController" public="true">
      <tag name="container.service_subscriber"/>
      <tag name="controller.service_arguments"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheClearer"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheWarmer\CacheWarmer" on-invalid="null"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.O2p6Lk7.Shopware\Core\Framework\Api\Controller\CacheController"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\OAuth\AccessTokenRepository" class="Shopware\Core\Framework\Api\OAuth\AccessTokenRepository"/>
    <service id="Shopware\Core\Framework\Api\OAuth\ClientRepository" class="Shopware\Core\Framework\Api\OAuth\ClientRepository">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Api\OAuth\RefreshTokenRepository" class="Shopware\Core\Framework\Api\OAuth\RefreshTokenRepository">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Api\OAuth\ScopeRepository" class="Shopware\Core\Framework\Api\OAuth\ScopeRepository">
      <argument type="tagged_iterator" tag="shopware.oauth.scope"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Api\OAuth\UserRepository" class="Shopware\Core\Framework\Api\OAuth\UserRepository">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Api\OAuth\Scope\WriteScope" class="Shopware\Core\Framework\Api\OAuth\Scope\WriteScope">
      <tag name="shopware.oauth.scope"/>
    </service>
    <service id="Shopware\Core\Framework\Api\OAuth\Scope\AdminScope" class="Shopware\Core\Framework\Api\OAuth\Scope\AdminScope">
      <tag name="shopware.oauth.scope"/>
    </service>
    <service id="Shopware\Core\Framework\Api\OAuth\Scope\UserVerifiedScope" class="Shopware\Core\Framework\Api\OAuth\Scope\UserVerifiedScope">
      <tag name="shopware.oauth.scope"/>
    </service>
    <service id="shopware.private_key" class="League\OAuth2\Server\CryptKey">
      <argument>file:///home/avinash/Desktop/work/Shopware/config/jwt/private.pem</argument>
      <argument>shopware</argument>
    </service>
    <service id="shopware.public_key" class="League\OAuth2\Server\CryptKey">
      <argument>file:///home/avinash/Desktop/work/Shopware/config/jwt/public.pem</argument>
    </service>
    <service id="shopware.api.authorization_server" class="League\OAuth2\Server\AuthorizationServer">
      <argument type="service" id="Shopware\Core\Framework\Api\OAuth\ClientRepository"/>
      <argument type="service" id="Shopware\Core\Framework\Api\OAuth\AccessTokenRepository"/>
      <argument type="service" id="Shopware\Core\Framework\Api\OAuth\ScopeRepository"/>
      <argument type="service" id="shopware.private_key"/>
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="shopware.api.resource_server" class="League\OAuth2\Server\ResourceServer">
      <argument type="service" id="Shopware\Core\Framework\Api\OAuth\AccessTokenRepository"/>
      <argument type="service" id="shopware.public_key"/>
      <argument type="service" id="Shopware\Core\Framework\Api\OAuth\BearerTokenValidator"/>
    </service>
    <service id="Shopware\Core\Framework\Api\OAuth\BearerTokenValidator" class="Shopware\Core\Framework\Api\OAuth\BearerTokenValidator">
      <tag name="container.decorator" id="League\OAuth2\Server\AuthorizationValidators\BearerTokenValidator" inner="Shopware\Core\Framework\Api\OAuth\BearerTokenValidator.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Api\OAuth\BearerTokenValidator.inner"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="shopware.jwt_config"/>
    </service>
    <service id="Shopware\Core\Framework\Api\EventListener\JsonRequestTransformerListener" class="Shopware\Core\Framework\Api\EventListener\JsonRequestTransformerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="Shopware\Core\Framework\Api\EventListener\ExpectationSubscriber" class="Shopware\Core\Framework\Api\EventListener\ExpectationSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>6.5.7.3</argument>
      <argument>%kernel.plugin_infos%</argument>
    </service>
    <service id="Shopware\Core\Framework\Api\EventListener\Authentication\SalesChannelAuthenticationListener" class="Shopware\Core\Framework\Api\EventListener\Authentication\SalesChannelAuthenticationListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\Routing\RouteScopeRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Routing\MaintenanceModeResolver"/>
    </service>
    <service id="Shopware\Core\Framework\Api\EventListener\Authentication\ApiAuthenticationListener" class="Shopware\Core\Framework\Api\EventListener\Authentication\ApiAuthenticationListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="shopware.api.resource_server"/>
      <argument type="service" id="shopware.api.authorization_server"/>
      <argument type="service" id="Shopware\Core\Framework\Api\OAuth\UserRepository"/>
      <argument type="service" id="Shopware\Core\Framework\Api\OAuth\RefreshTokenRepository"/>
      <argument type="service" id="Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory"/>
      <argument type="service" id="Shopware\Core\Framework\Routing\RouteScopeRegistry"/>
      <argument>PT10M</argument>
      <argument>P1W</argument>
    </service>
    <service id="Shopware\Core\Framework\Api\EventListener\Authentication\UserCredentialsChangedSubscriber" class="Shopware\Core\Framework\Api\EventListener\Authentication\UserCredentialsChangedSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\Api\OAuth\RefreshTokenRepository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\UserController" class="Shopware\Core\Framework\Api\Controller\UserController" public="true">
      <argument type="service" id="user.repository"/>
      <argument type="service" id="acl_user_role.repository"/>
      <argument type="service" id="acl_role.repository"/>
      <argument type="service" id="user_access_key.repository"/>
      <argument type="service" id="Shopware\Core\System\User\UserDefinition"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\IntegrationController" class="Shopware\Core\Framework\Api\Controller\IntegrationController" public="true">
      <argument type="service" id="integration.repository"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\Response\ResponseFactoryInterfaceValueResolver" class="Shopware\Core\Framework\Api\Response\ResponseFactoryInterfaceValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Response\ResponseFactoryRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Route\ApiRouteLoader" class="Shopware\Core\Framework\Api\Route\ApiRouteLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Validation\DataValidator" class="Shopware\Core\Framework\Validation\DataValidator">
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
    </service>
    <service id="Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory" class="Symfony\Bridge\PsrHttpMessage\Factory\PsrHttpFactory">
      <argument type="service" id="Nyholm\Psr7\Factory\Psr17Factory"/>
      <argument type="service" id="Nyholm\Psr7\Factory\Psr17Factory"/>
      <argument type="service" id="Nyholm\Psr7\Factory\Psr17Factory"/>
      <argument type="service" id="Nyholm\Psr7\Factory\Psr17Factory"/>
    </service>
    <service id="Nyholm\Psr7\Factory\Psr17Factory" class="Nyholm\Psr7\Factory\Psr17Factory"/>
    <service id="Shopware\Core\Framework\Validation\HappyPathValidator" class="Shopware\Core\Framework\Validation\HappyPathValidator">
      <tag name="container.decorator" id="validator" inner="Shopware\Core\Framework\Validation\HappyPathValidator.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator.inner"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Controller\CustomSnippetFormatController" class="Shopware\Core\Framework\Api\Controller\CustomSnippetFormatController" public="true">
      <argument type="service" id="Shopware\Core\Framework\Plugin\KernelPluginCollection"/>
      <argument type="service" id="twig"/>
    </service>
    <service id=".1_HandlerStack~YkAJ5_B" class="GuzzleHttp\HandlerStack" constructor="create">
      <call method="push">
        <argument type="service" id="shopware.app_system.guzzle.middleware"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Subscriber\AppLoadedSubscriber" class="Shopware\Core\Framework\App\Subscriber\AppLoadedSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Framework\App\Subscriber\CustomFieldProtectionSubscriber" class="Shopware\Core\Framework\App\Subscriber\CustomFieldProtectionSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\App\Subscriber\AppScriptConditionConstraintsSubscriber" class="Shopware\Core\Framework\App\Subscriber\AppScriptConditionConstraintsSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Framework\App\ShopId\ShopIdProvider" class="Shopware\Core\Framework\App\ShopId\ShopIdProvider" public="true">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="app.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Manifest\ModuleLoader" class="Shopware\Core\Framework\App\Manifest\ModuleLoader">
      <argument type="service" id="app.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
      <argument type="service" id="Shopware\Core\Framework\App\Hmac\QuerySigner"/>
    </service>
    <service id="Shopware\Core\Framework\App\Validation\TranslationValidator" class="Shopware\Core\Framework\App\Validation\TranslationValidator">
      <tag name="shopware.app_manifest.validator"/>
    </service>
    <service id="Shopware\Core\Framework\App\Validation\AppNameValidator" class="Shopware\Core\Framework\App\Validation\AppNameValidator">
      <tag name="shopware.app_manifest.validator"/>
    </service>
    <service id="Shopware\Core\Framework\App\Validation\ManifestValidator" class="Shopware\Core\Framework\App\Validation\ManifestValidator">
      <argument type="tagged_iterator" tag="shopware.app_manifest.validator"/>
    </service>
    <service id="Shopware\Core\Framework\App\Validation\ConfigValidator" class="Shopware\Core\Framework\App\Validation\ConfigValidator">
      <tag name="shopware.app_manifest.validator"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\Util\ConfigReader"/>
    </service>
    <service id="Shopware\Core\Framework\App\Validation\HookableValidator" class="Shopware\Core\Framework\App\Validation\HookableValidator">
      <tag name="shopware.app_manifest.validator"/>
      <argument type="service" id="Shopware\Core\Framework\Webhook\Hookable\HookableEventCollector"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\CustomFieldPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\CustomFieldPersister">
      <argument type="service" id="custom_field_set.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\PermissionPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\PermissionPersister">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\ActionButtonPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\ActionButtonPersister">
      <argument type="service" id="app_action_button.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\ScriptPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\ScriptPersister">
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\ScriptFileReader"/>
      <argument type="service" id="script.repository"/>
      <argument type="service" id="app.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\ScriptFileReader" class="Shopware\Core\Framework\App\Lifecycle\ScriptFileReader">
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\TemplatePersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\TemplatePersister">
      <argument type="service" id="Shopware\Storefront\Framework\App\Template\IconTemplateLoader"/>
      <argument type="service" id="app_template.repository"/>
      <argument type="service" id="app.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\WebhookPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\WebhookPersister">
      <argument type="service" id="webhook.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\PaymentMethodPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\PaymentMethodPersister">
      <argument type="service" id="payment_method.repository"/>
      <argument type="service" id="Shopware\Core\Content\Media\MediaService"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\ShippingMethodPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\ShippingMethodPersister">
      <argument type="service" id="shipping_method.repository"/>
      <argument type="service" id="app_shipping_method.repository"/>
      <argument type="service" id="rule.repository"/>
      <argument type="service" id="media.repository"/>
      <argument type="service" id="Shopware\Core\Content\Media\MediaService"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\TaxProviderPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\TaxProviderPersister">
      <argument type="service" id="tax_provider.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\RuleConditionPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\RuleConditionPersister">
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\ScriptFileReader"/>
      <argument type="service" id="app_script_condition.repository"/>
      <argument type="service" id="app.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\CmsBlockPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\CmsBlockPersister">
      <argument type="service" id="app_cms_block.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\Cms\BlockTemplateLoader"/>
      <argument type="service" id="Shopware\Core\Framework\Util\HtmlSanitizer"/>
    </service>
    <service id="Shopware\Core\Framework\App\AppService" class="Shopware\Core\Framework\App\AppService">
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLifecycleIterator"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLifecycle"/>
    </service>
    <service id="Shopware\Core\Framework\App\AppStateService" class="Shopware\Core\Framework\App\AppStateService">
      <argument type="service" id="app.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\App\ActiveAppsLoader"/>
      <argument type="service" id="Shopware\Core\Framework\App\Template\TemplateStateService"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\ScriptPersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Payment\PaymentMethodStateService"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Execution\ScriptExecutor"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\RuleConditionPersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\FlowEventPersister"/>
    </service>
    <service id="Shopware\Core\Framework\App\AppPayloadServiceHelper" class="Shopware\Core\Framework\App\AppPayloadServiceHelper">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Serializer\JsonEntityEncoder"/>
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
    </service>
    <service id="Shopware\Core\Framework\App\ActiveAppsLoader" class="Shopware\Core\Framework\App\ActiveAppsLoader">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
    </service>
    <service id="Shopware\Core\Framework\App\Template\TemplateStateService" class="Shopware\Core\Framework\App\Template\TemplateStateService" public="true">
      <argument type="service" id="app_template.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Payment\PaymentMethodStateService" class="Shopware\Core\Framework\App\Payment\PaymentMethodStateService">
      <argument type="service" id="payment_method.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Payment\Payload\PaymentPayloadService" class="Shopware\Core\Framework\App\Payment\Payload\PaymentPayloadService">
      <argument type="service" id="Shopware\Core\Framework\App\AppPayloadServiceHelper"/>
      <argument type="service" id="shopware.app_system.guzzle"/>
      <argument>%env(APP_URL)%</argument>
    </service>
    <service id="Shopware\Core\Framework\App\Payment\Handler\AppPaymentHandler" class="Shopware\Core\Framework\App\Payment\Handler\AppPaymentHandler">
      <tag name="shopware.payment.method.prepared"/>
      <tag name="shopware.payment.method.refund"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler"/>
      <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\App\Payment\Payload\PaymentPayloadService"/>
      <argument type="service" id="order_transaction_capture_refund.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Payment\Handler\AppSyncPaymentHandler" class="Shopware\Core\Framework\App\Payment\Handler\AppSyncPaymentHandler">
      <tag name="shopware.payment.method.sync"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler"/>
      <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\App\Payment\Payload\PaymentPayloadService"/>
      <argument type="service" id="order_transaction_capture_refund.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Payment\Handler\AppAsyncPaymentHandler" class="Shopware\Core\Framework\App\Payment\Handler\AppAsyncPaymentHandler">
      <tag name="shopware.payment.method.async"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler"/>
      <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\App\Payment\Payload\PaymentPayloadService"/>
      <argument type="service" id="order_transaction_capture_refund.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Registration\AppRegistrationService" class="Shopware\Core\Framework\App\Lifecycle\Registration\AppRegistrationService">
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Registration\HandshakeFactory"/>
      <argument type="service" id="shopware.app_system.guzzle"/>
      <argument type="service" id="app.repository"/>
      <argument>%env(APP_URL)%</argument>
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
      <argument>6.5.7.3</argument>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Registration\HandshakeFactory" class="Shopware\Core\Framework\App\Lifecycle\Registration\HandshakeFactory">
      <argument>%env(APP_URL)%</argument>
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreClient"/>
      <argument>6.5.7.3</argument>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\AppLifecycle" class="Shopware\Core\Framework\App\Lifecycle\AppLifecycle">
      <argument type="service" id="app.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\PermissionPersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\CustomFieldPersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\ActionButtonPersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\TemplatePersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\ScriptPersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\WebhookPersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\PaymentMethodPersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\TaxProviderPersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\RuleConditionPersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\CmsBlockPersister"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Registration\AppRegistrationService"/>
      <argument type="service" id="Shopware\Core\Framework\App\AppStateService"/>
      <argument type="service" id="language.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Framework\App\Validation\ConfigValidator"/>
      <argument type="service" id="integration.repository"/>
      <argument type="service" id="acl_role.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\Util\AssetService"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Execution\ScriptExecutor"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\FlowActionPersister"/>
      <argument type="service" id="Shopware\Administration\Snippet\AppAdministrationSnippetPersister" on-invalid="null"/>
      <argument type="service" id="Shopware\Core\System\CustomEntity\Schema\CustomEntitySchemaUpdater"/>
      <argument type="service" id="Shopware\Core\System\CustomEntity\CustomEntityLifecycleService"/>
      <argument>6.5.7.3</argument>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\FlowEventPersister"/>
      <argument>dev</argument>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\ShippingMethodPersister"/>
      <argument type="service" id="custom_entity.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\AppLifecycleIterator" class="Shopware\Core\Framework\App\Lifecycle\AppLifecycleIterator">
      <argument type="service" id="app.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Update\AbstractAppUpdater" class="Shopware\Core\Framework\App\Lifecycle\Update\AppUpdater">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\AbstractExtensionDataProvider"/>
      <argument type="service" id="app.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\ExtensionDownloader"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\AbstractStoreAppLifecycleService"/>
    </service>
    <service id="Shopware\Core\Framework\App\ScheduledTask\UpdateAppsTask" class="Shopware\Core\Framework\App\ScheduledTask\UpdateAppsTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Framework\App\ScheduledTask\UpdateAppsHandler" class="Shopware\Core\Framework\App\ScheduledTask\UpdateAppsHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Update\AbstractAppUpdater" on-invalid="null"/>
    </service>
    <service id="Shopware\Core\Framework\App\ScheduledTask\DeleteCascadeAppsTask" class="Shopware\Core\Framework\App\ScheduledTask\DeleteCascadeAppsTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Framework\App\ScheduledTask\DeleteCascadeAppsHandler" class="Shopware\Core\Framework\App\ScheduledTask\DeleteCascadeAppsHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="acl_role.repository"/>
      <argument type="service" id="integration.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\AppLoader" class="Shopware\Core\Framework\App\Lifecycle\AppLoader">
      <argument>/home/avinash/Desktop/work/Shopware/custom/apps</argument>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Shopware\Core\System\SystemConfig\Util\ConfigReader"/>
    </service>
    <service id="shopware.app_system.guzzle" class="GuzzleHttp\Client" lazy="true">
      <argument type="collection">
        <argument key="timeout">5</argument>
        <argument key="connect_timeout">1</argument>
        <argument key="handler" type="service" id=".1_HandlerStack~YkAJ5_B"/>
      </argument>
    </service>
    <service id="shopware.app_system.guzzle.middleware" class="Shopware\Core\Framework\App\Hmac\Guzzle\AuthMiddleware">
      <argument>6.5.7.3</argument>
      <argument type="service" id="Shopware\Core\Framework\App\AppLocaleProvider"/>
    </service>
    <service id="Shopware\Core\Framework\App\ActionButton\ActionButtonLoader" class="Shopware\Core\Framework\App\ActionButton\ActionButtonLoader">
      <argument type="service" id="app_action_button.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\ActionButton\Response\ActionButtonResponseFactory" class="Shopware\Core\Framework\App\ActionButton\Response\ActionButtonResponseFactory">
      <argument type="tagged_iterator" tag="shopware.action_button.response_factory"/>
    </service>
    <service id="Shopware\Core\Framework\App\ActionButton\Response\NotificationResponseFactory" class="Shopware\Core\Framework\App\ActionButton\Response\NotificationResponseFactory">
      <tag name="shopware.action_button.response_factory"/>
    </service>
    <service id="Shopware\Core\Framework\App\ActionButton\Response\OpenModalResponseFactory" class="Shopware\Core\Framework\App\ActionButton\Response\OpenModalResponseFactory">
      <tag name="shopware.action_button.response_factory"/>
      <argument type="service" id="Shopware\Core\Framework\App\Hmac\QuerySigner"/>
    </service>
    <service id="Shopware\Core\Framework\App\ActionButton\Response\OpenNewTabResponseFactory" class="Shopware\Core\Framework\App\ActionButton\Response\OpenNewTabResponseFactory">
      <tag name="shopware.action_button.response_factory"/>
      <argument type="service" id="Shopware\Core\Framework\App\Hmac\QuerySigner"/>
    </service>
    <service id="Shopware\Core\Framework\App\ActionButton\Response\ReloadDataResponseFactory" class="Shopware\Core\Framework\App\ActionButton\Response\ReloadDataResponseFactory">
      <tag name="shopware.action_button.response_factory"/>
    </service>
    <service id="Shopware\Core\Framework\App\Hmac\QuerySigner" class="Shopware\Core\Framework\App\Hmac\QuerySigner">
      <argument>%env(APP_URL)%</argument>
      <argument>6.5.7.3</argument>
      <argument type="service" id="Shopware\Core\Framework\Store\Authentication\LocaleProvider"/>
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
    </service>
    <service id="Shopware\Core\Framework\App\ActionButton\Executor" class="Shopware\Core\Framework\App\ActionButton\Executor">
      <argument type="service" id="shopware.app_system.guzzle"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Shopware\Core\Framework\App\ActionButton\Response\ActionButtonResponseFactory"/>
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="Shopware\Core\Framework\App\ActionButton\AppActionLoader" class="Shopware\Core\Framework\App\ActionButton\AppActionLoader">
      <argument>%env(APP_URL)%</argument>
      <argument type="service" id="app_action_button.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
    </service>
    <service id="Shopware\Core\Framework\App\Api\AppActionController" class="Shopware\Core\Framework\App\Api\AppActionController" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\ActionButton\ActionButtonLoader"/>
      <argument type="service" id="Shopware\Core\Framework\App\ActionButton\AppActionLoader"/>
      <argument type="service" id="Shopware\Core\Framework\App\ActionButton\Executor"/>
      <argument type="service" id="Shopware\Core\Framework\App\Manifest\ModuleLoader"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Api\AppCmsController" class="Shopware\Core\Framework\App\Api\AppCmsController" public="true">
      <argument type="service" id="app_cms_block.repository"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Api\AppJWTGenerateRoute" class="Shopware\Core\Framework\App\Api\AppJWTGenerateRoute" public="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
    </service>
    <service id="Shopware\Core\Framework\App\Command\AppPrinter" class="Shopware\Core\Framework\App\Command\AppPrinter">
      <argument type="service" id="app.repository"/>
    </service>
    <service id="Shopware\Core\Framework\App\AppLocaleProvider" class="Shopware\Core\Framework\App\AppLocaleProvider" public="true">
      <argument type="service" id="user.repository"/>
      <argument type="service" id="Shopware\Core\System\Locale\LanguageLocaleCodeProvider"/>
    </service>
    <service id="Shopware\Core\Framework\App\Command\RefreshAppCommand" class="Shopware\Core\Framework\App\Command\RefreshAppCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\App\AppService"/>
      <argument type="service" id="Shopware\Core\Framework\App\Command\AppPrinter"/>
      <argument type="service" id="Shopware\Core\Framework\App\Validation\ManifestValidator"/>
      <argument type="service" id="Shopware\Core\Framework\App\Delta\AppConfirmationDeltaProvider"/>
      <argument type="service" id="app.repository"/>
      <call method="setName">
        <argument>app:refresh</argument>
      </call>
      <call method="setAliases">
        <argument type="collection">
          <argument>app:update</argument>
        </argument>
      </call>
      <call method="setDescription">
        <argument>Refreshes an app</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Command\InstallAppCommand" class="Shopware\Core\Framework\App\Command\InstallAppCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLifecycle"/>
      <argument type="service" id="Shopware\Core\Framework\App\Command\AppPrinter"/>
      <argument type="service" id="Shopware\Core\Framework\App\Validation\ManifestValidator"/>
      <call method="setName">
        <argument>app:install</argument>
      </call>
      <call method="setDescription">
        <argument>Installs an app</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Command\UninstallAppCommand" class="Shopware\Core\Framework\App\Command\UninstallAppCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLifecycle"/>
      <argument type="service" id="app.repository"/>
      <call method="setName">
        <argument>app:uninstall</argument>
      </call>
      <call method="setDescription">
        <argument>Uninstalls an app</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Command\ActivateAppCommand" class="Shopware\Core\Framework\App\Command\ActivateAppCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="app.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\AppStateService"/>
      <call method="setName">
        <argument>app:activate</argument>
      </call>
      <call method="setDescription">
        <argument>Activates an app</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Command\DeactivateAppCommand" class="Shopware\Core\Framework\App\Command\DeactivateAppCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="app.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\AppStateService"/>
      <call method="setName">
        <argument>app:deactivate</argument>
      </call>
      <call method="setDescription">
        <argument>Deactivates an app</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Command\CreateAppCommand" class="Shopware\Core\Framework\App\Command\CreateAppCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLifecycle"/>
      <argument>/home/avinash/Desktop/work/Shopware/custom/apps</argument>
      <call method="setName">
        <argument>app:create</argument>
      </call>
      <call method="setDescription">
        <argument>Creates an app skeleton</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Command\ValidateAppCommand" class="Shopware\Core\Framework\App\Command\ValidateAppCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>/home/avinash/Desktop/work/Shopware/custom/apps</argument>
      <argument type="service" id="Shopware\Core\Framework\App\Validation\ManifestValidator"/>
      <call method="setName">
        <argument>app:validate</argument>
      </call>
      <call method="setDescription">
        <argument>Validates an app</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Command\ResolveAppUrlChangeCommand" class="Shopware\Core\Framework\App\Command\ResolveAppUrlChangeCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\App\AppUrlChangeResolver\Resolver"/>
      <call method="setName">
        <argument>app:url-change:resolve</argument>
      </call>
      <call method="setDescription">
        <argument>Resolves app url changes</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Api\AppUrlChangeController" class="Shopware\Core\Framework\App\Api\AppUrlChangeController" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\AppUrlChangeResolver\Resolver"/>
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\AppUrlChangeResolver\Resolver" class="Shopware\Core\Framework\App\AppUrlChangeResolver\Resolver" public="true">
      <argument type="tagged_iterator" tag="shopware.app_url_changed_resolver"/>
    </service>
    <service id="Shopware\Core\Framework\App\AppUrlChangeResolver\MoveShopPermanentlyStrategy" class="Shopware\Core\Framework\App\AppUrlChangeResolver\MoveShopPermanentlyStrategy">
      <tag name="shopware.app_url_changed_resolver"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
      <argument type="service" id="app.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Registration\AppRegistrationService"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Framework\App\AppUrlChangeResolver\ReinstallAppsStrategy" class="Shopware\Core\Framework\App\AppUrlChangeResolver\ReinstallAppsStrategy">
      <tag name="shopware.app_url_changed_resolver"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
      <argument type="service" id="app.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Registration\AppRegistrationService"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Framework\App\AppUrlChangeResolver\UninstallAppsStrategy" class="Shopware\Core\Framework\App\AppUrlChangeResolver\UninstallAppsStrategy">
      <tag name="shopware.app_url_changed_resolver"/>
      <argument type="service" id="app.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeAppLifecycleHandler" on-invalid="null"/>
    </service>
    <service id="Shopware\Core\Framework\App\Delta\PermissionsDeltaProvider" class="Shopware\Core\Framework\App\Delta\PermissionsDeltaProvider">
      <tag name="shopware.app_delta"/>
    </service>
    <service id="Shopware\Core\Framework\App\Delta\DomainsDeltaProvider" class="Shopware\Core\Framework\App\Delta\DomainsDeltaProvider">
      <tag name="shopware.app_delta"/>
    </service>
    <service id="Shopware\Core\Framework\App\AppDefinition" class="Shopware\Core\Framework\App\AppDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\AppTranslation\AppTranslationDefinition" class="Shopware\Core\Framework\App\Aggregate\AppTranslation\AppTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\ActionButton\ActionButtonDefinition" class="Shopware\Core\Framework\App\Aggregate\ActionButton\ActionButtonDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\ActionButtonTranslation\ActionButtonTranslationDefinition" class="Shopware\Core\Framework\App\Aggregate\ActionButtonTranslation\ActionButtonTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Template\TemplateDefinition" class="Shopware\Core\Framework\App\Template\TemplateDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\AppPaymentMethod\AppPaymentMethodDefinition" class="Shopware\Core\Framework\App\Aggregate\AppPaymentMethod\AppPaymentMethodDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\AppScriptCondition\AppScriptConditionDefinition" class="Shopware\Core\Framework\App\Aggregate\AppScriptCondition\AppScriptConditionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\AppScriptConditionTranslation\AppScriptConditionTranslationDefinition" class="Shopware\Core\Framework\App\Aggregate\AppScriptConditionTranslation\AppScriptConditionTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\CmsBlock\AppCmsBlockDefinition" class="Shopware\Core\Framework\App\Aggregate\CmsBlock\AppCmsBlockDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\CmsBlockTranslation\AppCmsBlockTranslationDefinition" class="Shopware\Core\Framework\App\Aggregate\CmsBlockTranslation\AppCmsBlockTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\FlowAction\AppFlowActionDefinition" class="Shopware\Core\Framework\App\Aggregate\FlowAction\AppFlowActionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\FlowActionTranslation\AppFlowActionTranslationDefinition" class="Shopware\Core\Framework\App\Aggregate\FlowActionTranslation\AppFlowActionTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\FlowEvent\AppFlowEventDefinition" class="Shopware\Core\Framework\App\Aggregate\FlowEvent\AppFlowEventDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Aggregate\AppShippingMethod\AppShippingMethodDefinition" class="Shopware\Core\Framework\App\Aggregate\AppShippingMethod\AppShippingMethodDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\App\Flow\Action\AppFlowActionLoadedSubscriber" class="Shopware\Core\Framework\App\Flow\Action\AppFlowActionLoadedSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Framework\App\Cms\BlockTemplateLoader" class="Shopware\Core\Framework\App\Cms\BlockTemplateLoader"/>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\FlowActionPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\FlowActionPersister">
      <argument type="service" id="app_flow_action.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\App\FlowAction\AppFlowActionProvider" class="Shopware\Core\Framework\App\FlowAction\AppFlowActionProvider" public="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\Webhook\BusinessEventEncoder"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\StringTemplateRenderer"/>
    </service>
    <service id="Shopware\Core\Framework\App\Flow\Action\AppFlowActionProvider" class="Shopware\Core\Framework\App\Flow\Action\AppFlowActionProvider" public="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\Webhook\BusinessEventEncoder"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\StringTemplateRenderer"/>
    </service>
    <service id="Shopware\Core\Framework\App\Delta\AppConfirmationDeltaProvider" class="Shopware\Core\Framework\App\Delta\AppConfirmationDeltaProvider">
      <argument type="tagged_iterator" tag="shopware.app_delta"/>
    </service>
    <service id="Shopware\Core\Framework\App\Lifecycle\Persister\FlowEventPersister" class="Shopware\Core\Framework\App\Lifecycle\Persister\FlowEventPersister">
      <argument type="service" id="app_flow_event.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\CustomField\CustomFieldDefinition" class="Shopware\Core\System\CustomField\CustomFieldDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition" class="Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition" class="Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\CustomField\Api\CustomFieldSetActionController" class="Shopware\Core\System\CustomField\Api\CustomFieldSetActionController" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\System\CustomField\CustomFieldService" class="Shopware\Core\System\CustomField\CustomFieldService">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\SchemaGenerator" class="Shopware\Core\Framework\DataAbstractionLayer\SchemaGenerator"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityGenerator" class="Shopware\Core\Framework\DataAbstractionLayer\EntityGenerator"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateSchemaCommand" class="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateSchemaCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\SchemaGenerator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <call method="setName">
        <argument>dal:create:schema</argument>
      </call>
      <call method="setDescription">
        <argument>Creates the database schema</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateEntitiesCommand" class="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateEntitiesCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\EntityGenerator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <call method="setName">
        <argument>dal:create:entities</argument>
      </call>
      <call method="setDescription">
        <argument>Creates the entity classes</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory" class="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateHydratorCommand" class="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateHydratorCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <call method="setName">
        <argument>dal:create:hydrators</argument>
      </call>
      <call method="setDescription">
        <argument>Creates the hydrator classes</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator" class="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator" public="true"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\JoinGroupBuilder" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\JoinGroupBuilder" public="true"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityHydrator" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionValidator" class="Shopware\Core\Framework\DataAbstractionLayer\DefinitionValidator">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Tokenizer" class="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Tokenizer">
      <argument>%env(int:SHOPWARE_DBAL_TOKEN_MINIMUM_LENGTH)%</argument>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\SearchTermInterpreter" class="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\SearchTermInterpreter">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Tokenizer"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\EntityScoreQueryBuilder" class="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\EntityScoreQueryBuilder"/>
    <service id="Shopware\Core\Content\Product\SearchKeyword\ProductSearchTermInterpreter" class="Shopware\Core\Content\Product\SearchKeyword\ProductSearchTermInterpreter">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Tokenizer"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Filter\TokenFilter"/>
    </service>
    <service id="api.request_criteria_builder" class="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\AggregationParser"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\ApiCriteriaValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\CriteriaArrayConverter"/>
      <argument>null</argument>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Search\CriteriaArrayConverter" class="Shopware\Core\Framework\DataAbstractionLayer\Search\CriteriaArrayConverter">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\AggregationParser"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder" class="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\AggregationParser"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\ApiCriteriaValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\CriteriaArrayConverter"/>
      <argument>100</argument>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Search\ApiCriteriaValidator" class="Shopware\Core\Framework\DataAbstractionLayer\Search\ApiCriteriaValidator">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\AggregationParser" class="Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\AggregationParser"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\ExtensionRegistry" class="Shopware\Core\Framework\DataAbstractionLayer\ExtensionRegistry" public="true">
      <argument type="tagged_iterator" tag="shopware.entity.extension"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Facade\RepositoryFacadeHookFactory" class="Shopware\Core\Framework\DataAbstractionLayer\Facade\RepositoryFacadeHookFactory" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Facade\AppContextCreator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Acl\AclCriteriaValidator"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Facade\RepositoryWriterFacadeHookFactory" class="Shopware\Core\Framework\DataAbstractionLayer\Facade\RepositoryWriterFacadeHookFactory" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Facade\AppContextCreator"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Sync\SyncService"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Facade\AppContextCreator" class="Shopware\Core\Framework\DataAbstractionLayer\Facade\AppContextCreator">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Facade\SalesChannelRepositoryFacadeHookFactory" class="Shopware\Core\Framework\DataAbstractionLayer\Facade\SalesChannelRepositoryFacadeHookFactory" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityReader" public="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityHydrator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\SqlQueryParser"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\CriteriaQueryBuilder"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\CriteriaFieldsResolver"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\CriteriaFieldsResolver" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\CriteriaFieldsResolver"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\CriteriaQueryBuilder" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\CriteriaQueryBuilder">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\SqlQueryParser"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\SearchTermInterpreter"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\EntityScoreQueryBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\JoinGroupBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\CriteriaPartResolver"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\CriteriaPartResolver" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\CriteriaPartResolver">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\SqlQueryParser"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter" class="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityForeignKeyResolver"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriteGatewayInterface"/>
      <argument type="service" id="Shopware\Core\System\Language\CachedLanguageLoader"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriteResultFactory"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriteResultFactory" class="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriteResultFactory">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor" class="Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriteGatewayInterface"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriteGatewayInterface" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityWriteGateway" public="true">
      <argument>125</argument>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\ExceptionHandlerRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\ConstraintBuilder" class="Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\ConstraintBuilder"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\SqlQueryParser" class="Shopware\Core\Framework\DataAbstractionLayer\Search\Parser\SqlQueryParser">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityForeignKeyResolver" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityForeignKeyResolver">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\ManyToOneAssociationFieldResolver" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\ManyToOneAssociationFieldResolver" public="true">
      <tag name="shopware.field_resolver" priority="-50"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\OneToManyAssociationFieldResolver" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\OneToManyAssociationFieldResolver" public="true">
      <tag name="shopware.field_resolver" priority="-50"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\ManyToManyAssociationFieldResolver" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\ManyToManyAssociationFieldResolver" public="true">
      <tag name="shopware.field_resolver" priority="-50"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\TranslationFieldResolver" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldResolver\TranslationFieldResolver" public="true">
      <tag name="shopware.field_resolver" priority="-50"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\PriceFieldAccessorBuilder" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\PriceFieldAccessorBuilder" public="true">
      <tag name="shopware.field_accessor_builder" priority="-100"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\JsonFieldAccessorBuilder" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\JsonFieldAccessorBuilder" public="true">
      <tag name="shopware.field_accessor_builder" priority="-150"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\DefaultFieldAccessorBuilder" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\DefaultFieldAccessorBuilder" public="true">
      <tag name="shopware.field_accessor_builder" priority="-200"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\ConfigJsonFieldAccessorBuilder" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\ConfigJsonFieldAccessorBuilder" public="true">
      <tag name="shopware.field_accessor_builder" priority="-100"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\CustomFieldsAccessorBuilder" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\FieldAccessorBuilder\CustomFieldsAccessorBuilder" public="true">
      <tag name="shopware.field_accessor_builder" priority="-100"/>
      <argument type="service" id="Shopware\Core\System\CustomField\CustomFieldService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition" class="Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition" class="Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition" class="Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand" class="Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand">
      <tag name="kernel.event_subscriber"/>
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>dal:refresh:index</argument>
      </call>
      <call method="setDescription">
        <argument>Refreshes the index for a given entity</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\Subscriber\RegisteredIndexerSubscriber" class="Shopware\Core\Framework\DataAbstractionLayer\Indexing\Subscriber\RegisteredIndexerSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\Migration\IndexerQueuer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Command\DataAbstractionLayerValidateCommand" class="Shopware\Core\Framework\DataAbstractionLayer\Command\DataAbstractionLayerValidateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionValidator"/>
      <call method="setName">
        <argument>dal:validate</argument>
      </call>
      <call method="setDescription">
        <argument>Validates the DAL definitions</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager" class="Shopware\Core\Framework\DataAbstractionLayer\VersionManager" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriteGatewayInterface"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition"/>
      <argument type="service" id="lock.default.factory"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CalculatedPriceFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CalculatedPriceFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CartPriceFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CartPriceFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CashRoundingConfigFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CashRoundingConfigFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TaxFreeConfigFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TaxFreeConfigFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PriceDefinitionFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PriceDefinitionFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\Rule\Collector\RuleConditionRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\BoolFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\BoolFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CreatedAtFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CreatedAtFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateTimeFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateTimeFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\EmailFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\EmailFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\FkFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\FkFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\StateMachineStateFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\StateMachineStateFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\FloatFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\FloatFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\IdFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\IdFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\IntFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\IntFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\RemoteAddressFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\RemoteAddressFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\JsonFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\JsonFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ConfigJsonFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ConfigJsonFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\LongTextFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\LongTextFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Util\HtmlSanitizer"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ListFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ListFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ManyToManyAssociationFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ManyToManyAssociationFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ManyToOneAssociationFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ManyToOneAssociationFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\OneToOneAssociationFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\OneToOneAssociationFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\BlobFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\BlobFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\OneToManyAssociationFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\OneToManyAssociationFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriteGatewayInterface"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PasswordFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PasswordFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PHPUnserializeFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PHPUnserializeFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PriceFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\PriceFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VariantListingConfigFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VariantListingConfigFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ReferenceVersionFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\ReferenceVersionFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\StringFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\StringFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Util\HtmlSanitizer"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TranslatedFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TranslatedFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TranslationsAssociationFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TranslationsAssociationFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriteGatewayInterface"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\UpdatedAtFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\UpdatedAtFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VersionDataPayloadFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VersionDataPayloadFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VersionFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\VersionFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CustomFieldsSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CustomFieldsSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\System\CustomField\CustomFieldService"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CreatedByFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CreatedByFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\UpdatedByFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\UpdatedByFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TimeZoneFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\TimeZoneFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CronIntervalFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CronIntervalFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateIntervalFieldSerializer" class="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\DateIntervalFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityExistsValidator" class="Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityExistsValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityNotExistsValidator" class="Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityNotExistsValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry" class="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry" public="true">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="log_entry">Shopware\Core\Framework\Log\LogEntryDefinition</argument>
        <argument key="acl_role">Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition</argument>
        <argument key="acl_user_role">Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition</argument>
        <argument key="app">Shopware\Core\Framework\App\AppDefinition</argument>
        <argument key="app_translation">Shopware\Core\Framework\App\Aggregate\AppTranslation\AppTranslationDefinition</argument>
        <argument key="app_action_button">Shopware\Core\Framework\App\Aggregate\ActionButton\ActionButtonDefinition</argument>
        <argument key="app_action_button_translation">Shopware\Core\Framework\App\Aggregate\ActionButtonTranslation\ActionButtonTranslationDefinition</argument>
        <argument key="app_template">Shopware\Core\Framework\App\Template\TemplateDefinition</argument>
        <argument key="app_payment_method">Shopware\Core\Framework\App\Aggregate\AppPaymentMethod\AppPaymentMethodDefinition</argument>
        <argument key="app_script_condition">Shopware\Core\Framework\App\Aggregate\AppScriptCondition\AppScriptConditionDefinition</argument>
        <argument key="app_script_condition_translation">Shopware\Core\Framework\App\Aggregate\AppScriptConditionTranslation\AppScriptConditionTranslationDefinition</argument>
        <argument key="app_cms_block">Shopware\Core\Framework\App\Aggregate\CmsBlock\AppCmsBlockDefinition</argument>
        <argument key="app_cms_block_translation">Shopware\Core\Framework\App\Aggregate\CmsBlockTranslation\AppCmsBlockTranslationDefinition</argument>
        <argument key="app_flow_action">Shopware\Core\Framework\App\Aggregate\FlowAction\AppFlowActionDefinition</argument>
        <argument key="app_flow_action_translation">Shopware\Core\Framework\App\Aggregate\FlowActionTranslation\AppFlowActionTranslationDefinition</argument>
        <argument key="app_flow_event">Shopware\Core\Framework\App\Aggregate\FlowEvent\AppFlowEventDefinition</argument>
        <argument key="app_shipping_method">Shopware\Core\Framework\App\Aggregate\AppShippingMethod\AppShippingMethodDefinition</argument>
        <argument key="custom_field">Shopware\Core\System\CustomField\CustomFieldDefinition</argument>
        <argument key="custom_field_set">Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition</argument>
        <argument key="custom_field_set_relation">Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition</argument>
        <argument key="version">Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition</argument>
        <argument key="version_commit">Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition</argument>
        <argument key="version_commit_data">Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition</argument>
        <argument key="plugin">Shopware\Core\Framework\Plugin\PluginDefinition</argument>
        <argument key="plugin_translation">Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition</argument>
        <argument key="scheduled_task">Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition</argument>
        <argument key="script">Shopware\Core\Framework\Script\ScriptDefinition</argument>
        <argument key="language">Shopware\Core\System\Language\LanguageDefinition</argument>
        <argument key="seo_url">Shopware\Core\Content\Seo\SeoUrl\SeoUrlDefinition</argument>
        <argument key="seo_url_template">Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition</argument>
        <argument key="main_category">Shopware\Core\Content\Seo\MainCategory\MainCategoryDefinition</argument>
        <argument key="webhook">Shopware\Core\Framework\Webhook\WebhookDefinition</argument>
        <argument key="webhook_event_log">Shopware\Core\Framework\Webhook\EventLog\WebhookEventLogDefinition</argument>
        <argument key="sales_channel">Shopware\Core\System\SalesChannel\SalesChannelDefinition</argument>
        <argument key="sales_channel_translation">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition</argument>
        <argument key="sales_channel_country">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition</argument>
        <argument key="sales_channel_currency">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition</argument>
        <argument key="sales_channel_domain">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition</argument>
        <argument key="sales_channel_language">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition</argument>
        <argument key="sales_channel_payment_method">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition</argument>
        <argument key="sales_channel_shipping_method">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition</argument>
        <argument key="sales_channel_type">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition</argument>
        <argument key="sales_channel_type_translation">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition</argument>
        <argument key="sales_channel_analytics">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelAnalytics\SalesChannelAnalyticsDefinition</argument>
        <argument key="country">Shopware\Core\System\Country\CountryDefinition</argument>
        <argument key="country_state">Shopware\Core\System\Country\Aggregate\CountryState\CountryStateDefinition</argument>
        <argument key="country_state_translation">Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition</argument>
        <argument key="country_translation">Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition</argument>
        <argument key="currency">Shopware\Core\System\Currency\CurrencyDefinition</argument>
        <argument key="currency_country_rounding">Shopware\Core\System\Currency\Aggregate\CurrencyCountryRounding\CurrencyCountryRoundingDefinition</argument>
        <argument key="currency_translation">Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition</argument>
        <argument key="custom_entity">Shopware\Core\System\CustomEntity\CustomEntityDefinition</argument>
        <argument key="locale">Shopware\Core\System\Locale\LocaleDefinition</argument>
        <argument key="locale_translation">Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition</argument>
        <argument key="snippet_set">Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition</argument>
        <argument key="snippet">Shopware\Core\System\Snippet\SnippetDefinition</argument>
        <argument key="salutation">Shopware\Core\System\Salutation\SalutationDefinition</argument>
        <argument key="salutation_translation">Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition</argument>
        <argument key="tax">Shopware\Core\System\Tax\TaxDefinition</argument>
        <argument key="tax_rule">Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition</argument>
        <argument key="tax_rule_type">Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition</argument>
        <argument key="tax_rule_type_translation">Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition</argument>
        <argument key="tax_provider">Shopware\Core\System\TaxProvider\TaxProviderDefinition</argument>
        <argument key="tax_provider_translation">Shopware\Core\System\TaxProvider\Aggregate\TaxProviderTranslation\TaxProviderTranslationDefinition</argument>
        <argument key="unit">Shopware\Core\System\Unit\UnitDefinition</argument>
        <argument key="unit_translation">Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition</argument>
        <argument key="user">Shopware\Core\System\User\UserDefinition</argument>
        <argument key="user_config">Shopware\Core\System\User\Aggregate\UserConfig\UserConfigDefinition</argument>
        <argument key="user_access_key">Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition</argument>
        <argument key="user_recovery">Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition</argument>
        <argument key="integration">Shopware\Core\System\Integration\IntegrationDefinition</argument>
        <argument key="integration_role">Shopware\Core\System\Integration\Aggregate\IntegrationRole\IntegrationRoleDefinition</argument>
        <argument key="state_machine">Shopware\Core\System\StateMachine\StateMachineDefinition</argument>
        <argument key="state_machine_translation">Shopware\Core\System\StateMachine\StateMachineTranslationDefinition</argument>
        <argument key="state_machine_state">Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition</argument>
        <argument key="state_machine_state_translation">Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition</argument>
        <argument key="state_machine_transition">Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition</argument>
        <argument key="state_machine_history">Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition</argument>
        <argument key="system_config">Shopware\Core\System\SystemConfig\SystemConfigDefinition</argument>
        <argument key="number_range">Shopware\Core\System\NumberRange\NumberRangeDefinition</argument>
        <argument key="number_range_sales_channel">Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition</argument>
        <argument key="number_range_state">Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition</argument>
        <argument key="number_range_type">Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition</argument>
        <argument key="number_range_type_translation">Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition</argument>
        <argument key="number_range_translation">Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition</argument>
        <argument key="tag">Shopware\Core\System\Tag\TagDefinition</argument>
        <argument key="category">Shopware\Core\Content\Category\CategoryDefinition</argument>
        <argument key="category_translation">Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition</argument>
        <argument key="category_tag">Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition</argument>
        <argument key="media">Shopware\Core\Content\Media\MediaDefinition</argument>
        <argument key="media_default_folder">Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition</argument>
        <argument key="media_thumbnail">Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition</argument>
        <argument key="media_translation">Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition</argument>
        <argument key="media_folder">Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition</argument>
        <argument key="media_thumbnail_size">Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition</argument>
        <argument key="media_folder_configuration">Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition</argument>
        <argument key="media_folder_configuration_media_thumbnail_size">Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition</argument>
        <argument key="media_tag">Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition</argument>
        <argument key="product">Shopware\Core\Content\Product\ProductDefinition</argument>
        <argument key="product_stream_mapping">Shopware\Core\Content\Product\Aggregate\ProductStreamMapping\ProductStreamMappingDefinition</argument>
        <argument key="product_category">Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition</argument>
        <argument key="product_custom_field_set">Shopware\Core\Content\Product\Aggregate\ProductCustomFieldSet\ProductCustomFieldSetDefinition</argument>
        <argument key="product_tag">Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition</argument>
        <argument key="product_configurator_setting">Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition</argument>
        <argument key="product_price">Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition</argument>
        <argument key="product_property">Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition</argument>
        <argument key="product_search_keyword">Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition</argument>
        <argument key="product_keyword_dictionary">Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition</argument>
        <argument key="product_review">Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition</argument>
        <argument key="product_manufacturer">Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition</argument>
        <argument key="product_manufacturer_translation">Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition</argument>
        <argument key="product_media">Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition</argument>
        <argument key="product_download">Shopware\Core\Content\Product\Aggregate\ProductDownload\ProductDownloadDefinition</argument>
        <argument key="product_translation">Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition</argument>
        <argument key="product_option">Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition</argument>
        <argument key="product_category_tree">Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition</argument>
        <argument key="product_cross_selling">Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition</argument>
        <argument key="product_cross_selling_translation">Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition</argument>
        <argument key="product_cross_selling_assigned_products">Shopware\Core\Content\Product\Aggregate\ProductCrossSellingAssignedProducts\ProductCrossSellingAssignedProductsDefinition</argument>
        <argument key="product_feature_set">Shopware\Core\Content\Product\Aggregate\ProductFeatureSet\ProductFeatureSetDefinition</argument>
        <argument key="product_feature_set_translation">Shopware\Core\Content\Product\Aggregate\ProductFeatureSetTranslation\ProductFeatureSetTranslationDefinition</argument>
        <argument key="product_sorting">Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingDefinition</argument>
        <argument key="product_sorting_translation">Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingTranslationDefinition</argument>
        <argument key="product_search_config">Shopware\Core\Content\Product\Aggregate\ProductSearchConfig\ProductSearchConfigDefinition</argument>
        <argument key="product_search_config_field">Shopware\Core\Content\Product\Aggregate\ProductSearchConfigField\ProductSearchConfigFieldDefinition</argument>
        <argument key="product_visibility">Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition</argument>
        <argument key="delivery_time">Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition</argument>
        <argument key="newsletter_recipient">Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipient\NewsletterRecipientDefinition</argument>
        <argument key="newsletter_recipient_tag">Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition</argument>
        <argument key="rule">Shopware\Core\Content\Rule\RuleDefinition</argument>
        <argument key="rule_condition">Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition</argument>
        <argument key="rule_tag">Shopware\Core\Content\Rule\Aggregate\RuleTag\RuleTagDefinition</argument>
        <argument key="product_stream">Shopware\Core\Content\ProductStream\ProductStreamDefinition</argument>
        <argument key="product_stream_translation">Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition</argument>
        <argument key="product_stream_filter">Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition</argument>
        <argument key="product_export">Shopware\Core\Content\ProductExport\ProductExportDefinition</argument>
        <argument key="property_group">Shopware\Core\Content\Property\PropertyGroupDefinition</argument>
        <argument key="property_group_option">Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition</argument>
        <argument key="property_group_option_translation">Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition</argument>
        <argument key="property_group_translation">Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition</argument>
        <argument key="cms_page">Shopware\Core\Content\Cms\CmsPageDefinition</argument>
        <argument key="cms_page_translation">Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition</argument>
        <argument key="cms_section">Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition</argument>
        <argument key="cms_block">Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition</argument>
        <argument key="cms_slot">Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition</argument>
        <argument key="cms_slot_translation">Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition</argument>
        <argument key="mail_template">Shopware\Core\Content\MailTemplate\MailTemplateDefinition</argument>
        <argument key="mail_template_translation">Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition</argument>
        <argument key="mail_template_type">Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition</argument>
        <argument key="mail_template_type_translation">Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition</argument>
        <argument key="mail_template_media">Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition</argument>
        <argument key="mail_header_footer">Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition</argument>
        <argument key="mail_header_footer_translation">Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition</argument>
        <argument key="delivery_time_translation">Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition</argument>
        <argument key="import_export_profile">Shopware\Core\Content\ImportExport\ImportExportProfileDefinition</argument>
        <argument key="import_export_log">Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition</argument>
        <argument key="import_export_file">Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition</argument>
        <argument key="import_export_profile_translation">Shopware\Core\Content\ImportExport\ImportExportProfileTranslationDefinition</argument>
        <argument key="landing_page">Shopware\Core\Content\LandingPage\LandingPageDefinition</argument>
        <argument key="landing_page_translation">Shopware\Core\Content\LandingPage\Aggregate\LandingPageTranslation\LandingPageTranslationDefinition</argument>
        <argument key="landing_page_tag">Shopware\Core\Content\LandingPage\Aggregate\LandingPageTag\LandingPageTagDefinition</argument>
        <argument key="landing_page_sales_channel">Shopware\Core\Content\LandingPage\Aggregate\LandingPageSalesChannel\LandingPageSalesChannelDefinition</argument>
        <argument key="flow">Shopware\Core\Content\Flow\FlowDefinition</argument>
        <argument key="flow_sequence">Shopware\Core\Content\Flow\Aggregate\FlowSequence\FlowSequenceDefinition</argument>
        <argument key="flow_template">Shopware\Core\Content\Flow\Aggregate\FlowTemplate\FlowTemplateDefinition</argument>
        <argument key="customer">Shopware\Core\Checkout\Customer\CustomerDefinition</argument>
        <argument key="customer_group_translation">Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition</argument>
        <argument key="customer_address">Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition</argument>
        <argument key="customer_recovery">Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition</argument>
        <argument key="customer_group">Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition</argument>
        <argument key="customer_group_registration_sales_channels">Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupRegistrationSalesChannel\CustomerGroupRegistrationSalesChannelDefinition</argument>
        <argument key="customer_tag">Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition</argument>
        <argument key="customer_wishlist">Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlist\CustomerWishlistDefinition</argument>
        <argument key="customer_wishlist_product">Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlistProduct\CustomerWishlistProductDefinition</argument>
        <argument key="document">Shopware\Core\Checkout\Document\DocumentDefinition</argument>
        <argument key="document_type">Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition</argument>
        <argument key="document_type_translation">Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition</argument>
        <argument key="document_base_config">Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition</argument>
        <argument key="document_base_config_sales_channel">Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition</argument>
        <argument key="order">Shopware\Core\Checkout\Order\OrderDefinition</argument>
        <argument key="order_address">Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition</argument>
        <argument key="order_customer">Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition</argument>
        <argument key="order_delivery">Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition</argument>
        <argument key="order_delivery_position">Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition</argument>
        <argument key="order_line_item">Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition</argument>
        <argument key="order_line_item_download">Shopware\Core\Checkout\Order\Aggregate\OrderLineItemDownload\OrderLineItemDownloadDefinition</argument>
        <argument key="order_tag">Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition</argument>
        <argument key="order_transaction">Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition</argument>
        <argument key="order_transaction_capture">Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCapture\OrderTransactionCaptureDefinition</argument>
        <argument key="order_transaction_capture_refund">Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundDefinition</argument>
        <argument key="order_transaction_capture_refund_position">Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefundPosition\OrderTransactionCaptureRefundPositionDefinition</argument>
        <argument key="payment_method">Shopware\Core\Checkout\Payment\PaymentMethodDefinition</argument>
        <argument key="payment_method_translation">Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition</argument>
        <argument key="promotion">Shopware\Core\Checkout\Promotion\PromotionDefinition</argument>
        <argument key="promotion_sales_channel">Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition</argument>
        <argument key="promotion_individual_code">Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition</argument>
        <argument key="promotion_discount">Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition</argument>
        <argument key="promotion_discount_rule">Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition</argument>
        <argument key="promotion_setgroup">Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition</argument>
        <argument key="promotion_setgroup_rule">Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition</argument>
        <argument key="promotion_order_rule">Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition</argument>
        <argument key="promotion_persona_customer">Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition</argument>
        <argument key="promotion_persona_rule">Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition</argument>
        <argument key="promotion_cart_rule">Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition</argument>
        <argument key="promotion_translation">Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition</argument>
        <argument key="promotion_discount_prices">Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition</argument>
        <argument key="shipping_method">Shopware\Core\Checkout\Shipping\ShippingMethodDefinition</argument>
        <argument key="shipping_method_tag">Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition</argument>
        <argument key="shipping_method_price">Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition</argument>
        <argument key="shipping_method_translation">Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition</argument>
        <argument key="app_administration_snippet">Shopware\Administration\Snippet\AppAdministrationSnippetDefinition</argument>
        <argument key="notification">Shopware\Administration\Notification\NotificationDefinition</argument>
        <argument key="theme">Shopware\Storefront\Theme\ThemeDefinition</argument>
        <argument key="theme_translation">Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition</argument>
        <argument key="theme_sales_channel">Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition</argument>
        <argument key="theme_media">Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition</argument>
        <argument key="theme_child">Shopware\Storefront\Theme\Aggregate\ThemeChildDefinition</argument>
      </argument>
      <argument type="collection">
        <argument key="log_entry">log_entry.repository</argument>
        <argument key="acl_role">acl_role.repository</argument>
        <argument key="acl_user_role">acl_user_role.repository</argument>
        <argument key="app">app.repository</argument>
        <argument key="app_translation">app_translation.repository</argument>
        <argument key="app_action_button">app_action_button.repository</argument>
        <argument key="app_action_button_translation">app_action_button_translation.repository</argument>
        <argument key="app_template">app_template.repository</argument>
        <argument key="app_payment_method">app_payment_method.repository</argument>
        <argument key="app_script_condition">app_script_condition.repository</argument>
        <argument key="app_script_condition_translation">app_script_condition_translation.repository</argument>
        <argument key="app_cms_block">app_cms_block.repository</argument>
        <argument key="app_cms_block_translation">app_cms_block_translation.repository</argument>
        <argument key="app_flow_action">app_flow_action.repository</argument>
        <argument key="app_flow_action_translation">app_flow_action_translation.repository</argument>
        <argument key="app_flow_event">app_flow_event.repository</argument>
        <argument key="app_shipping_method">app_shipping_method.repository</argument>
        <argument key="custom_field">custom_field.repository</argument>
        <argument key="custom_field_set">custom_field_set.repository</argument>
        <argument key="custom_field_set_relation">custom_field_set_relation.repository</argument>
        <argument key="version">version.repository</argument>
        <argument key="version_commit">version_commit.repository</argument>
        <argument key="version_commit_data">version_commit_data.repository</argument>
        <argument key="plugin">plugin.repository</argument>
        <argument key="plugin_translation">plugin_translation.repository</argument>
        <argument key="scheduled_task">scheduled_task.repository</argument>
        <argument key="script">script.repository</argument>
        <argument key="language">language.repository</argument>
        <argument key="seo_url">seo_url.repository</argument>
        <argument key="seo_url_template">seo_url_template.repository</argument>
        <argument key="main_category">main_category.repository</argument>
        <argument key="webhook">webhook.repository</argument>
        <argument key="webhook_event_log">webhook_event_log.repository</argument>
        <argument key="sales_channel">sales_channel.repository</argument>
        <argument key="sales_channel_translation">sales_channel_translation.repository</argument>
        <argument key="sales_channel_country">sales_channel_country.repository</argument>
        <argument key="sales_channel_currency">sales_channel_currency.repository</argument>
        <argument key="sales_channel_domain">sales_channel_domain.repository</argument>
        <argument key="sales_channel_language">sales_channel_language.repository</argument>
        <argument key="sales_channel_payment_method">sales_channel_payment_method.repository</argument>
        <argument key="sales_channel_shipping_method">sales_channel_shipping_method.repository</argument>
        <argument key="sales_channel_type">sales_channel_type.repository</argument>
        <argument key="sales_channel_type_translation">sales_channel_type_translation.repository</argument>
        <argument key="sales_channel_analytics">sales_channel_analytics.repository</argument>
        <argument key="country">country.repository</argument>
        <argument key="country_state">country_state.repository</argument>
        <argument key="country_state_translation">country_state_translation.repository</argument>
        <argument key="country_translation">country_translation.repository</argument>
        <argument key="currency">currency.repository</argument>
        <argument key="currency_country_rounding">currency_country_rounding.repository</argument>
        <argument key="currency_translation">currency_translation.repository</argument>
        <argument key="custom_entity">custom_entity.repository</argument>
        <argument key="locale">locale.repository</argument>
        <argument key="locale_translation">locale_translation.repository</argument>
        <argument key="snippet_set">snippet_set.repository</argument>
        <argument key="snippet">snippet.repository</argument>
        <argument key="salutation">salutation.repository</argument>
        <argument key="salutation_translation">salutation_translation.repository</argument>
        <argument key="tax">tax.repository</argument>
        <argument key="tax_rule">tax_rule.repository</argument>
        <argument key="tax_rule_type">tax_rule_type.repository</argument>
        <argument key="tax_rule_type_translation">tax_rule_type_translation.repository</argument>
        <argument key="tax_provider">tax_provider.repository</argument>
        <argument key="tax_provider_translation">tax_provider_translation.repository</argument>
        <argument key="unit">unit.repository</argument>
        <argument key="unit_translation">unit_translation.repository</argument>
        <argument key="user">user.repository</argument>
        <argument key="user_config">user_config.repository</argument>
        <argument key="user_access_key">user_access_key.repository</argument>
        <argument key="user_recovery">user_recovery.repository</argument>
        <argument key="integration">integration.repository</argument>
        <argument key="integration_role">integration_role.repository</argument>
        <argument key="state_machine">state_machine.repository</argument>
        <argument key="state_machine_translation">state_machine_translation.repository</argument>
        <argument key="state_machine_state">state_machine_state.repository</argument>
        <argument key="state_machine_state_translation">state_machine_state_translation.repository</argument>
        <argument key="state_machine_transition">state_machine_transition.repository</argument>
        <argument key="state_machine_history">state_machine_history.repository</argument>
        <argument key="system_config">system_config.repository</argument>
        <argument key="number_range">number_range.repository</argument>
        <argument key="number_range_sales_channel">number_range_sales_channel.repository</argument>
        <argument key="number_range_state">number_range_state.repository</argument>
        <argument key="number_range_type">number_range_type.repository</argument>
        <argument key="number_range_type_translation">number_range_type_translation.repository</argument>
        <argument key="number_range_translation">number_range_translation.repository</argument>
        <argument key="tag">tag.repository</argument>
        <argument key="category">category.repository</argument>
        <argument key="category_translation">category_translation.repository</argument>
        <argument key="category_tag">category_tag.repository</argument>
        <argument key="media">media.repository</argument>
        <argument key="media_default_folder">media_default_folder.repository</argument>
        <argument key="media_thumbnail">media_thumbnail.repository</argument>
        <argument key="media_translation">media_translation.repository</argument>
        <argument key="media_folder">media_folder.repository</argument>
        <argument key="media_thumbnail_size">media_thumbnail_size.repository</argument>
        <argument key="media_folder_configuration">media_folder_configuration.repository</argument>
        <argument key="media_folder_configuration_media_thumbnail_size">media_folder_configuration_media_thumbnail_size.repository</argument>
        <argument key="media_tag">media_tag.repository</argument>
        <argument key="product">product.repository</argument>
        <argument key="product_stream_mapping">product_stream_mapping.repository</argument>
        <argument key="product_category">product_category.repository</argument>
        <argument key="product_custom_field_set">product_custom_field_set.repository</argument>
        <argument key="product_tag">product_tag.repository</argument>
        <argument key="product_configurator_setting">product_configurator_setting.repository</argument>
        <argument key="product_price">product_price.repository</argument>
        <argument key="product_property">product_property.repository</argument>
        <argument key="product_search_keyword">product_search_keyword.repository</argument>
        <argument key="product_keyword_dictionary">product_keyword_dictionary.repository</argument>
        <argument key="product_review">product_review.repository</argument>
        <argument key="product_manufacturer">product_manufacturer.repository</argument>
        <argument key="product_manufacturer_translation">product_manufacturer_translation.repository</argument>
        <argument key="product_media">product_media.repository</argument>
        <argument key="product_download">product_download.repository</argument>
        <argument key="product_translation">product_translation.repository</argument>
        <argument key="product_option">product_option.repository</argument>
        <argument key="product_category_tree">product_category_tree.repository</argument>
        <argument key="product_cross_selling">product_cross_selling.repository</argument>
        <argument key="product_cross_selling_translation">product_cross_selling_translation.repository</argument>
        <argument key="product_cross_selling_assigned_products">product_cross_selling_assigned_products.repository</argument>
        <argument key="product_feature_set">product_feature_set.repository</argument>
        <argument key="product_feature_set_translation">product_feature_set_translation.repository</argument>
        <argument key="product_sorting">product_sorting.repository</argument>
        <argument key="product_sorting_translation">product_sorting_translation.repository</argument>
        <argument key="product_search_config">product_search_config.repository</argument>
        <argument key="product_search_config_field">product_search_config_field.repository</argument>
        <argument key="product_visibility">product_visibility.repository</argument>
        <argument key="delivery_time">delivery_time.repository</argument>
        <argument key="newsletter_recipient">newsletter_recipient.repository</argument>
        <argument key="newsletter_recipient_tag">newsletter_recipient_tag.repository</argument>
        <argument key="rule">rule.repository</argument>
        <argument key="rule_condition">rule_condition.repository</argument>
        <argument key="rule_tag">rule_tag.repository</argument>
        <argument key="product_stream">product_stream.repository</argument>
        <argument key="product_stream_translation">product_stream_translation.repository</argument>
        <argument key="product_stream_filter">product_stream_filter.repository</argument>
        <argument key="product_export">product_export.repository</argument>
        <argument key="property_group">property_group.repository</argument>
        <argument key="property_group_option">property_group_option.repository</argument>
        <argument key="property_group_option_translation">property_group_option_translation.repository</argument>
        <argument key="property_group_translation">property_group_translation.repository</argument>
        <argument key="cms_page">cms_page.repository</argument>
        <argument key="cms_page_translation">cms_page_translation.repository</argument>
        <argument key="cms_section">cms_section.repository</argument>
        <argument key="cms_block">cms_block.repository</argument>
        <argument key="cms_slot">cms_slot.repository</argument>
        <argument key="cms_slot_translation">cms_slot_translation.repository</argument>
        <argument key="mail_template">mail_template.repository</argument>
        <argument key="mail_template_translation">mail_template_translation.repository</argument>
        <argument key="mail_template_type">mail_template_type.repository</argument>
        <argument key="mail_template_type_translation">mail_template_type_translation.repository</argument>
        <argument key="mail_template_media">mail_template_media.repository</argument>
        <argument key="mail_header_footer">mail_header_footer.repository</argument>
        <argument key="mail_header_footer_translation">mail_header_footer_translation.repository</argument>
        <argument key="delivery_time_translation">delivery_time_translation.repository</argument>
        <argument key="import_export_profile">import_export_profile.repository</argument>
        <argument key="import_export_log">import_export_log.repository</argument>
        <argument key="import_export_file">import_export_file.repository</argument>
        <argument key="import_export_profile_translation">import_export_profile_translation.repository</argument>
        <argument key="landing_page">landing_page.repository</argument>
        <argument key="landing_page_translation">landing_page_translation.repository</argument>
        <argument key="landing_page_tag">landing_page_tag.repository</argument>
        <argument key="landing_page_sales_channel">landing_page_sales_channel.repository</argument>
        <argument key="flow">flow.repository</argument>
        <argument key="flow_sequence">flow_sequence.repository</argument>
        <argument key="flow_template">flow_template.repository</argument>
        <argument key="customer">customer.repository</argument>
        <argument key="customer_group_translation">customer_group_translation.repository</argument>
        <argument key="customer_address">customer_address.repository</argument>
        <argument key="customer_recovery">customer_recovery.repository</argument>
        <argument key="customer_group">customer_group.repository</argument>
        <argument key="customer_group_registration_sales_channels">customer_group_registration_sales_channels.repository</argument>
        <argument key="customer_tag">customer_tag.repository</argument>
        <argument key="customer_wishlist">customer_wishlist.repository</argument>
        <argument key="customer_wishlist_product">customer_wishlist_product.repository</argument>
        <argument key="document">document.repository</argument>
        <argument key="document_type">document_type.repository</argument>
        <argument key="document_type_translation">document_type_translation.repository</argument>
        <argument key="document_base_config">document_base_config.repository</argument>
        <argument key="document_base_config_sales_channel">document_base_config_sales_channel.repository</argument>
        <argument key="order">order.repository</argument>
        <argument key="order_address">order_address.repository</argument>
        <argument key="order_customer">order_customer.repository</argument>
        <argument key="order_delivery">order_delivery.repository</argument>
        <argument key="order_delivery_position">order_delivery_position.repository</argument>
        <argument key="order_line_item">order_line_item.repository</argument>
        <argument key="order_line_item_download">order_line_item_download.repository</argument>
        <argument key="order_tag">order_tag.repository</argument>
        <argument key="order_transaction">order_transaction.repository</argument>
        <argument key="order_transaction_capture">order_transaction_capture.repository</argument>
        <argument key="order_transaction_capture_refund">order_transaction_capture_refund.repository</argument>
        <argument key="order_transaction_capture_refund_position">order_transaction_capture_refund_position.repository</argument>
        <argument key="payment_method">payment_method.repository</argument>
        <argument key="payment_method_translation">payment_method_translation.repository</argument>
        <argument key="promotion">promotion.repository</argument>
        <argument key="promotion_sales_channel">promotion_sales_channel.repository</argument>
        <argument key="promotion_individual_code">promotion_individual_code.repository</argument>
        <argument key="promotion_discount">promotion_discount.repository</argument>
        <argument key="promotion_discount_rule">promotion_discount_rule.repository</argument>
        <argument key="promotion_setgroup">promotion_setgroup.repository</argument>
        <argument key="promotion_setgroup_rule">promotion_setgroup_rule.repository</argument>
        <argument key="promotion_order_rule">promotion_order_rule.repository</argument>
        <argument key="promotion_persona_customer">promotion_persona_customer.repository</argument>
        <argument key="promotion_persona_rule">promotion_persona_rule.repository</argument>
        <argument key="promotion_cart_rule">promotion_cart_rule.repository</argument>
        <argument key="promotion_translation">promotion_translation.repository</argument>
        <argument key="promotion_discount_prices">promotion_discount_prices.repository</argument>
        <argument key="shipping_method">shipping_method.repository</argument>
        <argument key="shipping_method_tag">shipping_method_tag.repository</argument>
        <argument key="shipping_method_price">shipping_method_price.repository</argument>
        <argument key="shipping_method_translation">shipping_method_translation.repository</argument>
        <argument key="app_administration_snippet">app_administration_snippet.repository</argument>
        <argument key="notification">notification.repository</argument>
        <argument key="theme">theme.repository</argument>
        <argument key="theme_translation">theme_translation.repository</argument>
        <argument key="theme_sales_channel">theme_sales_channel.repository</argument>
        <argument key="theme_media">theme_media.repository</argument>
        <argument key="theme_child">theme_child.repository</argument>
      </argument>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\LockValidator" class="Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\LockValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Sync\SyncService" class="Shopware\Core\Framework\Api\Sync\SyncService" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Sync\SyncFkResolver"/>
    </service>
    <service id="Shopware\Core\Framework\Api\Sync\SyncFkResolver" class="Shopware\Core\Framework\Api\Sync\SyncFkResolver">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="tagged_iterator" tag="shopware.sync.fk_resolver"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\ExceptionHandlerRegistry" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\ExceptionHandlerRegistry">
      <argument type="tagged_iterator" tag="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\TechnicalNameExceptionHandler" class="Shopware\Core\Framework\DataAbstractionLayer\TechnicalNameExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityProtection\EntityProtectionValidator" class="Shopware\Core\Framework\DataAbstractionLayer\EntityProtection\EntityProtectionValidator">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry" class="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry" public="true">
      <tag name="messenger.message_handler"/>
      <argument type="tagged_iterator" tag="shopware.entity_indexer"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\Subscriber\EntityIndexingSubscriber" class="Shopware\Core\Framework\DataAbstractionLayer\Indexing\Subscriber\EntityIndexingSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\InheritanceUpdater" class="Shopware\Core\Framework\DataAbstractionLayer\Indexing\InheritanceUpdater">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\ChildCountUpdater" class="Shopware\Core\Framework\DataAbstractionLayer\Indexing\ChildCountUpdater">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\ManyToManyIdFieldUpdater" class="Shopware\Core\Framework\DataAbstractionLayer\Indexing\ManyToManyIdFieldUpdater">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Version\Cleanup\CleanupVersionTask" class="Shopware\Core\Framework\DataAbstractionLayer\Version\Cleanup\CleanupVersionTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Version\Cleanup\CleanupVersionTaskHandler" class="Shopware\Core\Framework\DataAbstractionLayer\Version\Cleanup\CleanupVersionTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument>30</argument>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Command\DemodataCommand" class="Shopware\Core\Framework\Demodata\Command\DemodataCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Demodata\DemodataService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>dev</argument>
      <call method="addDefault">
        <argument>rules</argument>
        <argument>25</argument>
      </call>
      <call method="addOption">
        <argument>rules</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Rules count</argument>
      </call>
      <call method="addDefault">
        <argument>customers</argument>
        <argument>60</argument>
      </call>
      <call method="addOption">
        <argument>customers</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Customers count</argument>
      </call>
      <call method="addDefault">
        <argument>properties</argument>
        <argument>10</argument>
      </call>
      <call method="addOption">
        <argument>properties</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Property group count (option count rand(30-300))</argument>
      </call>
      <call method="addDefault">
        <argument>categories</argument>
        <argument>10</argument>
      </call>
      <call method="addOption">
        <argument>categories</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Categories count</argument>
      </call>
      <call method="addDefault">
        <argument>manufacturers</argument>
        <argument>60</argument>
      </call>
      <call method="addOption">
        <argument>manufacturers</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Manufacturers count</argument>
      </call>
      <call method="addDefault">
        <argument>tags</argument>
        <argument>50</argument>
      </call>
      <call method="addOption">
        <argument>tags</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Tags count</argument>
      </call>
      <call method="addDefault">
        <argument>reviews</argument>
        <argument>20</argument>
      </call>
      <call method="addOption">
        <argument>reviews</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Reviews count</argument>
      </call>
      <call method="addDefault">
        <argument>products</argument>
        <argument>1000</argument>
      </call>
      <call method="addOption">
        <argument>products</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Products count</argument>
      </call>
      <call method="addDefault">
        <argument>promotions</argument>
        <argument>50</argument>
      </call>
      <call method="addOption">
        <argument>promotions</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Promotions count</argument>
      </call>
      <call method="addDefault">
        <argument>flows</argument>
        <argument>0</argument>
      </call>
      <call method="addOption">
        <argument>flows</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Flows count</argument>
      </call>
      <call method="addDefault">
        <argument>media</argument>
        <argument>300</argument>
      </call>
      <call method="addOption">
        <argument>media</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Media count</argument>
      </call>
      <call method="addDefault">
        <argument>product-streams</argument>
        <argument>10</argument>
      </call>
      <call method="addOption">
        <argument>product-streams</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Product-streams count</argument>
      </call>
      <call method="addDefault">
        <argument>orders</argument>
        <argument>60</argument>
      </call>
      <call method="addOption">
        <argument>orders</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Orders count</argument>
      </call>
      <call method="addDefault">
        <argument>attribute-sets</argument>
        <argument>4</argument>
      </call>
      <call method="addOption">
        <argument>attribute-sets</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>CustomField set count</argument>
      </call>
      <call method="addDefault">
        <argument>mail-template</argument>
        <argument>10</argument>
      </call>
      <call method="addOption">
        <argument>mail-template</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Mail-template count</argument>
      </call>
      <call method="addDefault">
        <argument>mail-header-footer</argument>
        <argument>3</argument>
      </call>
      <call method="addOption">
        <argument>mail-header-footer</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Mail header/footer count</argument>
      </call>
      <call method="addDefault">
        <argument>users</argument>
        <argument>0</argument>
      </call>
      <call method="addOption">
        <argument>users</argument>
        <argument>null</argument>
        <argument>4</argument>
        <argument>Users count</argument>
      </call>
      <call method="setName">
        <argument>framework:demodata</argument>
      </call>
      <call method="setDescription">
        <argument>Generates demo data</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Demodata\DemodataService" class="Shopware\Core\Framework\Demodata\DemodataService">
      <argument type="tagged_iterator" tag="shopware.demodata_generator"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\RuleGenerator" class="Shopware\Core\Framework\Demodata\Generator\RuleGenerator">
      <tag name="shopware.demodata_generator" option_name="rules" option-name="rules" option_default="25" option-default="25"/>
      <argument type="service" id="rule.repository"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="payment_method.repository"/>
      <argument type="service" id="shipping_method.repository"/>
      <argument type="service" id="Shopware\Core\Content\Rule\RuleDefinition"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\CustomerGenerator" class="Shopware\Core\Framework\Demodata\Generator\CustomerGenerator">
      <tag name="shopware.demodata_generator" option_name="customers" option-name="customers" option_default="60" option-default="60"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="customer_group.repository"/>
      <argument type="service" id="Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGeneratorInterface"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\CustomerDefinition"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\PropertyGroupGenerator" class="Shopware\Core\Framework\Demodata\Generator\PropertyGroupGenerator">
      <tag name="shopware.demodata_generator" option_name="properties" option-name="properties" option_default="10" option-default="10" option_description="Property group count (option count rand(30-300))" option-description="Property group count (option count rand(30-300))"/>
      <argument type="service" id="property_group.repository"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\CategoryGenerator" class="Shopware\Core\Framework\Demodata\Generator\CategoryGenerator">
      <tag name="shopware.demodata_generator" option_name="categories" option-name="categories" option_default="10" option-default="10"/>
      <argument type="service" id="category.repository"/>
      <argument type="service" id="cms_page.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\ProductManufacturerGenerator" class="Shopware\Core\Framework\Demodata\Generator\ProductManufacturerGenerator">
      <tag name="shopware.demodata_generator" option_name="manufacturers" option-name="manufacturers" option_default="60" option-default="60"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\TagGenerator" class="Shopware\Core\Framework\Demodata\Generator\TagGenerator">
      <tag name="shopware.demodata_generator" option_name="tags" option-name="tags" option_default="50" option-default="50"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="Shopware\Core\System\Tag\TagDefinition"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\ProductReviewGenerator" class="Shopware\Core\Framework\Demodata\Generator\ProductReviewGenerator">
      <tag name="shopware.demodata_generator" option_name="reviews" option-name="reviews" option_default="20" option-default="20"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\Service\ProductReviewCountService"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\ProductGenerator" class="Shopware\Core\Framework\Demodata\Generator\ProductGenerator">
      <tag name="shopware.demodata_generator" option_name="products" option-name="products" option_default="1000" option-default="1000"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\InheritanceUpdater"/>
      <argument type="service" id="Shopware\Core\Content\Product\DataAbstractionLayer\StatesUpdater"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\PromotionGenerator" class="Shopware\Core\Framework\Demodata\Generator\PromotionGenerator">
      <tag name="shopware.demodata_generator" option_name="promotions" option-name="promotions" option_default="50" option-default="50"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\FlowGenerator" class="Shopware\Core\Framework\Demodata\Generator\FlowGenerator">
      <tag name="shopware.demodata_generator" option_name="flows" option-name="flows" option_default="0" option-default="0"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Event\BusinessEventCollector"/>
      <argument type="service" id="Shopware\Core\Content\Flow\Api\FlowActionCollector"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\MediaGenerator" class="Shopware\Core\Framework\Demodata\Generator\MediaGenerator">
      <tag name="shopware.demodata_generator" option_name="media" option-name="media" option_default="300" option-default="300"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\FileSaver"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\FileNameProvider"/>
      <argument type="service" id="media_default_folder.repository"/>
      <argument type="service" id="media_folder.repository"/>
      <argument type="service" id="Shopware\Core\Content\Media\MediaDefinition"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\ProductStreamGenerator" class="Shopware\Core\Framework\Demodata\Generator\ProductStreamGenerator">
      <tag name="shopware.demodata_generator" option_name="product-streams" option-name="product-streams" option_default="10" option-default="10"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="Shopware\Core\Content\ProductStream\ProductStreamDefinition"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\OrderGenerator" class="Shopware\Core\Framework\Demodata\Generator\OrderGenerator">
      <tag name="shopware.demodata_generator" option_name="orders" option-name="orders" option_default="60" option-default="60"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderConverter"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\OrderDefinition"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartCalculator"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\CustomFieldGenerator" class="Shopware\Core\Framework\Demodata\Generator\CustomFieldGenerator">
      <tag name="shopware.demodata_generator" option_name="attribute-sets" option-name="attribute-sets" option_default="4" option-default="4" option_description="CustomField set count" option-description="CustomField set count"/>
      <argument type="service" id="custom_field_set.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\MailTemplateGenerator" class="Shopware\Core\Framework\Demodata\Generator\MailTemplateGenerator">
      <tag name="shopware.demodata_generator" option_name="mail-template" option-name="mail-template" option_default="10" option-default="10"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="mail_template_type.repository"/>
      <argument type="service" id="Shopware\Core\Content\MailTemplate\MailTemplateDefinition"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\MailHeaderFooterGenerator" class="Shopware\Core\Framework\Demodata\Generator\MailHeaderFooterGenerator">
      <tag name="shopware.demodata_generator" option_name="mail-header-footer" option-name="mail-header-footer" option_default="3" option-default="3" option_description="Mail header/footer count" option-description="Mail header/footer count"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition"/>
    </service>
    <service id="Shopware\Core\Framework\Demodata\Generator\UserGenerator" class="Shopware\Core\Framework\Demodata\Generator\UserGenerator">
      <tag name="shopware.demodata_generator" option_name="users" option-name="users" option_default="0" option-default="0"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\EntityWriter"/>
      <argument type="service" id="Shopware\Core\System\User\UserDefinition"/>
      <argument type="service" id="language.repository"/>
    </service>
    <service id="Shopware\Core\Framework\Event\BusinessEventRegistry" class="Shopware\Core\Framework\Event\BusinessEventRegistry" public="true">
      <call method="addClasses">
        <argument type="collection">
          <argument>Shopware\Core\Checkout\Customer\Event\CustomerBeforeLoginEvent</argument>
          <argument>Shopware\Core\Checkout\Customer\Event\CustomerLoginEvent</argument>
          <argument>Shopware\Core\Checkout\Customer\Event\CustomerLogoutEvent</argument>
          <argument>Shopware\Core\Checkout\Customer\Event\CustomerDeletedEvent</argument>
          <argument>Shopware\Core\System\User\Recovery\UserRecoveryRequestEvent</argument>
          <argument>Shopware\Core\Checkout\Customer\Event\CustomerChangedPaymentMethodEvent</argument>
          <argument>Shopware\Core\Checkout\Cart\Event\CheckoutOrderPlacedEvent</argument>
          <argument>Shopware\Core\Checkout\Order\Event\OrderPaymentMethodChangedEvent</argument>
          <argument>Shopware\Core\Checkout\Customer\Event\CustomerAccountRecoverRequestEvent</argument>
          <argument>Shopware\Core\Checkout\Customer\Event\CustomerDoubleOptInRegistrationEvent</argument>
          <argument>Shopware\Core\Checkout\Customer\Event\CustomerGroupRegistrationAccepted</argument>
          <argument>Shopware\Core\Checkout\Customer\Event\CustomerGroupRegistrationDeclined</argument>
          <argument>Shopware\Core\Checkout\Customer\Event\CustomerRegisterEvent</argument>
          <argument>Shopware\Core\Checkout\Customer\Event\DoubleOptInGuestOrderEvent</argument>
          <argument>Shopware\Core\Checkout\Customer\Event\GuestCustomerRegisterEvent</argument>
          <argument>Shopware\Core\Content\ContactForm\Event\ContactFormEvent</argument>
          <argument>Shopware\Core\Content\Product\SalesChannel\Review\Event\ReviewFormEvent</argument>
          <argument>Shopware\Core\Content\MailTemplate\Service\Event\MailBeforeSentEvent</argument>
          <argument>Shopware\Core\Content\MailTemplate\Service\Event\MailBeforeValidateEvent</argument>
          <argument>Shopware\Core\Content\MailTemplate\Service\Event\MailSentEvent</argument>
          <argument>Shopware\Core\Content\Newsletter\Event\NewsletterConfirmEvent</argument>
          <argument>Shopware\Core\Content\Newsletter\Event\NewsletterRegisterEvent</argument>
          <argument>Shopware\Core\Content\Newsletter\Event\NewsletterUnsubscribeEvent</argument>
          <argument>Shopware\Core\Content\ProductExport\Event\ProductExportLoggingEvent</argument>
        </argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Event\NestedEventDispatcher" class="Shopware\Core\Framework\Event\NestedEventDispatcher">
      <argument type="service" id="Shopware\Core\Framework\Webhook\WebhookDispatcher"/>
    </service>
    <service id="Shopware\Core\Framework\Event\BusinessEventCollector" class="Shopware\Core\Framework\Event\BusinessEventCollector" public="true">
      <argument type="service" id="Shopware\Core\Framework\Event\BusinessEventRegistry"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Event\Command\DebugDumpBusinessEventsCommand" class="Shopware\Core\Framework\Event\Command\DebugDumpBusinessEventsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Event\BusinessEventCollector"/>
      <call method="setName">
        <argument>debug:business-events</argument>
      </call>
      <call method="setDescription">
        <argument>Dumps all business events</argument>
      </call>
    </service>
    <service id="Shopware\Core\Content\Category\CategoryHydrator" class="Shopware\Core\Content\Category\CategoryHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\ProductHydrator" class="Shopware\Core\Content\Product\ProductHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductCrossSellingAssignedProducts\ProductCrossSellingAssignedProductsHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductCrossSellingAssignedProducts\ProductCrossSellingAssignedProductsHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductFeatureSet\ProductFeatureSetHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductFeatureSet\ProductFeatureSetHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingHydrator" class="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductSearchConfig\ProductSearchConfigHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductSearchConfig\ProductSearchConfigHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductSearchConfigField\ProductSearchConfigFieldHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductSearchConfigField\ProductSearchConfigFieldHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityHydrator" class="Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\ProductStream\ProductStreamHydrator" class="Shopware\Core\Content\ProductStream\ProductStreamHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterHydrator" class="Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\ProductExportHydrator" class="Shopware\Core\Content\ProductExport\ProductExportHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Property\PropertyGroupHydrator" class="Shopware\Core\Content\Property\PropertyGroupHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionHydrator" class="Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionHydrator" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory" class="Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory">
      <argument type="tagged_iterator" tag="shopware.filesystem.factory"/>
    </service>
    <service id="shopware.filesystem.public" class="League\Flysystem\FilesystemOperator" public="true">
      <argument>%shopware.filesystem.public%</argument>
      <factory service="Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory" method="factory"/>
    </service>
    <service id="shopware.filesystem.private" class="League\Flysystem\FilesystemOperator" public="true">
      <argument>%shopware.filesystem.private%</argument>
      <factory service="Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory" method="privateFactory"/>
    </service>
    <service id="shopware.filesystem.temp" class="League\Flysystem\FilesystemOperator" public="true">
      <argument>%shopware.filesystem.temp%</argument>
      <factory service="Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory" method="privateFactory"/>
    </service>
    <service id="shopware.filesystem.theme" class="League\Flysystem\FilesystemOperator" public="true">
      <argument>%shopware.filesystem.theme%</argument>
      <factory service="Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory" method="factory"/>
    </service>
    <service id="shopware.filesystem.sitemap" class="League\Flysystem\FilesystemOperator" public="true">
      <argument>%shopware.filesystem.sitemap%</argument>
      <factory service="Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory" method="factory"/>
    </service>
    <service id="shopware.filesystem.asset" class="League\Flysystem\FilesystemOperator" public="true">
      <argument>%shopware.filesystem.asset%</argument>
      <factory service="Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory" method="factory"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory.local" class="Shopware\Core\Framework\Adapter\Filesystem\Adapter\LocalFactory">
      <tag name="shopware.filesystem.factory"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory.amazon_s3" class="Shopware\Core\Framework\Adapter\Filesystem\Adapter\AwsS3v3Factory">
      <tag name="shopware.filesystem.factory"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Filesystem\FilesystemFactory.google_storage" class="Shopware\Core\Framework\Adapter\Filesystem\Adapter\GoogleStorageFactory">
      <tag name="shopware.filesystem.factory"/>
    </service>
    <service id="League\Flysystem\PathPrefixing\PathPrefixedAdapter" class="League\Flysystem\PathPrefixing\PathPrefixedAdapter">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument>media</argument>
    </service>
    <service id="console.command.assets_install" class="Shopware\Core\Framework\Adapter\Asset\AssetInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\Util\AssetService"/>
      <argument type="service" id="Shopware\Core\Framework\App\ActiveAppsLoader"/>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
      <call method="setDescription">
        <argument>Installs bundles web assets under a public web directory</argument>
      </call>
    </service>
    <service id="shopware.asset.public" class="Shopware\Core\Framework\Adapter\Asset\FallbackUrlPackage" lazy="true">
      <tag name="shopware.asset" asset="public"/>
      <tag name="assets.package" package="public"/>
      <argument type="collection">
        <argument></argument>
      </argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="shopware.asset.theme.version_strategy" class="Shopware\Core\Framework\Adapter\Asset\FlysystemLastModifiedVersionStrategy">
      <argument>theme-metaData</argument>
      <argument type="service" id="shopware.filesystem.theme"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="shopware.asset.asset.version_strategy" class="Shopware\Core\Framework\Adapter\Asset\FlysystemLastModifiedVersionStrategy">
      <argument>asset-metaData</argument>
      <argument type="service" id="shopware.filesystem.asset"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="shopware.asset.asset" class="Shopware\Core\Framework\Adapter\Asset\FallbackUrlPackage" lazy="true">
      <tag name="shopware.asset" asset="asset"/>
      <tag name="assets.package" package="asset"/>
      <argument type="collection">
        <argument></argument>
      </argument>
      <argument type="service" id="shopware.asset.asset.version_strategy"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="shopware.asset.asset_without_versioning" class="Shopware\Core\Framework\Adapter\Asset\FallbackUrlPackage" lazy="true">
      <argument type="collection">
        <argument></argument>
      </argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="shopware.asset.sitemap" class="Shopware\Core\Framework\Adapter\Asset\FallbackUrlPackage" lazy="true">
      <tag name="shopware.asset" asset="sitemap"/>
      <tag name="assets.package" package="sitemap"/>
      <argument type="collection">
        <argument></argument>
      </argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\Subscriber\EarlyReturnMessagesListener" class="Shopware\Core\Framework\MessageQueue\Subscriber\EarlyReturnMessagesListener"/>
    <service id="Shopware\Core\Framework\MessageQueue\Subscriber\MessageQueueStatsSubscriber" class="Shopware\Core\Framework\MessageQueue\Subscriber\MessageQueueStatsSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="shopware.increment.gateway.registry"/>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\Api\ConsumeMessagesController" class="Shopware\Core\Framework\MessageQueue\Api\ConsumeMessagesController" public="true">
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\Subscriber\EarlyReturnMessagesListener"/>
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\Subscriber\MessageQueueStatsSubscriber"/>
      <argument>v65</argument>
      <argument>128M</argument>
      <argument>20</argument>
      <argument type="service" id="lock.default.factory"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="messenger.transport.doctrine.factory" class="Shopware\Core\Framework\Adapter\Doctrine\Messenger\DoctrineTransportFactory">
      <tag name="messenger.transport_factory"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\SendEmailMessageJsonSerializer" class="Shopware\Core\Framework\MessageQueue\SendEmailMessageJsonSerializer">
      <tag name="serializer.normalizer"/>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\Subscriber\ConsumeMessagesSubscriber" class="Shopware\Core\Framework\MessageQueue\Subscriber\ConsumeMessagesSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\KernelPluginLoader\KernelPluginLoader" class="Shopware\Core\Framework\Plugin\KernelPluginLoader\KernelPluginLoader" public="true">
      <factory service="kernel" method="getPluginLoader"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\KernelPluginCollection" class="Shopware\Core\Framework\Plugin\KernelPluginCollection" public="true">
      <factory service="Shopware\Core\Framework\Plugin\KernelPluginLoader\KernelPluginLoader" method="getPluginInstances"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\BundleDumpCommand" class="Shopware\Core\Framework\Plugin\Command\BundleDumpCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\BundleConfigGenerator"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <call method="setName">
        <argument>bundle:dump</argument>
      </call>
      <call method="setAliases">
        <argument type="collection">
          <argument>administration:dump:plugins</argument>
          <argument>administration:dump:bundles</argument>
        </argument>
      </call>
      <call method="setDescription">
        <argument>Dumps the bundle configuration for a plugin</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\BundleConfigGenerator" class="Shopware\Core\Framework\Plugin\BundleConfigGenerator">
      <argument type="service" id="kernel"/>
      <argument type="service" id="Shopware\Core\Framework\App\ActiveAppsLoader"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\PluginDefinition" class="Shopware\Core\Framework\Plugin\PluginDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition" class="Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\PluginService" class="Shopware\Core\Framework\Plugin\PluginService">
      <argument>/home/avinash/Desktop/work/Shopware/custom/plugins</argument>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="language.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\Util\PluginFinder"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\Util\VersionSanitizer"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\PluginLifecycleService" class="Shopware\Core\Framework\Plugin\PluginLifecycleService">
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\KernelPluginCollection"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="Shopware\Core\Framework\Migration\MigrationCollectionLoader"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\Util\AssetService"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\Composer\CommandExecutor"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\Requirement\RequirementsValidator"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <argument>6.5.7.3</argument>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\System\CustomEntity\Schema\CustomEntityPersister"/>
      <argument type="service" id="Shopware\Core\System\CustomEntity\Schema\CustomEntitySchemaUpdater"/>
      <argument type="service" id="Shopware\Core\System\CustomEntity\CustomEntityLifecycleService"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginService"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\Util\VersionSanitizer"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Changelog\ChangelogParser" class="Shopware\Core\Framework\Plugin\Changelog\ChangelogParser"/>
    <service id="Shopware\Core\Framework\Plugin\Changelog\ChangelogService" class="Shopware\Core\Framework\Plugin\Changelog\ChangelogService">
      <argument type="service" id="Shopware\Core\Framework\Plugin\Changelog\ChangelogParser"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\PluginManagementService" class="Shopware\Core\Framework\Plugin\PluginManagementService">
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginZipDetector"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginExtractor"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginService"/>
      <argument type="service" id="filesystem"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheClearer"/>
      <argument type="service" id="shopware.store_download_client"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\PluginExtractor" class="Shopware\Core\Framework\Plugin\PluginExtractor">
      <argument type="collection">
        <argument key="plugin">/home/avinash/Desktop/work/Shopware/custom/plugins</argument>
        <argument key="app">/home/avinash/Desktop/work/Shopware/custom/apps</argument>
      </argument>
      <argument type="service" id="filesystem"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\PluginZipDetector" class="Shopware\Core\Framework\Plugin\PluginZipDetector"/>
    <service id="Shopware\Core\Framework\Plugin\Command\PluginRefreshCommand" class="Shopware\Core\Framework\Plugin\Command\PluginRefreshCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginService"/>
      <call method="setName">
        <argument>plugin:refresh</argument>
      </call>
      <call method="setDescription">
        <argument>Refreshes the plugin list</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\PluginListCommand" class="Shopware\Core\Framework\Plugin\Command\PluginListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="plugin.repository"/>
      <call method="setName">
        <argument>plugin:list</argument>
      </call>
      <call method="setDescription">
        <argument>Lists all plugins</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\PluginZipImportCommand" class="Shopware\Core\Framework\Plugin\Command\PluginZipImportCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManagementService"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginService"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheClearer"/>
      <call method="setName">
        <argument>plugin:zip-import</argument>
      </call>
      <call method="setDescription">
        <argument>Imports a plugin from a zip file</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginInstallCommand" class="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginInstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginLifecycleService"/>
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheClearer"/>
      <call method="setName">
        <argument>plugin:install</argument>
      </call>
      <call method="setDescription">
        <argument>Installs a plugin</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginActivateCommand" class="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginActivateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginLifecycleService"/>
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheClearer"/>
      <call method="setName">
        <argument>plugin:activate</argument>
      </call>
      <call method="setDescription">
        <argument>Activate a plugin</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateCommand" class="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginLifecycleService"/>
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheClearer"/>
      <call method="setName">
        <argument>plugin:update</argument>
      </call>
      <call method="setDescription">
        <argument>Updates a plugin</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginDeactivateCommand" class="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginDeactivateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginLifecycleService"/>
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheClearer"/>
      <call method="setName">
        <argument>plugin:deactivate</argument>
      </call>
      <call method="setDescription">
        <argument>Deactivates a plugin</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUninstallCommand" class="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUninstallCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginLifecycleService"/>
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheClearer"/>
      <call method="setName">
        <argument>plugin:uninstall</argument>
      </call>
      <call method="setDescription">
        <argument>Uninstall a plugin</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateAllCommand" class="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateAllCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginService"/>
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginLifecycleService"/>
      <call method="setName">
        <argument>plugin:update:all</argument>
      </call>
      <call method="setDescription">
        <argument>Install all available plugin updates</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Subscriber\PluginLoadedSubscriber" class="Shopware\Core\Framework\Plugin\Subscriber\PluginLoadedSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Subscriber\PluginAclPrivilegesSubscriber" class="Shopware\Core\Framework\Plugin\Subscriber\PluginAclPrivilegesSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\KernelPluginCollection"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Composer\PackageProvider" class="Shopware\Core\Framework\Plugin\Composer\PackageProvider"/>
    <service id="Shopware\Core\Framework\Plugin\Composer\CommandExecutor" class="Shopware\Core\Framework\Plugin\Composer\CommandExecutor" lazy="true">
      <argument>/home/avinash/Desktop/work/Shopware</argument>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Util\PluginIdProvider" class="Shopware\Core\Framework\Plugin\Util\PluginIdProvider" public="true">
      <argument type="service" id="plugin.repository"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Util\AssetService" class="Shopware\Core\Framework\Plugin\Util\AssetService">
      <argument type="service" id="shopware.filesystem.asset"/>
      <argument type="service" id="shopware.filesystem.private"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\KernelPluginLoader\KernelPluginLoader"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
      <argument type="service" id="parameter_bag"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Requirement\RequirementsValidator" class="Shopware\Core\Framework\Plugin\Requirement\RequirementsValidator">
      <argument type="service" id="plugin.repository"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Util\PluginFinder" class="Shopware\Core\Framework\Plugin\Util\PluginFinder">
      <argument type="service" id="Shopware\Core\Framework\Plugin\Composer\PackageProvider"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Util\VersionSanitizer" class="Shopware\Core\Framework\Plugin\Util\VersionSanitizer"/>
    <service id="Shopware\Core\Framework\Plugin\Command\PluginCreateCommand" class="Shopware\Core\Framework\Plugin\Command\PluginCreateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Shopware\Core\Framework\Plugin\Command\Scaffolding\ScaffoldingCollector"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\Command\Scaffolding\ScaffoldingWriter"/>
      <argument type="service" id="filesystem"/>
      <argument type="tagged_iterator" tag="shopware.scaffold.generator"/>
      <call method="setName">
        <argument>plugin:create</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new plugin</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\ScaffoldingCollector" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\ScaffoldingCollector">
      <argument type="tagged_iterator" tag="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\ScaffoldingWriter" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\ScaffoldingWriter">
      <argument type="service" id="filesystem"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\ComposerGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\ComposerGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\PluginClassGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\PluginClassGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\TestsGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\TestsGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\CommandGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\CommandGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\ScheduledTaskGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\ScheduledTaskGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\EventSubscriberGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\EventSubscriberGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\StorefrontControllerGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\StorefrontControllerGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\StoreApiRouteGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\StoreApiRouteGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\EntityGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\EntityGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\ConfigGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\ConfigGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\JavascriptPluginGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\JavascriptPluginGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\AdminModuleGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\AdminModuleGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\CustomFieldsetGenerator" class="Shopware\Core\Framework\Plugin\Command\Scaffolding\Generator\CustomFieldsetGenerator">
      <tag name="shopware.scaffold.generator"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\Collector\RuleConditionRegistry" class="Shopware\Core\Framework\Rule\Collector\RuleConditionRegistry">
      <argument type="tagged_iterator" tag="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\Container\AndRule" class="Shopware\Core\Framework\Rule\Container\AndRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\Container\NotRule" class="Shopware\Core\Framework\Rule\Container\NotRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\Container\OrRule" class="Shopware\Core\Framework\Rule\Container\OrRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\Container\XorRule" class="Shopware\Core\Framework\Rule\Container\XorRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\Container\MatchAllLineItemsRule" class="Shopware\Core\Framework\Rule\Container\MatchAllLineItemsRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\ScriptRule" class="Shopware\Core\Framework\Rule\ScriptRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\DateRangeRule" class="Shopware\Core\Framework\Rule\DateRangeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\SimpleRule" class="Shopware\Core\Framework\Rule\SimpleRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\SalesChannelRule" class="Shopware\Core\Framework\Rule\SalesChannelRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\TimeRangeRule" class="Shopware\Core\Framework\Rule\TimeRangeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\WeekdayRule" class="Shopware\Core\Framework\Rule\WeekdayRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Rule\Api\RuleConfigController" class="Shopware\Core\Framework\Rule\Api\RuleConfigController" public="true">
      <argument type="tagged_iterator" tag="shopware.rule.definition"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition" class="Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Scheduler\TaskScheduler" class="Shopware\Core\Framework\MessageQueue\ScheduledTask\Scheduler\TaskScheduler">
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="parameter_bag"/>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Registry\TaskRegistry" class="Shopware\Core\Framework\MessageQueue\ScheduledTask\Registry\TaskRegistry">
      <argument type="tagged_iterator" tag="shopware.scheduled.task"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="parameter_bag"/>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\ScheduledTask\MessageQueue\RegisterScheduledTaskHandler" class="Shopware\Core\Framework\MessageQueue\ScheduledTask\MessageQueue\RegisterScheduledTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Registry\TaskRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\Subscriber\PluginLifecycleSubscriber" class="Shopware\Core\Framework\MessageQueue\Subscriber\PluginLifecycleSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Registry\TaskRegistry"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Compatibility\ScheduledTaskCompatibilitySubscriber" class="Shopware\Core\Framework\MessageQueue\ScheduledTask\Compatibility\ScheduledTaskCompatibilitySubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Scheduler\TaskRunner" class="Shopware\Core\Framework\MessageQueue\ScheduledTask\Scheduler\TaskRunner">
      <argument type="tagged_iterator" tag="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\Command\RegisterScheduledTasksCommand" class="Shopware\Core\Framework\MessageQueue\Command\RegisterScheduledTasksCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Registry\TaskRegistry"/>
      <call method="setName">
        <argument>scheduled-task:register</argument>
      </call>
      <call method="setDescription">
        <argument>Registers all scheduled tasks</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\Command\ScheduledTaskRunner" class="Shopware\Core\Framework\MessageQueue\Command\ScheduledTaskRunner">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Scheduler\TaskScheduler"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <call method="setName">
        <argument>scheduled-task:run</argument>
      </call>
      <call method="setDescription">
        <argument>Runs scheduled tasks</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\Command\ListScheduledTaskCommand" class="Shopware\Core\Framework\MessageQueue\Command\ListScheduledTaskCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Registry\TaskRegistry"/>
      <call method="setName">
        <argument>scheduled-task:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all scheduled tasks</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\Command\RunSingleScheduledTaskCommand" class="Shopware\Core\Framework\MessageQueue\Command\RunSingleScheduledTaskCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Scheduler\TaskRunner"/>
      <call method="setName">
        <argument>scheduled-task:run-single</argument>
      </call>
      <call method="setDescription">
        <argument>Allows to run one single scheduled task regardless of its schedule.</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\Api\ScheduledTaskController" class="Shopware\Core\Framework\MessageQueue\Api\ScheduledTaskController" public="true">
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Scheduler\TaskScheduler"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\MessageQueue\Subscriber\UpdatePostFinishSubscriber" class="Shopware\Core\Framework\MessageQueue\Subscriber\UpdatePostFinishSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Registry\TaskRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Api\StoreController" class="Shopware\Core\Framework\Store\Api\StoreController" public="true">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreClient"/>
      <argument type="service" id="user.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\AbstractExtensionDataProvider"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Store\Api\FirstRunWizardController" class="Shopware\Core\Framework\Store\Api\FirstRunWizardController" public="true">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\FirstRunWizardService"/>
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="app.repository"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\FirstRunWizardService" class="Shopware\Core\Framework\Store\Services\FirstRunWizardService">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreService"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="shopware.filesystem.public"/>
      <argument type="string">1</argument>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\FirstRunWizardClient"/>
      <argument type="service" id="user_config.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\TrackingEventClient"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\StoreClient" class="Shopware\Core\Framework\Store\Services\StoreClient">
      <argument>%shopware.store_endpoints%</argument>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreService"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Authentication\StoreRequestOptionsProvider"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\ExtensionLoader"/>
      <argument type="service" id="shopware.store_client"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\InstanceService"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\FirstRunWizardClient" class="Shopware\Core\Framework\Store\Services\FirstRunWizardClient">
      <argument type="service" id="shopware.frw_client"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Authentication\FrwRequestOptionsProvider"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\InstanceService"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\StoreService" class="Shopware\Core\Framework\Store\Services\StoreService" lazy="true">
      <argument type="service" id="user.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\TrackingEventClient"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\InstanceService" class="Shopware\Core\Framework\Store\Services\InstanceService">
      <argument>6.5.7.3</argument>
      <argument>%env(INSTANCE_ID)%</argument>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\OpenSSLVerifier" class="Shopware\Core\Framework\Store\Services\OpenSSLVerifier">
      <argument type="collection">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework/Store/public.key</argument>
      </argument>
    </service>
    <service id="Shopware\Core\Framework\Store\Command\StoreDownloadCommand" class="Shopware\Core\Framework\Store\Command\StoreDownloadCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreClient"/>
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManagementService"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginLifecycleService"/>
      <argument type="service" id="user.repository"/>
      <argument>/home/avinash/Desktop/work/Shopware/custom/plugins</argument>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <call method="setName">
        <argument>store:download</argument>
      </call>
      <call method="setDescription">
        <argument>Downloads a plugin from the store</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Store\Command\StoreLoginCommand" class="Shopware\Core\Framework\Store\Command\StoreLoginCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreClient"/>
      <argument type="service" id="user.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <call method="setName">
        <argument>store:login</argument>
      </call>
      <call method="setDescription">
        <argument>Login to the store</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Store\Authentication\LocaleProvider" class="Shopware\Core\Framework\Store\Authentication\LocaleProvider">
      <argument type="service" id="user.repository"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Authentication\StoreRequestOptionsProvider" class="Shopware\Core\Framework\Store\Authentication\StoreRequestOptionsProvider" public="true">
      <argument type="service" id="user.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\InstanceService"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Authentication\LocaleProvider"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Authentication\FrwRequestOptionsProvider" class="Shopware\Core\Framework\Store\Authentication\FrwRequestOptionsProvider">
      <argument type="service" id="Shopware\Core\Framework\Store\Authentication\StoreRequestOptionsProvider"/>
      <argument type="service" id="user_config.repository"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\ExtensionLoader" class="Shopware\Core\Framework\Store\Services\ExtensionLoader">
      <argument type="service" id="theme.repository" on-invalid="null"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\Service\ConfigurationService"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Authentication\LocaleProvider"/>
      <argument type="service" id="Shopware\Core\System\Locale\LanguageLocaleCodeProvider"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\AbstractExtensionDataProvider" class="Shopware\Core\Framework\Store\Services\ExtensionDataProvider">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\ExtensionLoader"/>
      <argument type="service" id="app.repository"/>
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\ExtensionListingLoader"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\ExtensionListingLoader" class="Shopware\Core\Framework\Store\Services\ExtensionListingLoader">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreClient"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Api\ExtensionStoreDataController" class="Shopware\Core\Framework\Store\Api\ExtensionStoreDataController" public="true">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\AbstractExtensionDataProvider"/>
      <argument type="service" id="user.repository"/>
      <argument type="service" id="language.repository"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\AbstractStoreAppLifecycleService" class="Shopware\Core\Framework\Store\Services\StoreAppLifecycleService">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreClient"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLifecycle"/>
      <argument type="service" id="app.repository"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="theme.repository" on-invalid="null"/>
      <argument type="service" id="Shopware\Core\Framework\App\AppStateService"/>
      <argument type="service" id="Shopware\Core\Framework\App\Delta\AppConfirmationDeltaProvider"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\AbstractExtensionStoreLicensesService" class="Shopware\Core\Framework\Store\Services\ExtensionStoreLicensesService">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreClient"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Api\ExtensionStoreLicensesController" class="Shopware\Core\Framework\Store\Api\ExtensionStoreLicensesController" public="true">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\AbstractExtensionStoreLicensesService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\ExtensionDownloader" class="Shopware\Core\Framework\Store\Services\ExtensionDownloader">
      <argument type="service" id="plugin.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreClient"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManagementService"/>
      <argument>/home/avinash/Desktop/work/Shopware/custom/plugins</argument>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\ExtensionLifecycleService" class="Shopware\Core\Framework\Store\Services\ExtensionLifecycleService">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\AbstractStoreAppLifecycleService"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginService"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginLifecycleService"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManagementService"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Api\ExtensionStoreActionsController" class="Shopware\Core\Framework\Store\Api\ExtensionStoreActionsController" public="true">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\ExtensionLifecycleService"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\ExtensionDownloader"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginService"/>
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginManagementService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\StoreClientFactory" class="Shopware\Core\Framework\Store\Services\StoreClientFactory">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="shopware.store_client" class="GuzzleHttp\Client" public="true" lazy="true">
      <argument type="tagged_iterator" tag="shopware.store_client.middleware"/>
      <factory service="Shopware\Core\Framework\Store\Services\StoreClientFactory" method="create"/>
    </service>
    <service id="shopware.frw_client" class="GuzzleHttp\Client" public="true" lazy="true">
      <argument type="tagged_iterator" tag="shopware.frw_client.middleware"/>
      <factory service="Shopware\Core\Framework\Store\Services\StoreClientFactory" method="create"/>
    </service>
    <service id="shopware.store_download_client" class="GuzzleHttp\Client"/>
    <service id="Shopware\Core\Framework\Store\Subscriber\LicenseHostChangedSubscriber" class="Shopware\Core\Framework\Store\Subscriber\LicenseHostChangedSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\VerifyResponseSignatureMiddleware" class="Shopware\Core\Framework\Store\Services\VerifyResponseSignatureMiddleware" public="true">
      <tag name="shopware.store_client.middleware" priority="9999"/>
      <tag name="shopware.frw_client.middleware" priority="9999"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\OpenSSLVerifier"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\StoreSessionExpiredMiddleware" class="Shopware\Core\Framework\Store\Services\StoreSessionExpiredMiddleware" public="true">
      <tag name="shopware.store_client.middleware"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\ShopSecretInvalidMiddleware" class="Shopware\Core\Framework\Store\Services\ShopSecretInvalidMiddleware" public="true">
      <tag name="shopware.store_client.middleware"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Framework\Store\Services\TrackingEventClient" class="Shopware\Core\Framework\Store\Services\TrackingEventClient">
      <argument type="service" id="shopware.store_client"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\InstanceService"/>
    </service>
    <service id="Shopware\Core\Framework\Script\Execution\ScriptLoader" class="Shopware\Core\Framework\Script\Execution\ScriptLoader">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\Persister\ScriptPersister"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/twig</argument>
      <argument>true</argument>
    </service>
    <service id="Shopware\Core\Framework\Script\Execution\ScriptExecutor" class="Shopware\Core\Framework\Script\Execution\ScriptExecutor" public="true">
      <argument type="service" id="Shopware\Core\Framework\Script\Execution\ScriptLoader"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Debugging\ScriptTraces"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="twig.extension.trans"/>
      <argument>6.5.7.3</argument>
    </service>
    <service id="Shopware\Core\Framework\Script\ScriptDefinition" class="Shopware\Core\Framework\Script\ScriptDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Script\Debugging\ScriptTraces" class="Shopware\Core\Framework\Script\Debugging\ScriptTraces">
      <tag name="data_collector"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="Shopware\Core\Framework\Script\Api\ScriptStoreApiRoute" class="Shopware\Core\Framework\Script\Api\ScriptStoreApiRoute" public="true">
      <argument type="service" id="Shopware\Core\Framework\Script\Execution\ScriptExecutor"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Api\ScriptResponseEncoder"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Shopware\Core\Framework\Script\Api\ScriptApiRoute" class="Shopware\Core\Framework\Script\Api\ScriptApiRoute" public="true">
      <argument type="service" id="Shopware\Core\Framework\Script\Execution\ScriptExecutor"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Execution\ScriptLoader"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Api\ScriptResponseEncoder"/>
    </service>
    <service id="Shopware\Core\Framework\Script\Api\ScriptResponseFactoryFacadeHookFactory" class="Shopware\Core\Framework\Script\Api\ScriptResponseFactoryFacadeHookFactory" public="true">
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="service" id="Shopware\Storefront\Controller\ScriptController" on-invalid="null"/>
    </service>
    <service id="Shopware\Core\Framework\Script\Api\ScriptResponseEncoder" class="Shopware\Core\Framework\Script\Api\ScriptResponseEncoder">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Api\StructEncoder"/>
    </service>
    <service id="Shopware\Core\System\Language\LanguageDefinition" class="Shopware\Core\System\Language\LanguageDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Language\SalesChannel\SalesChannelLanguageDefinition" class="Shopware\Core\System\Language\SalesChannel\SalesChannelLanguageDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Language\LanguageValidator" class="Shopware\Core\System\Language\LanguageValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\Language\CachedLanguageLoader" class="Shopware\Core\System\Language\CachedLanguageLoader">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.decorator" id="Shopware\Core\System\Language\LanguageLoader" inner="Shopware\Core\System\Language\CachedLanguageLoader.inner"/>
      <argument type="service" id="Shopware\Core\System\Language\CachedLanguageLoader.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="Shopware\Core\System\Language\TranslationValidator" class="Shopware\Core\System\Language\TranslationValidator">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\System\Language\LanguageExceptionHandler" class="Shopware\Core\System\Language\LanguageExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\System\Language\SalesChannel\CachedLanguageRoute" class="Shopware\Core\System\Language\SalesChannel\CachedLanguageRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\System\Language\SalesChannel\LanguageRoute" inner="Shopware\Core\System\Language\SalesChannel\CachedLanguageRoute.inner"/>
      <argument type="service" id="Shopware\Core\System\Language\SalesChannel\CachedLanguageRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\System\Language\Rule\LanguageRule" class="Shopware\Core\System\Language\Rule\LanguageRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Framework\Update\Api\UpdateController" class="Shopware\Core\Framework\Update\Api\UpdateController" public="true">
      <argument type="service" id="Shopware\Core\Framework\Update\Services\ApiClient"/>
      <argument type="service" id="Shopware\Core\Framework\Update\Checkers\WriteableCheck"/>
      <argument type="service" id="Shopware\Core\Framework\Update\Checkers\LicenseCheck"/>
      <argument type="service" id="Shopware\Core\Framework\Update\Services\ExtensionCompatibility"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\ExtensionLifecycleService"/>
      <argument>6.5.7.3</argument>
      <argument>%env(bool:SHOPWARE_DISABLE_UPDATE_CHECK)%</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Update\Services\ApiClient" class="Shopware\Core\Framework\Update\Services\ApiClient">
      <argument type="service" id="http_client.uri_template"/>
      <argument>true</argument>
      <argument>6.5.7.3</argument>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
    </service>
    <service id="Shopware\Core\Framework\Update\Services\ExtensionCompatibility" class="Shopware\Core\Framework\Update\Services\ExtensionCompatibility">
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreClient"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\AbstractExtensionDataProvider"/>
    </service>
    <service id="Shopware\Core\Framework\Update\Services\Filesystem" class="Shopware\Core\Framework\Update\Services\Filesystem"/>
    <service id="Shopware\Core\Framework\Update\Checkers\WriteableCheck" class="Shopware\Core\Framework\Update\Checkers\WriteableCheck">
      <tag name="shopware.update_api.checker" priority="3"/>
      <argument type="service" id="Shopware\Core\Framework\Update\Services\Filesystem"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
    </service>
    <service id="Shopware\Core\Framework\Update\Checkers\LicenseCheck" class="Shopware\Core\Framework\Update\Checkers\LicenseCheck">
      <tag name="shopware.update_api.checker" priority="4"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\StoreClient"/>
    </service>
    <service id="Shopware\Core\Framework\Update\Services\UpdateHtaccess" class="Shopware\Core\Framework\Update\Services\UpdateHtaccess">
      <tag name="kernel.event_subscriber"/>
      <argument>/home/avinash/Desktop/work/Shopware/public/.htaccess</argument>
    </service>
    <service id="Shopware\Core\Framework\Update\Services\CreateCustomAppsDir" class="Shopware\Core\Framework\Update\Services\CreateCustomAppsDir">
      <tag name="kernel.event_subscriber"/>
      <argument>/home/avinash/Desktop/work/Shopware/custom/apps</argument>
    </service>
    <service id="Shopware\Core\Content\Seo\SeoUrl\SeoUrlDefinition" class="Shopware\Core\Content\Seo\SeoUrl\SeoUrlDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Seo\SeoUrl\SalesChannel\SalesChannelSeoUrlDefinition" class="Shopware\Core\Content\Seo\SeoUrl\SalesChannel\SalesChannelSeoUrlDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition" class="Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Seo\MainCategory\MainCategoryDefinition" class="Shopware\Core\Content\Seo\MainCategory\MainCategoryDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Seo\MainCategory\SalesChannel\SalesChannelMainCategoryDefinition" class="Shopware\Core\Content\Seo\MainCategory\SalesChannel\SalesChannelMainCategoryDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Seo\Entity\Serializer\SeoUrlFieldSerializer" class="Shopware\Core\Content\Seo\Entity\Serializer\SeoUrlFieldSerializer" public="true">
      <tag name="shopware.field_serializer" priority="200"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Write\WriteCommandExtractor"/>
    </service>
    <service id="Shopware\Core\Content\Seo\Entity\Dbal\SeoUrlAssociationFieldResolver" class="Shopware\Core\Content\Seo\Entity\Dbal\SeoUrlAssociationFieldResolver" public="true">
      <tag name="shopware.field_resolver" priority="200"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper"/>
    </service>
    <service id="Shopware\Core\Content\Seo\Entity\Dbal\SeoUrlJoinBuilder" class="Shopware\Core\Content\Seo\Entity\Dbal\SeoUrlJoinBuilder"/>
    <service id="Shopware\Core\Content\Seo\SeoUrlGenerator" class="Shopware\Core\Content\Seo\SeoUrlGenerator">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="shopware.seo_url.twig"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\TwigVariableParserFactory"/>
    </service>
    <service id="Shopware\Core\Content\Seo\SeoUrlPersister" class="Shopware\Core\Content\Seo\SeoUrlPersister">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="seo_url.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Seo\SeoUrlRoute\SeoUrlRouteRegistry" class="Shopware\Core\Content\Seo\SeoUrlRoute\SeoUrlRouteRegistry">
      <argument type="tagged_iterator" tag="shopware.seo_url.route"/>
    </service>
    <service id="Shopware\Core\Content\Seo\EmptyPathInfoResolver" class="Shopware\Core\Content\Seo\EmptyPathInfoResolver" public="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Seo\SeoResolver" inner="Shopware\Core\Content\Seo\EmptyPathInfoResolver.inner"/>
      <argument type="service" id="Shopware\Core\Content\Seo\EmptyPathInfoResolver.inner"/>
    </service>
    <service id="Shopware\Core\Content\Seo\Api\SeoActionController" class="Shopware\Core\Content\Seo\Api\SeoActionController" public="true">
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlGenerator"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlPersister"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlRoute\SeoUrlRouteRegistry"/>
      <argument type="service" id="Shopware\Core\Content\Seo\Validation\SeoUrlValidationFactory"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Seo\Validation\SeoUrlValidationFactory" class="Shopware\Core\Content\Seo\Validation\SeoUrlValidationFactory"/>
    <service id="Shopware\Core\Framework\Adapter\Twig\Extension\SeoUrlFunctionExtension" class="Shopware\Core\Framework\Adapter\Twig\Extension\SeoUrlFunctionExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.extension.routing"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlPlaceholderHandlerInterface"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Extension\CategoryUrlExtension" class="Shopware\Core\Framework\Adapter\Twig\Extension\CategoryUrlExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.extension.routing"/>
      <argument type="service" id="Shopware\Core\Content\Category\Service\CategoryUrlGenerator"/>
    </service>
    <service id="Shopware\Core\Content\Seo\SeoUrlPlaceholderHandlerInterface" class="Shopware\Core\Content\Seo\SeoUrlPlaceholderHandler" public="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Extension\MediaExtension" class="Shopware\Core\Framework\Adapter\Twig\Extension\MediaExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="media.repository"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Extension\RawUrlFunctionExtension" class="Shopware\Core\Framework\Adapter\Twig\Extension\RawUrlFunctionExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Extension\SwSanitizeTwigFilter" class="Shopware\Core\Framework\Adapter\Twig\Extension\SwSanitizeTwigFilter">
      <tag name="twig.extension"/>
      <argument type="service" id="Shopware\Core\Framework\Util\HtmlSanitizer"/>
    </service>
    <service id="Shopware\Core\Content\Seo\HreflangLoaderInterface" class="Shopware\Core\Content\Seo\HreflangLoader">
      <argument type="service" id="router.default"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Seo\SalesChannel\SeoUrlRoute" class="Shopware\Core\Content\Seo\SalesChannel\SeoUrlRoute" public="true">
      <argument type="service" id="sales_channel.seo_url.repository"/>
    </service>
    <service id="Shopware\Core\Content\Seo\SalesChannel\StoreApiSeoResolver" class="Shopware\Core\Content\Seo\SalesChannel\StoreApiSeoResolver">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sales_channel.seo_url.repository"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlRoute\SeoUrlRouteRegistry"/>
    </service>
    <service id="Shopware\Core\Content\Seo\SeoUrlUpdater" class="Shopware\Core\Content\Seo\SeoUrlUpdater">
      <argument type="service" id="language.repository"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlRoute\SeoUrlRouteRegistry"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlGenerator"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlPersister"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="sales_channel.repository"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\Extension\BuildBreadcrumbExtension" class="Shopware\Core\Framework\Adapter\Twig\Extension\BuildBreadcrumbExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="Shopware\Core\Content\Category\Service\CategoryBreadcrumbBuilder"/>
      <argument type="service" id="category.repository"/>
    </service>
    <service id="Shopware\Core\Content\Seo\SeoUrlTwigFactory" class="Shopware\Core\Content\Seo\SeoUrlTwigFactory"/>
    <service id="shopware.seo_url.twig" class="Twig\Environment">
      <argument type="service" id="slugify"/>
      <argument type="tagged_iterator" tag="shopware.seo_url.twig.extension"/>
      <factory service="Shopware\Core\Content\Seo\SeoUrlTwigFactory" method="createTwigEnvironment"/>
    </service>
    <service id="Shopware\Core\Framework\Webhook\WebhookDispatcher" class="Shopware\Core\Framework\Webhook\WebhookDispatcher">
      <argument type="service" id="Shopware\Core\Content\Flow\Dispatching\FlowDispatcher"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="shopware.app_system.guzzle"/>
      <argument>%env(APP_URL)%</argument>
      <argument type="service" id="service_container"/>
      <argument type="service" id="Shopware\Core\Framework\Webhook\Hookable\HookableEventFactory"/>
      <argument>6.5.7.3</argument>
      <argument type="service" id="messenger.bus.default"/>
      <argument>true</argument>
    </service>
    <service id="Shopware\Core\Framework\Webhook\WebhookCacheClearer" class="Shopware\Core\Framework\Webhook\WebhookCacheClearer">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Shopware\Core\Framework\Webhook\WebhookDispatcher"/>
    </service>
    <service id="Shopware\Core\Framework\Webhook\Hookable\HookableEventFactory" class="Shopware\Core\Framework\Webhook\Hookable\HookableEventFactory" lazy="true">
      <argument type="service" id="Shopware\Core\Framework\Webhook\BusinessEventEncoder"/>
      <argument type="service" id="Shopware\Core\Framework\Webhook\Hookable\WriteResultMerger"/>
    </service>
    <service id="Shopware\Core\Framework\Webhook\Hookable\WriteResultMerger" class="Shopware\Core\Framework\Webhook\Hookable\WriteResultMerger">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Webhook\BusinessEventEncoder" class="Shopware\Core\Framework\Webhook\BusinessEventEncoder">
      <argument type="service" id="Shopware\Core\Framework\Api\Serializer\JsonEntityEncoder"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Webhook\WebhookDefinition" class="Shopware\Core\Framework\Webhook\WebhookDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Webhook\EventLog\WebhookEventLogDefinition" class="Shopware\Core\Framework\Webhook\EventLog\WebhookEventLogDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Webhook\Hookable\HookableEventCollector" class="Shopware\Core\Framework\Webhook\Hookable\HookableEventCollector">
      <argument type="service" id="Shopware\Core\Framework\Event\BusinessEventCollector"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Webhook\Handler\WebhookEventMessageHandler" class="Shopware\Core\Framework\Webhook\Handler\WebhookEventMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="shopware.app_system.guzzle"/>
      <argument type="service" id="webhook.repository"/>
      <argument type="service" id="webhook_event_log.repository"/>
    </service>
    <service id="Shopware\Core\Framework\Webhook\Subscriber\RetryWebhookMessageFailedSubscriber" class="Shopware\Core\Framework\Webhook\Subscriber\RetryWebhookMessageFailedSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="webhook.repository"/>
      <argument type="service" id="webhook_event_log.repository"/>
    </service>
    <service id="Shopware\Core\Framework\Webhook\Service\WebhookCleanup" class="Shopware\Core\Framework\Webhook\Service\WebhookCleanup">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Framework\Webhook\ScheduledTask\CleanupWebhookEventLogTask" class="Shopware\Core\Framework\Webhook\ScheduledTask\CleanupWebhookEventLogTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Framework\Webhook\ScheduledTask\CleanupWebhookEventLogTaskHandler" class="Shopware\Core\Framework\Webhook\ScheduledTask\CleanupWebhookEventLogTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Webhook\Service\WebhookCleanup"/>
    </service>
    <service id="Shopware\Core\Framework\RateLimiter\RateLimiter" class="Shopware\Core\Framework\RateLimiter\RateLimiter">
      <call method="registerLimiterFactory">
        <argument>login</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">10 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">15</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">20</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">login</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>guest_login</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">10 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">15</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">20</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">guest_login</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>oauth</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">10 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">15</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">20</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">oauth</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>reset_password</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">3</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">5</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">90 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">reset_password</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>user_recovery</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">3</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">5</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">90 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">user_recovery</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>contact_form</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">3</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">5</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">90 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">contact_form</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>notification</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">10 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">15</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">20</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">notification</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>newsletter_form</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">3</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">5</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">90 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">newsletter_form</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>cart_add_line_item</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">system_config</argument>
              <argument key="reset">1 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="domain">core.cart.lineItemAddLimit</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">cart_add_line_item</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="shopware.increment.gateway.registry" class="Shopware\Core\Framework\Increment\IncrementGatewayRegistry" public="true">
      <argument type="tagged_iterator" tag="shopware.increment.gateway"/>
    </service>
    <service id="shopware.increment.gateway.mysql" class="Shopware\Core\Framework\Increment\MySQLIncrementer">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="shopware.increment.gateway.array" class="Shopware\Core\Framework\Increment\ArrayIncrementer">
      <tag name="kernel.reset" method="resetAll"/>
    </service>
    <service id="Shopware\Core\Framework\Increment\Controller\IncrementApiController" class="Shopware\Core\Framework\Increment\Controller\IncrementApiController" public="true">
      <argument type="service" id="shopware.increment.gateway.registry"/>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationSource_Framework" class="Shopware\Core\Framework\Migration\MigrationSource">
      <tag name="shopware.migration_source"/>
      <argument>Framework</argument>
      <argument type="collection">
        <argument key="/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework/Migration">Shopware\Core\Framework\Migration</argument>
      </argument>
    </service>
    <service id="framework.filesystem.private" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument>plugins/framework</argument>
    </service>
    <service id="framework.filesystem.public" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument>plugins/framework</argument>
    </service>
    <service id="system.filesystem.private" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument>plugins/system</argument>
    </service>
    <service id="system.filesystem.public" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument>plugins/system</argument>
    </service>
    <service id="Shopware\Core\System\SalesChannel\SalesChannelDefinition" class="Shopware\Core\System\SalesChannel\SalesChannelDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelAnalytics\SalesChannelAnalyticsDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelAnalytics\SalesChannelAnalyticsDefinition" public="true">
      <tag name="shopware.entity.definition" entity="sales_channel_analytics"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister" class="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
      <argument>P1D</argument>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Context\CachedBaseContextFactory" class="Shopware\Core\System\SalesChannel\Context\CachedBaseContextFactory">
      <tag name="container.decorator" id="Shopware\Core\System\SalesChannel\Context\BaseContextFactory" inner="Shopware\Core\System\SalesChannel\Context\CachedBaseContextFactory.inner"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedBaseContextFactory.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory" class="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory">
      <tag name="container.decorator" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextFactory" inner="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory.inner"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService" class="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartRuleLoader"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextRestorer" class="Shopware\Core\System\SalesChannel\Context\SalesChannelContextRestorer">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartRuleLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderConverter"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Context\CartRestorer" class="Shopware\Core\System\SalesChannel\Context\CartRestorer">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartRuleLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\SalesChannel\StoreApiInfoController" class="Shopware\Core\System\SalesChannel\SalesChannel\StoreApiInfoController" public="true">
      <argument type="service" id="Shopware\Core\Framework\Api\ApiDefinition\DefinitionService"/>
      <argument type="service" id="twig"/>
      <argument>%shopware.security.csp_templates%</argument>
    </service>
    <service id="Shopware\Core\System\SalesChannel\SalesChannel\SalesChannelContextSwitcher" class="Shopware\Core\System\SalesChannel\SalesChannel\SalesChannelContextSwitcher">
      <argument type="service" id="Shopware\Core\System\SalesChannel\SalesChannel\ContextSwitchRoute"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\SalesChannel\ContextSwitchRoute" class="Shopware\Core\System\SalesChannel\SalesChannel\ContextSwitchRoute" public="true">
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\SalesChannel\ContextRoute" class="Shopware\Core\System\SalesChannel\SalesChannel\ContextRoute" public="true"/>
    <service id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry" public="true">
      <argument>sales_channel_definition.</argument>
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="log_entry">Shopware\Core\Framework\Log\LogEntryDefinition</argument>
        <argument key="acl_role">Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition</argument>
        <argument key="acl_user_role">Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition</argument>
        <argument key="app">Shopware\Core\Framework\App\AppDefinition</argument>
        <argument key="app_translation">Shopware\Core\Framework\App\Aggregate\AppTranslation\AppTranslationDefinition</argument>
        <argument key="app_action_button">Shopware\Core\Framework\App\Aggregate\ActionButton\ActionButtonDefinition</argument>
        <argument key="app_action_button_translation">Shopware\Core\Framework\App\Aggregate\ActionButtonTranslation\ActionButtonTranslationDefinition</argument>
        <argument key="app_template">Shopware\Core\Framework\App\Template\TemplateDefinition</argument>
        <argument key="app_payment_method">Shopware\Core\Framework\App\Aggregate\AppPaymentMethod\AppPaymentMethodDefinition</argument>
        <argument key="app_script_condition">Shopware\Core\Framework\App\Aggregate\AppScriptCondition\AppScriptConditionDefinition</argument>
        <argument key="app_script_condition_translation">Shopware\Core\Framework\App\Aggregate\AppScriptConditionTranslation\AppScriptConditionTranslationDefinition</argument>
        <argument key="app_cms_block">Shopware\Core\Framework\App\Aggregate\CmsBlock\AppCmsBlockDefinition</argument>
        <argument key="app_cms_block_translation">Shopware\Core\Framework\App\Aggregate\CmsBlockTranslation\AppCmsBlockTranslationDefinition</argument>
        <argument key="app_flow_action">Shopware\Core\Framework\App\Aggregate\FlowAction\AppFlowActionDefinition</argument>
        <argument key="app_flow_action_translation">Shopware\Core\Framework\App\Aggregate\FlowActionTranslation\AppFlowActionTranslationDefinition</argument>
        <argument key="app_flow_event">Shopware\Core\Framework\App\Aggregate\FlowEvent\AppFlowEventDefinition</argument>
        <argument key="app_shipping_method">Shopware\Core\Framework\App\Aggregate\AppShippingMethod\AppShippingMethodDefinition</argument>
        <argument key="custom_field">Shopware\Core\System\CustomField\CustomFieldDefinition</argument>
        <argument key="custom_field_set">Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition</argument>
        <argument key="custom_field_set_relation">Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition</argument>
        <argument key="version">Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition</argument>
        <argument key="version_commit">Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition</argument>
        <argument key="version_commit_data">Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition</argument>
        <argument key="plugin">Shopware\Core\Framework\Plugin\PluginDefinition</argument>
        <argument key="plugin_translation">Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition</argument>
        <argument key="scheduled_task">Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition</argument>
        <argument key="script">Shopware\Core\Framework\Script\ScriptDefinition</argument>
        <argument key="language">Shopware\Core\System\Language\SalesChannel\SalesChannelLanguageDefinition</argument>
        <argument key="seo_url">Shopware\Core\Content\Seo\SeoUrl\SalesChannel\SalesChannelSeoUrlDefinition</argument>
        <argument key="seo_url_template">Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition</argument>
        <argument key="main_category">Shopware\Core\Content\Seo\MainCategory\SalesChannel\SalesChannelMainCategoryDefinition</argument>
        <argument key="webhook">Shopware\Core\Framework\Webhook\WebhookDefinition</argument>
        <argument key="webhook_event_log">Shopware\Core\Framework\Webhook\EventLog\WebhookEventLogDefinition</argument>
        <argument key="sales_channel">Shopware\Core\System\SalesChannel\SalesChannelDefinition</argument>
        <argument key="sales_channel_translation">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition</argument>
        <argument key="sales_channel_country">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition</argument>
        <argument key="sales_channel_currency">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition</argument>
        <argument key="sales_channel_domain">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition</argument>
        <argument key="sales_channel_language">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition</argument>
        <argument key="sales_channel_payment_method">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition</argument>
        <argument key="sales_channel_shipping_method">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition</argument>
        <argument key="sales_channel_type">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition</argument>
        <argument key="sales_channel_type_translation">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition</argument>
        <argument key="sales_channel_analytics">Shopware\Core\System\SalesChannel\Aggregate\SalesChannelAnalytics\SalesChannelAnalyticsDefinition</argument>
        <argument key="country">Shopware\Core\System\Country\SalesChannel\SalesChannelCountryDefinition</argument>
        <argument key="country_state">Shopware\Core\System\Country\Aggregate\CountryState\SalesChannel\SalesChannelCountryStateDefinition</argument>
        <argument key="country_state_translation">Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition</argument>
        <argument key="country_translation">Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition</argument>
        <argument key="currency">Shopware\Core\System\Currency\SalesChannel\SalesChannelCurrencyDefinition</argument>
        <argument key="currency_country_rounding">Shopware\Core\System\Currency\Aggregate\CurrencyCountryRounding\CurrencyCountryRoundingDefinition</argument>
        <argument key="currency_translation">Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition</argument>
        <argument key="custom_entity">Shopware\Core\System\CustomEntity\CustomEntityDefinition</argument>
        <argument key="locale">Shopware\Core\System\Locale\LocaleDefinition</argument>
        <argument key="locale_translation">Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition</argument>
        <argument key="snippet_set">Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition</argument>
        <argument key="snippet">Shopware\Core\System\Snippet\SnippetDefinition</argument>
        <argument key="salutation">Shopware\Core\System\Salutation\SalesChannel\SalesChannelSalutationDefinition</argument>
        <argument key="salutation_translation">Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition</argument>
        <argument key="tax">Shopware\Core\System\Tax\TaxDefinition</argument>
        <argument key="tax_rule">Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition</argument>
        <argument key="tax_rule_type">Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition</argument>
        <argument key="tax_rule_type_translation">Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition</argument>
        <argument key="tax_provider">Shopware\Core\System\TaxProvider\TaxProviderDefinition</argument>
        <argument key="tax_provider_translation">Shopware\Core\System\TaxProvider\Aggregate\TaxProviderTranslation\TaxProviderTranslationDefinition</argument>
        <argument key="unit">Shopware\Core\System\Unit\UnitDefinition</argument>
        <argument key="unit_translation">Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition</argument>
        <argument key="user">Shopware\Core\System\User\UserDefinition</argument>
        <argument key="user_config">Shopware\Core\System\User\Aggregate\UserConfig\UserConfigDefinition</argument>
        <argument key="user_access_key">Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition</argument>
        <argument key="user_recovery">Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition</argument>
        <argument key="integration">Shopware\Core\System\Integration\IntegrationDefinition</argument>
        <argument key="integration_role">Shopware\Core\System\Integration\Aggregate\IntegrationRole\IntegrationRoleDefinition</argument>
        <argument key="state_machine">Shopware\Core\System\StateMachine\StateMachineDefinition</argument>
        <argument key="state_machine_translation">Shopware\Core\System\StateMachine\StateMachineTranslationDefinition</argument>
        <argument key="state_machine_state">Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition</argument>
        <argument key="state_machine_state_translation">Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition</argument>
        <argument key="state_machine_transition">Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition</argument>
        <argument key="state_machine_history">Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition</argument>
        <argument key="system_config">Shopware\Core\System\SystemConfig\SystemConfigDefinition</argument>
        <argument key="number_range">Shopware\Core\System\NumberRange\NumberRangeDefinition</argument>
        <argument key="number_range_sales_channel">Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition</argument>
        <argument key="number_range_state">Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition</argument>
        <argument key="number_range_type">Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition</argument>
        <argument key="number_range_type_translation">Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition</argument>
        <argument key="number_range_translation">Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition</argument>
        <argument key="tag">Shopware\Core\System\Tag\TagDefinition</argument>
        <argument key="category">Shopware\Core\Content\Category\SalesChannel\SalesChannelCategoryDefinition</argument>
        <argument key="category_translation">Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition</argument>
        <argument key="category_tag">Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition</argument>
        <argument key="media">Shopware\Core\Content\Media\MediaDefinition</argument>
        <argument key="media_default_folder">Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition</argument>
        <argument key="media_thumbnail">Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition</argument>
        <argument key="media_translation">Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition</argument>
        <argument key="media_folder">Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition</argument>
        <argument key="media_thumbnail_size">Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition</argument>
        <argument key="media_folder_configuration">Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition</argument>
        <argument key="media_folder_configuration_media_thumbnail_size">Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition</argument>
        <argument key="media_tag">Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition</argument>
        <argument key="product">Shopware\Core\Content\Product\SalesChannel\SalesChannelProductDefinition</argument>
        <argument key="product_stream_mapping">Shopware\Core\Content\Product\Aggregate\ProductStreamMapping\ProductStreamMappingDefinition</argument>
        <argument key="product_category">Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition</argument>
        <argument key="product_custom_field_set">Shopware\Core\Content\Product\Aggregate\ProductCustomFieldSet\ProductCustomFieldSetDefinition</argument>
        <argument key="product_tag">Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition</argument>
        <argument key="product_configurator_setting">Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition</argument>
        <argument key="product_price">Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition</argument>
        <argument key="product_property">Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition</argument>
        <argument key="product_search_keyword">Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition</argument>
        <argument key="product_keyword_dictionary">Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition</argument>
        <argument key="product_review">Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition</argument>
        <argument key="product_manufacturer">Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition</argument>
        <argument key="product_manufacturer_translation">Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition</argument>
        <argument key="product_media">Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition</argument>
        <argument key="product_download">Shopware\Core\Content\Product\Aggregate\ProductDownload\ProductDownloadDefinition</argument>
        <argument key="product_translation">Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition</argument>
        <argument key="product_option">Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition</argument>
        <argument key="product_category_tree">Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition</argument>
        <argument key="product_cross_selling">Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition</argument>
        <argument key="product_cross_selling_translation">Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition</argument>
        <argument key="product_cross_selling_assigned_products">Shopware\Core\Content\Product\Aggregate\ProductCrossSellingAssignedProducts\ProductCrossSellingAssignedProductsDefinition</argument>
        <argument key="product_feature_set">Shopware\Core\Content\Product\Aggregate\ProductFeatureSet\ProductFeatureSetDefinition</argument>
        <argument key="product_feature_set_translation">Shopware\Core\Content\Product\Aggregate\ProductFeatureSetTranslation\ProductFeatureSetTranslationDefinition</argument>
        <argument key="product_sorting">Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingDefinition</argument>
        <argument key="product_sorting_translation">Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingTranslationDefinition</argument>
        <argument key="product_search_config">Shopware\Core\Content\Product\Aggregate\ProductSearchConfig\ProductSearchConfigDefinition</argument>
        <argument key="product_search_config_field">Shopware\Core\Content\Product\Aggregate\ProductSearchConfigField\ProductSearchConfigFieldDefinition</argument>
        <argument key="product_visibility">Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition</argument>
        <argument key="delivery_time">Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition</argument>
        <argument key="newsletter_recipient">Shopware\Core\Content\Newsletter\SalesChannel\SalesChannelNewsletterRecipientDefinition</argument>
        <argument key="newsletter_recipient_tag">Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition</argument>
        <argument key="rule">Shopware\Core\Content\Rule\RuleDefinition</argument>
        <argument key="rule_condition">Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition</argument>
        <argument key="rule_tag">Shopware\Core\Content\Rule\Aggregate\RuleTag\RuleTagDefinition</argument>
        <argument key="product_stream">Shopware\Core\Content\ProductStream\ProductStreamDefinition</argument>
        <argument key="product_stream_translation">Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition</argument>
        <argument key="product_stream_filter">Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition</argument>
        <argument key="product_export">Shopware\Core\Content\ProductExport\ProductExportDefinition</argument>
        <argument key="property_group">Shopware\Core\Content\Property\PropertyGroupDefinition</argument>
        <argument key="property_group_option">Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition</argument>
        <argument key="property_group_option_translation">Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition</argument>
        <argument key="property_group_translation">Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition</argument>
        <argument key="cms_page">Shopware\Core\Content\Cms\CmsPageDefinition</argument>
        <argument key="cms_page_translation">Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition</argument>
        <argument key="cms_section">Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition</argument>
        <argument key="cms_block">Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition</argument>
        <argument key="cms_slot">Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition</argument>
        <argument key="cms_slot_translation">Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition</argument>
        <argument key="mail_template">Shopware\Core\Content\MailTemplate\MailTemplateDefinition</argument>
        <argument key="mail_template_translation">Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition</argument>
        <argument key="mail_template_type">Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition</argument>
        <argument key="mail_template_type_translation">Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition</argument>
        <argument key="mail_template_media">Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition</argument>
        <argument key="mail_header_footer">Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition</argument>
        <argument key="mail_header_footer_translation">Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition</argument>
        <argument key="delivery_time_translation">Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition</argument>
        <argument key="import_export_profile">Shopware\Core\Content\ImportExport\ImportExportProfileDefinition</argument>
        <argument key="import_export_log">Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition</argument>
        <argument key="import_export_file">Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition</argument>
        <argument key="import_export_profile_translation">Shopware\Core\Content\ImportExport\ImportExportProfileTranslationDefinition</argument>
        <argument key="landing_page">Shopware\Core\Content\LandingPage\SalesChannel\SalesChannelLandingPageDefinition</argument>
        <argument key="landing_page_translation">Shopware\Core\Content\LandingPage\Aggregate\LandingPageTranslation\LandingPageTranslationDefinition</argument>
        <argument key="landing_page_tag">Shopware\Core\Content\LandingPage\Aggregate\LandingPageTag\LandingPageTagDefinition</argument>
        <argument key="landing_page_sales_channel">Shopware\Core\Content\LandingPage\Aggregate\LandingPageSalesChannel\LandingPageSalesChannelDefinition</argument>
        <argument key="flow">Shopware\Core\Content\Flow\FlowDefinition</argument>
        <argument key="flow_sequence">Shopware\Core\Content\Flow\Aggregate\FlowSequence\FlowSequenceDefinition</argument>
        <argument key="flow_template">Shopware\Core\Content\Flow\Aggregate\FlowTemplate\FlowTemplateDefinition</argument>
        <argument key="customer">Shopware\Core\Checkout\Customer\CustomerDefinition</argument>
        <argument key="customer_group_translation">Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition</argument>
        <argument key="customer_address">Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition</argument>
        <argument key="customer_recovery">Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition</argument>
        <argument key="customer_group">Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition</argument>
        <argument key="customer_group_registration_sales_channels">Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupRegistrationSalesChannel\CustomerGroupRegistrationSalesChannelDefinition</argument>
        <argument key="customer_tag">Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition</argument>
        <argument key="customer_wishlist">Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlist\CustomerWishlistDefinition</argument>
        <argument key="customer_wishlist_product">Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlistProduct\CustomerWishlistProductDefinition</argument>
        <argument key="document">Shopware\Core\Checkout\Document\DocumentDefinition</argument>
        <argument key="document_type">Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition</argument>
        <argument key="document_type_translation">Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition</argument>
        <argument key="document_base_config">Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition</argument>
        <argument key="document_base_config_sales_channel">Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition</argument>
        <argument key="order">Shopware\Core\Checkout\Order\OrderDefinition</argument>
        <argument key="order_address">Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition</argument>
        <argument key="order_customer">Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition</argument>
        <argument key="order_delivery">Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition</argument>
        <argument key="order_delivery_position">Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition</argument>
        <argument key="order_line_item">Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition</argument>
        <argument key="order_line_item_download">Shopware\Core\Checkout\Order\Aggregate\OrderLineItemDownload\OrderLineItemDownloadDefinition</argument>
        <argument key="order_tag">Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition</argument>
        <argument key="order_transaction">Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition</argument>
        <argument key="order_transaction_capture">Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCapture\OrderTransactionCaptureDefinition</argument>
        <argument key="order_transaction_capture_refund">Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundDefinition</argument>
        <argument key="order_transaction_capture_refund_position">Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefundPosition\OrderTransactionCaptureRefundPositionDefinition</argument>
        <argument key="payment_method">Shopware\Core\Checkout\Payment\SalesChannel\SalesChannelPaymentMethodDefinition</argument>
        <argument key="payment_method_translation">Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition</argument>
        <argument key="promotion">Shopware\Core\Checkout\Promotion\PromotionDefinition</argument>
        <argument key="promotion_sales_channel">Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition</argument>
        <argument key="promotion_individual_code">Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition</argument>
        <argument key="promotion_discount">Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition</argument>
        <argument key="promotion_discount_rule">Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition</argument>
        <argument key="promotion_setgroup">Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition</argument>
        <argument key="promotion_setgroup_rule">Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition</argument>
        <argument key="promotion_order_rule">Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition</argument>
        <argument key="promotion_persona_customer">Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition</argument>
        <argument key="promotion_persona_rule">Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition</argument>
        <argument key="promotion_cart_rule">Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition</argument>
        <argument key="promotion_translation">Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition</argument>
        <argument key="promotion_discount_prices">Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition</argument>
        <argument key="shipping_method">Shopware\Core\Checkout\Shipping\SalesChannel\SalesChannelShippingMethodDefinition</argument>
        <argument key="shipping_method_tag">Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition</argument>
        <argument key="shipping_method_price">Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition</argument>
        <argument key="shipping_method_translation">Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition</argument>
        <argument key="app_administration_snippet">Shopware\Administration\Snippet\AppAdministrationSnippetDefinition</argument>
        <argument key="notification">Shopware\Administration\Notification\NotificationDefinition</argument>
        <argument key="theme">Shopware\Storefront\Theme\ThemeDefinition</argument>
        <argument key="theme_translation">Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition</argument>
        <argument key="theme_sales_channel">Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition</argument>
        <argument key="theme_media">Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition</argument>
        <argument key="theme_child">Shopware\Storefront\Theme\Aggregate\ThemeChildDefinition</argument>
      </argument>
      <argument type="collection">
        <argument key="language">sales_channel.language.repository</argument>
        <argument key="seo_url">sales_channel.seo_url.repository</argument>
        <argument key="main_category">sales_channel.main_category.repository</argument>
        <argument key="country">sales_channel.country.repository</argument>
        <argument key="country_state">sales_channel.country_state.repository</argument>
        <argument key="currency">sales_channel.currency.repository</argument>
        <argument key="salutation">sales_channel.salutation.repository</argument>
        <argument key="category">sales_channel.category.repository</argument>
        <argument key="product">sales_channel.product.repository</argument>
        <argument key="newsletter_recipient">sales_channel.newsletter_recipient.repository</argument>
        <argument key="landing_page">sales_channel.landing_page.repository</argument>
        <argument key="payment_method">sales_channel.payment_method.repository</argument>
        <argument key="shipping_method">sales_channel.shipping_method.repository</argument>
      </argument>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Entity\DefinitionRegistryChain" class="Shopware\Core\System\SalesChannel\Entity\DefinitionRegistryChain">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextValueResolver" class="Shopware\Core\System\SalesChannel\Context\SalesChannelContextValueResolver">
      <tag name="controller.argument_value_resolver" priority="1000"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\SalesChannelExceptionHandler" class="Shopware\Core\System\SalesChannel\SalesChannelExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Api\StoreApiResponseListener" class="Shopware\Core\System\SalesChannel\Api\StoreApiResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Api\StructEncoder"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Api\StructEncoder" class="Shopware\Core\System\SalesChannel\Api\StructEncoder">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\DefinitionRegistryChain"/>
      <argument type="service" id="serializer"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\DataAbstractionLayer\SalesChannelIndexer" class="Shopware\Core\System\SalesChannel\DataAbstractionLayer\SalesChannelIndexer">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\ManyToManyIdFieldUpdater"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Context\Cleanup\CleanupSalesChannelContextTask" class="Shopware\Core\System\SalesChannel\Context\Cleanup\CleanupSalesChannelContextTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Context\Cleanup\CleanupSalesChannelContextTaskHandler" class="Shopware\Core\System\SalesChannel\Context\Cleanup\CleanupSalesChannelContextTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument>120</argument>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Validation\SalesChannelValidator" class="Shopware\Core\System\SalesChannel\Validation\SalesChannelValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Subscriber\SalesChannelTypeValidator" class="Shopware\Core\System\SalesChannel\Subscriber\SalesChannelTypeValidator">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\StoreApiCustomFieldMapper" class="Shopware\Core\System\SalesChannel\StoreApiCustomFieldMapper">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\Country\CountryDefinition" class="Shopware\Core\System\Country\CountryDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Country\SalesChannel\SalesChannelCountryDefinition" class="Shopware\Core\System\Country\SalesChannel\SalesChannelCountryDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Country\Aggregate\CountryState\CountryStateDefinition" class="Shopware\Core\System\Country\Aggregate\CountryState\CountryStateDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Country\Aggregate\CountryState\SalesChannel\SalesChannelCountryStateDefinition" class="Shopware\Core\System\Country\Aggregate\CountryState\SalesChannel\SalesChannelCountryStateDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition" class="Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition" class="Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Country\SalesChannel\CachedCountryRoute" class="Shopware\Core\System\Country\SalesChannel\CachedCountryRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\System\Country\SalesChannel\CountryRoute" inner="Shopware\Core\System\Country\SalesChannel\CachedCountryRoute.inner"/>
      <argument type="service" id="Shopware\Core\System\Country\SalesChannel\CachedCountryRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\System\Country\SalesChannel\CachedCountryStateRoute" class="Shopware\Core\System\Country\SalesChannel\CachedCountryStateRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\System\Country\SalesChannel\CountryStateRoute" inner="Shopware\Core\System\Country\SalesChannel\CachedCountryStateRoute.inner"/>
      <argument type="service" id="Shopware\Core\System\Country\SalesChannel\CachedCountryStateRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\System\Currency\CurrencyDefinition" class="Shopware\Core\System\Currency\CurrencyDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Currency\Aggregate\CurrencyCountryRounding\CurrencyCountryRoundingDefinition" class="Shopware\Core\System\Currency\Aggregate\CurrencyCountryRounding\CurrencyCountryRoundingDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Currency\SalesChannel\SalesChannelCurrencyDefinition" class="Shopware\Core\System\Currency\SalesChannel\SalesChannelCurrencyDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition" class="Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Currency\CurrencyLoadSubscriber" class="Shopware\Core\System\Currency\CurrencyLoadSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\System\Currency\CurrencyValidator" class="Shopware\Core\System\Currency\CurrencyValidator">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\System\Currency\Rule\CurrencyRule" class="Shopware\Core\System\Currency\Rule\CurrencyRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\System\Currency\CurrencyFormatter" class="Shopware\Core\System\Currency\CurrencyFormatter" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Shopware\Core\System\Locale\LanguageLocaleCodeProvider"/>
    </service>
    <service id="Shopware\Core\System\Currency\SalesChannel\CachedCurrencyRoute" class="Shopware\Core\System\Currency\SalesChannel\CachedCurrencyRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\System\Currency\SalesChannel\CurrencyRoute" inner="Shopware\Core\System\Currency\SalesChannel\CachedCurrencyRoute.inner"/>
      <argument type="service" id="Shopware\Core\System\Currency\SalesChannel\CachedCurrencyRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\System\CustomEntity\CustomEntityRegistrar" class="Shopware\Core\System\CustomEntity\CustomEntityRegistrar" public="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Core\System\CustomEntity\Schema\CustomEntityPersister" class="Shopware\Core\System\CustomEntity\Schema\CustomEntityPersister">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="Shopware\Core\System\CustomEntity\CustomEntityDefinition" class="Shopware\Core\System\CustomEntity\CustomEntityDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\CustomEntity\Schema\SchemaUpdater" class="Shopware\Core\System\CustomEntity\Schema\SchemaUpdater"/>
    <service id="Shopware\Core\System\CustomEntity\Schema\CustomEntitySchemaUpdater" class="Shopware\Core\System\CustomEntity\Schema\CustomEntitySchemaUpdater" public="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="lock.default.factory"/>
      <argument type="service" id="Shopware\Core\System\CustomEntity\Schema\SchemaUpdater"/>
    </service>
    <service id="Shopware\Core\System\CustomEntity\Api\CustomEntityApiController" class="Shopware\Core\System\CustomEntity\Api\CustomEntityApiController" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\EntityProtection\EntityProtectionValidator"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Acl\AclCriteriaValidator"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\System\CustomEntity\Xml\CustomEntityXmlSchemaValidator" class="Shopware\Core\System\CustomEntity\Xml\CustomEntityXmlSchemaValidator"/>
    <service id="Shopware\Core\System\CustomEntity\Xml\Config\AdminUi\AdminUiXmlSchemaValidator" class="Shopware\Core\System\CustomEntity\Xml\Config\AdminUi\AdminUiXmlSchemaValidator"/>
    <service id="Shopware\Core\System\Locale\LocaleDefinition" class="Shopware\Core\System\Locale\LocaleDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition" class="Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Locale\LanguageLocaleCodeProvider" class="Shopware\Core\System\Locale\LanguageLocaleCodeProvider">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Shopware\Core\System\Language\CachedLanguageLoader"/>
    </service>
    <service id="Shopware\Core\System\UsageData\Api\ConsentController" class="Shopware\Core\System\UsageData\Api\ConsentController" public="true">
      <argument type="service" id="Shopware\Core\System\UsageData\Consent\ConsentService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\System\UsageData\Consent\ConsentService" class="Shopware\Core\System\UsageData\Consent\ConsentService">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="system_config.repository"/>
      <argument type="service" id="user_config.repository"/>
      <argument type="service" id="integration.repository"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Consent\ConsentReporter"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\ShopIdProvider"/>
      <argument type="service" id="clock"/>
      <argument>%env(APP_URL)%</argument>
    </service>
    <service id="Shopware\Core\System\UsageData\Subscriber\UsageDataApprovalSubscriber" class="Shopware\Core\System\UsageData\Subscriber\UsageDataApprovalSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\EntityDispatchService"/>
    </service>
    <service id="Shopware\Core\System\UsageData\Subscriber\EntityDeleteSubscriber" class="Shopware\Core\System\UsageData\Subscriber\EntityDeleteSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\EntityDefinitionService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="clock"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Consent\ConsentService"/>
    </service>
    <service id="Shopware\Core\System\UsageData\EntitySync\IterateEntityMessageHandler" class="Shopware\Core\System\UsageData\EntitySync\IterateEntityMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="Shopware\Core\System\UsageData\EntitySync\IterateEntitiesQueryBuilder"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Consent\ConsentService"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\EntityDefinitionService"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Shopware\Core\System\UsageData\EntitySync\DispatchEntityMessageHandler" class="Shopware\Core\System\UsageData\EntitySync\DispatchEntityMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\EntityDefinitionService"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\ManyToManyAssociationService"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\UsageDataAllowListService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\System\UsageData\EntitySync\EntityDispatcher"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Consent\ConsentService"/>
    </service>
    <service id="Shopware\Core\System\UsageData\EntitySync\CollectEntityDataMessageHandler" class="Shopware\Core\System\UsageData\EntitySync\CollectEntityDataMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\EntityDispatchService"/>
    </service>
    <service id="Shopware\Core\System\UsageData\EntitySync\EntityDispatcher" class="Shopware\Core\System\UsageData\EntitySync\EntityDispatcher">
      <argument type="service" id="shopware.usage_data.gateway.client"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\ShopIdProvider"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\InstanceService"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="clock"/>
      <argument>dev</argument>
    </service>
    <service id="Shopware\Core\System\UsageData\EntitySync\IterateEntitiesQueryBuilder" class="Shopware\Core\System\UsageData\EntitySync\IterateEntitiesQueryBuilder">
      <argument type="service" id="Shopware\Core\System\UsageData\Services\EntityDefinitionService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument>50</argument>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Shopware\Core\System\UsageData\Services\EntityDispatchService" class="Shopware\Core\System\UsageData\Services\EntityDispatchService">
      <argument type="service" id="Shopware\Core\System\UsageData\Services\EntityDefinitionService"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Storage\AbstractKeyValueStorage"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="clock"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Consent\ConsentService"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\GatewayStatusService"/>
    </service>
    <service id="Shopware\Core\System\UsageData\Services\ManyToManyAssociationService" class="Shopware\Core\System\UsageData\Services\ManyToManyAssociationService">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\UsageData\Services\EntityDefinitionService" class="Shopware\Core\System\UsageData\Services\EntityDefinitionService">
      <argument type="tagged_iterator" tag="shopware.entity.definition"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\UsageDataAllowListService"/>
    </service>
    <service id="Shopware\Core\System\UsageData\Consent\ConsentReporter" class="Shopware\Core\System\UsageData\Consent\ConsentReporter">
      <argument type="service" id="shopware.usage_data.gateway.client"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\ShopIdProvider"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\InstanceService"/>
    </service>
    <service id="Shopware\Core\System\UsageData\Services\UsageDataAllowListService" class="Shopware\Core\System\UsageData\Services\UsageDataAllowListService"/>
    <service id="Shopware\Core\System\UsageData\Services\IntegrationChangedService" class="Shopware\Core\System\UsageData\Services\IntegrationChangedService" public="true">
      <argument type="service" id="integration.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Consent\ConsentService"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\ShopIdProvider"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\EntityDispatchService"/>
    </service>
    <service id="Shopware\Core\System\UsageData\Services\ShopIdProvider" class="Shopware\Core\System\UsageData\Services\ShopIdProvider">
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
    </service>
    <service id="Shopware\Core\System\UsageData\Services\GatewayStatusService" class="Shopware\Core\System\UsageData\Services\GatewayStatusService">
      <argument type="service" id="Shopware\Core\System\UsageData\Client\GatewayClient"/>
    </service>
    <service id="Shopware\Core\System\UsageData\Client\GatewayClient" class="Shopware\Core\System\UsageData\Client\GatewayClient">
      <argument type="service" id="shopware.usage_data.gateway.client"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\ShopIdProvider"/>
    </service>
    <service id="Shopware\Core\System\UsageData\ScheduledTask\CollectEntityDataTask" class="Shopware\Core\System\UsageData\ScheduledTask\CollectEntityDataTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\System\UsageData\ScheduledTask\CollectEntityDataTaskHandler" class="Shopware\Core\System\UsageData\ScheduledTask\CollectEntityDataTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\EntityDispatchService"/>
    </service>
    <service id="Shopware\Core\System\UsageData\ScheduledTask\CheckIntegrationChangedTask" class="Shopware\Core\System\UsageData\ScheduledTask\CheckIntegrationChangedTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\System\UsageData\ScheduledTask\CheckIntegrationChangedTaskHandler" class="Shopware\Core\System\UsageData\ScheduledTask\CheckIntegrationChangedTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Shopware\Core\System\UsageData\Services\IntegrationChangedService"/>
    </service>
    <service id="shopware.usage_data.gateway.client" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <argument type="collection">
        <argument key="base_uri">https://data.shopware.io</argument>
      </argument>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition" class="Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Snippet\SnippetDefinition" class="Shopware\Core\System\Snippet\SnippetDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Snippet\SnippetValidatorInterface" class="Shopware\Core\System\Snippet\SnippetValidator">
      <argument type="service" id="Shopware\Core\System\Snippet\Files\SnippetFileCollection"/>
      <argument type="service" id="Shopware\Core\System\Snippet\SnippetFileHandler"/>
      <argument>/home/avinash/Desktop/work/Shopware/</argument>
    </service>
    <service id="Shopware\Core\System\Snippet\SnippetFixer" class="Shopware\Core\System\Snippet\SnippetFixer">
      <argument type="service" id="Shopware\Core\System\Snippet\SnippetFileHandler"/>
    </service>
    <service id="Shopware\Core\System\Snippet\Command\ValidateSnippetsCommand" class="Shopware\Core\System\Snippet\Command\ValidateSnippetsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\System\Snippet\SnippetValidatorInterface"/>
      <argument type="service" id="Shopware\Core\System\Snippet\SnippetFixer"/>
      <call method="setName">
        <argument>snippets:validate</argument>
      </call>
      <call method="setDescription">
        <argument>Validates snippets</argument>
      </call>
    </service>
    <service id="Shopware\Core\System\Snippet\SnippetFileHandler" class="Shopware\Core\System\Snippet\SnippetFileHandler"/>
    <service id="Shopware\Core\System\Snippet\Subscriber\CustomFieldSubscriber" class="Shopware\Core\System\Snippet\Subscriber\CustomFieldSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\Salutation\SalutationDefinition" class="Shopware\Core\System\Salutation\SalutationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Salutation\SalesChannel\SalesChannelSalutationDefinition" class="Shopware\Core\System\Salutation\SalesChannel\SalesChannelSalutationDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition" class="Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute" class="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\System\Salutation\SalesChannel\SalutationRoute" inner="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute.inner"/>
      <argument type="service" id="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\System\Tax\TaxDefinition" class="Shopware\Core\System\Tax\TaxDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition" class="Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition" class="Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition" class="Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Tax\TaxRuleType\EntireCountryRuleTypeFilter" class="Shopware\Core\System\Tax\TaxRuleType\EntireCountryRuleTypeFilter">
      <tag name="tax.rule_type_filter"/>
    </service>
    <service id="Shopware\Core\System\Tax\TaxRuleType\IndividualStatesRuleTypeFilter" class="Shopware\Core\System\Tax\TaxRuleType\IndividualStatesRuleTypeFilter">
      <tag name="tax.rule_type_filter"/>
    </service>
    <service id="Shopware\Core\System\Tax\TaxRuleType\ZipCodeRangeRuleTypeFilter" class="Shopware\Core\System\Tax\TaxRuleType\ZipCodeRangeRuleTypeFilter">
      <tag name="tax.rule_type_filter"/>
    </service>
    <service id="Shopware\Core\System\Tax\TaxRuleType\ZipCodeRuleTypeFilter" class="Shopware\Core\System\Tax\TaxRuleType\ZipCodeRuleTypeFilter">
      <tag name="tax.rule_type_filter"/>
    </service>
    <service id="Shopware\Core\System\TaxProvider\TaxProviderDefinition" class="Shopware\Core\System\TaxProvider\TaxProviderDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\TaxProvider\Aggregate\TaxProviderTranslation\TaxProviderTranslationDefinition" class="Shopware\Core\System\TaxProvider\Aggregate\TaxProviderTranslation\TaxProviderTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Unit\UnitDefinition" class="Shopware\Core\System\Unit\UnitDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition" class="Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\User\UserDefinition" class="Shopware\Core\System\User\UserDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\User\Aggregate\UserConfig\UserConfigDefinition" class="Shopware\Core\System\User\Aggregate\UserConfig\UserConfigDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition" class="Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition" class="Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\User\Recovery\UserRecoveryService" class="Shopware\Core\System\User\Recovery\UserRecoveryService">
      <argument type="service" id="user_recovery.repository"/>
      <argument type="service" id="user.repository"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <argument type="service" id="sales_channel.repository"/>
    </service>
    <service id="Shopware\Core\System\User\Api\UserRecoveryController" class="Shopware\Core\System\User\Api\UserRecoveryController" public="true">
      <argument type="service" id="Shopware\Core\System\User\Recovery\UserRecoveryService"/>
      <argument type="service" id="shopware.rate_limiter"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\System\User\Service\UserValidationService" class="Shopware\Core\System\User\Service\UserValidationService">
      <argument type="service" id="user.repository"/>
    </service>
    <service id="Shopware\Core\System\User\Api\UserValidationController" class="Shopware\Core\System\User\Api\UserValidationController" public="true">
      <argument type="service" id="Shopware\Core\System\User\Service\UserValidationService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Integration\IntegrationDefinition" class="Shopware\Core\System\Integration\IntegrationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Integration\Aggregate\IntegrationRole\IntegrationRoleDefinition" class="Shopware\Core\System\Integration\Aggregate\IntegrationRole\IntegrationRoleDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\StateMachine\Api\StateMachineActionController" class="Shopware\Core\System\StateMachine\Api\StateMachineActionController" public="true">
      <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\System\StateMachine\StateMachineRegistry" class="Shopware\Core\System\StateMachine\StateMachineRegistry">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="state_machine.repository"/>
      <argument type="service" id="state_machine_state.repository"/>
      <argument type="service" id="state_machine_history.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\System\StateMachine\Command\WorkflowDumpCommand" class="Shopware\Core\System\StateMachine\Command\WorkflowDumpCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineRegistry"/>
      <call method="setName">
        <argument>state-machine:dump</argument>
      </call>
      <call method="setDescription">
        <argument>Dumps a state machine to a graphviz file</argument>
      </call>
    </service>
    <service id="Shopware\Core\System\StateMachine\StateMachineDefinition" class="Shopware\Core\System\StateMachine\StateMachineDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\StateMachine\StateMachineTranslationDefinition" class="Shopware\Core\System\StateMachine\StateMachineTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition" class="Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition" class="Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition" class="Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition" class="Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\StateMachine\Loader\InitialStateIdLoader" class="Shopware\Core\System\StateMachine\Loader\InitialStateIdLoader">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="Shopware\Core\System\SystemConfig\Validation\SystemConfigValidator" class="Shopware\Core\System\SystemConfig\Validation\SystemConfigValidator">
      <tag name="shopware.system_config.validation"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\Service\ConfigurationService"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
    </service>
    <service id="Shopware\Core\System\SystemConfig\SystemConfigDefinition" class="Shopware\Core\System\SystemConfig\SystemConfigDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="kernel.bundles" class="Iterator">
      <factory service="kernel" method="getBundles"/>
    </service>
    <service id="Shopware\Core\System\SystemConfig\Service\ConfigurationService" class="Shopware\Core\System\SystemConfig\Service\ConfigurationService">
      <argument type="service" id="kernel.bundles"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\Util\ConfigReader"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
      <argument type="service" id="app.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\System\SystemConfig\Util\ConfigReader" class="Shopware\Core\System\SystemConfig\Util\ConfigReader"/>
    <service id="Shopware\Core\System\SystemConfig\Api\SystemConfigController" class="Shopware\Core\System\SystemConfig\Api\SystemConfigController" public="true">
      <argument type="service" id="Shopware\Core\System\SystemConfig\Service\ConfigurationService"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\Validation\SystemConfigValidator"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\System\SystemConfig\SystemConfigService" class="Shopware\Core\System\SystemConfig\SystemConfigService" public="true" lazy="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\Util\ConfigReader"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\MemoizedSystemConfigLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>true</argument>
    </service>
    <service id="Shopware\Core\System\SystemConfig\Store\MemoizedSystemConfigStore" class="Shopware\Core\System\SystemConfig\Store\MemoizedSystemConfigStore">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="Shopware\Core\System\SystemConfig\CachedSystemConfigLoader" class="Shopware\Core\System\SystemConfig\CachedSystemConfigLoader">
      <argument type="service" id="Shopware\Core\System\SystemConfig\CachedSystemConfigLoader.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="Shopware\Core\System\SystemConfig\MemoizedSystemConfigLoader" class="Shopware\Core\System\SystemConfig\MemoizedSystemConfigLoader">
      <tag name="container.decorator" id="Shopware\Core\System\SystemConfig\SystemConfigLoader" inner="Shopware\Core\System\SystemConfig\CachedSystemConfigLoader.inner"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\CachedSystemConfigLoader"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\Store\MemoizedSystemConfigStore"/>
    </service>
    <service id="Shopware\Core\System\SystemConfig\Facade\SystemConfigFacadeHookFactory" class="Shopware\Core\System\SystemConfig\Facade\SystemConfigFacadeHookFactory" public="true">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\SystemConfig\Command\ConfigGet" class="Shopware\Core\System\SystemConfig\Command\ConfigGet">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <call method="setName">
        <argument>system:config:get</argument>
      </call>
      <call method="setDescription">
        <argument>Get a config value</argument>
      </call>
    </service>
    <service id="Shopware\Core\System\SystemConfig\Command\ConfigSet" class="Shopware\Core\System\SystemConfig\Command\ConfigSet">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <call method="setName">
        <argument>system:config:set</argument>
      </call>
      <call method="setDescription">
        <argument>Get a config value</argument>
      </call>
    </service>
    <service id="Shopware\Core\System\NumberRange\NumberRangeDefinition" class="Shopware\Core\System\NumberRange\NumberRangeDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition" class="Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition" class="Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition" class="Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition" class="Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition" class="Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\NumberRange\Command\MigrateIncrementStorageCommand" class="Shopware\Core\System\NumberRange\Command\MigrateIncrementStorageCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\IncrementStorage\IncrementStorageRegistry"/>
      <call method="setName">
        <argument>number-range:migrate</argument>
      </call>
      <call method="setDescription">
        <argument>Migrate the increment storage of a number range</argument>
      </call>
    </service>
    <service id="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\IncrementStorage\IncrementSqlStorage" class="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\IncrementStorage\IncrementSqlStorage">
      <tag name="shopware.value_generator_connector" storage="SQL"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\IncrementStorage\AbstractIncrementStorage" class="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\IncrementStorage\AbstractIncrementStorage">
      <factory service="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\IncrementStorage\IncrementStorageRegistry" method="getStorage"/>
    </service>
    <service id="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\IncrementStorage\IncrementStorageRegistry" class="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\IncrementStorage\IncrementStorageRegistry">
      <argument type="tagged_iterator" tag="shopware.value_generator_connector" index-by="storage" default-index-method="getDefaultStorageName" default-priority-method="getDefaultStoragePriority"/>
      <argument>SQL</argument>
    </service>
    <service id="Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGeneratorInterface" class="Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGenerator" public="true">
      <argument type="service" id="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternRegistry"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternRegistry" class="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternRegistry">
      <argument type="tagged_iterator" tag="shopware.value_generator_pattern"/>
    </service>
    <service id="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternIncrement" class="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternIncrement">
      <tag name="shopware.value_generator_pattern"/>
      <argument type="service" id="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\IncrementStorage\AbstractIncrementStorage"/>
    </service>
    <service id="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternDate" class="Shopware\Core\System\NumberRange\ValueGenerator\Pattern\ValueGeneratorPatternDate">
      <tag name="shopware.value_generator_pattern"/>
    </service>
    <service id="Shopware\Core\System\NumberRange\Api\NumberRangeController" class="Shopware\Core\System\NumberRange\Api\NumberRangeController" public="true">
      <argument type="service" id="Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGeneratorInterface"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Tag\TagDefinition" class="Shopware\Core\System\Tag\TagDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\System\Tag\Service\FilterTagIdsService" class="Shopware\Core\System\Tag\Service\FilterTagIdsService" public="true">
      <argument type="service" id="Shopware\Core\System\Tag\TagDefinition"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\CriteriaQueryBuilder"/>
    </service>
    <service id="content.filesystem.private" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument>plugins/content</argument>
    </service>
    <service id="content.filesystem.public" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument>plugins/content</argument>
    </service>
    <service id="Shopware\Core\Content\Category\CategoryDefinition" class="Shopware\Core\Content\Category\CategoryDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition" class="Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition" class="Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Category\SalesChannel\SalesChannelCategoryDefinition" class="Shopware\Core\Content\Category\SalesChannel\SalesChannelCategoryDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Category\Service\NavigationLoader" class="Shopware\Core\Content\Category\Service\NavigationLoader">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Category\SalesChannel\TreeBuildingNavigationRoute"/>
    </service>
    <service id="Shopware\Core\Content\Category\SalesChannel\CachedNavigationRoute" class="Shopware\Core\Content\Category\SalesChannel\CachedNavigationRoute" public="true">
      <argument type="service" id="Shopware\Core\Content\Category\SalesChannel\CachedNavigationRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Content\Category\SalesChannel\TreeBuildingNavigationRoute" class="Shopware\Core\Content\Category\SalesChannel\TreeBuildingNavigationRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Category\SalesChannel\NavigationRoute" inner="Shopware\Core\Content\Category\SalesChannel\CachedNavigationRoute.inner"/>
      <argument type="service" id="Shopware\Core\Content\Category\SalesChannel\CachedNavigationRoute"/>
    </service>
    <service id="Shopware\Core\Content\Category\SalesChannel\CachedCategoryRoute" class="Shopware\Core\Content\Category\SalesChannel\CachedCategoryRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Category\SalesChannel\CategoryRoute" inner="Shopware\Core\Content\Category\SalesChannel\CachedCategoryRoute.inner"/>
      <argument type="service" id="Shopware\Core\Content\Category\SalesChannel\CachedCategoryRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Content\Category\SalesChannel\CategoryListRoute" class="Shopware\Core\Content\Category\SalesChannel\CategoryListRoute" public="true">
      <argument type="service" id="sales_channel.category.repository"/>
    </service>
    <service id="Shopware\Core\Content\Category\DataAbstractionLayer\CategoryIndexer" class="Shopware\Core\Content\Category\DataAbstractionLayer\CategoryIndexer">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="category.repository"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\ChildCountUpdater"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\TreeUpdater"/>
      <argument type="service" id="Shopware\Core\Content\Category\DataAbstractionLayer\CategoryBreadcrumbUpdater"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Category\DataAbstractionLayer\CategoryBreadcrumbUpdater" class="Shopware\Core\Content\Category\DataAbstractionLayer\CategoryBreadcrumbUpdater">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="category.repository"/>
      <argument type="service" id="language.repository"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\TreeUpdater" class="Shopware\Core\Framework\DataAbstractionLayer\Indexing\TreeUpdater">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Category\Service\CategoryBreadcrumbBuilder" class="Shopware\Core\Content\Category\Service\CategoryBreadcrumbBuilder">
      <argument type="service" id="category.repository"/>
    </service>
    <service id="Shopware\Core\Content\Category\Service\CategoryUrlGenerator" class="Shopware\Core\Content\Category\Service\CategoryUrlGenerator">
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlPlaceholderHandlerInterface"/>
    </service>
    <service id="Shopware\Core\Content\Category\Validation\EntryPointValidator" class="Shopware\Core\Content\Category\Validation\EntryPointValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Category\Subscriber\CategorySubscriber" class="Shopware\Core\Content\Category\Subscriber\CategorySubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Content\Category\DataAbstractionLayer\CategoryNonExistentExceptionHandler" class="Shopware\Core\Content\Category\DataAbstractionLayer\CategoryNonExistentExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Content\Media\MediaDefinition" class="Shopware\Core\Content\Media\MediaDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Message\GenerateThumbnailsHandler" class="Shopware\Core\Content\Media\Message\GenerateThumbnailsHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="Shopware\Core\Content\Media\Thumbnail\ThumbnailService"/>
      <argument type="service" id="media.repository"/>
    </service>
    <service id="Shopware\Core\Content\Media\Message\DeleteFileHandler" class="Shopware\Core\Content\Media\Message\DeleteFileHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="shopware.filesystem.public"/>
      <argument type="service" id="shopware.filesystem.private"/>
    </service>
    <service id="Shopware\Core\Content\Media\Subscriber\MediaLoadedSubscriber" class="Shopware\Core\Content\Media\Subscriber\MediaLoadedSubscriber">
      <tag name="kernel.event_listener" event="media.loaded" method="unserialize" priority="100"/>
      <argument type="service" id="Shopware\Core\Content\Media\Pathname\UrlGeneratorInterface"/>
    </service>
    <service id="Shopware\Core\Content\Media\Subscriber\MediaFolderConfigLoadedSubscriber" class="Shopware\Core\Content\Media\Subscriber\MediaFolderConfigLoadedSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Content\Media\File\FileFetcher" class="Shopware\Core\Content\Media\File\FileFetcher">
      <argument type="service" id="Shopware\Core\Content\Media\File\FileUrlValidatorInterface"/>
      <argument>true</argument>
      <argument>false</argument>
      <argument>0</argument>
    </service>
    <service id="Shopware\Core\Content\Media\File\FileUrlValidatorInterface" class="Shopware\Core\Content\Media\File\FileUrlValidator"/>
    <service id="Shopware\Core\Content\Media\File\FileSaver" class="Shopware\Core\Content\Media\File\FileSaver" public="true">
      <argument type="service" id="media.repository"/>
      <argument type="service" id="shopware.filesystem.public"/>
      <argument type="service" id="shopware.filesystem.private"/>
      <argument type="service" id="Shopware\Core\Content\Media\Thumbnail\ThumbnailService"/>
      <argument type="service" id="Shopware\Core\Content\Media\Metadata\MetadataLoader"/>
      <argument type="service" id="Shopware\Core\Content\Media\TypeDetector\TypeDetector"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Media\Core\Application\MediaLocationBuilder"/>
      <argument type="service" id="Shopware\Core\Content\Media\Core\Application\AbstractMediaPathStrategy"/>
      <argument>%shopware.filesystem.allowed_extensions%</argument>
      <argument>%shopware.filesystem.private_allowed_extensions%</argument>
    </service>
    <service id="Shopware\Core\Content\Media\File\FileLoader" class="Shopware\Core\Content\Media\File\FileLoader">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument type="service" id="shopware.filesystem.private"/>
      <argument type="service" id="media.repository"/>
      <argument type="service" id="Nyholm\Psr7\Factory\Psr17Factory"/>
    </service>
    <service id="Shopware\Core\Content\Media\File\FileNameProvider" class="Shopware\Core\Content\Media\File\WindowsStyleFileNameProvider">
      <argument type="service" id="media.repository"/>
    </service>
    <service id="Shopware\Core\Content\Media\File\DownloadResponseGenerator" class="Shopware\Core\Content\Media\File\DownloadResponseGenerator">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument type="service" id="shopware.filesystem.private"/>
      <argument type="service" id="Shopware\Core\Content\Media\MediaService"/>
      <argument>php</argument>
      <argument type="service" id="Shopware\Core\Content\Media\Core\Application\AbstractMediaUrlGenerator"/>
    </service>
    <service id="Shopware\Core\Content\Media\Commands\GenerateThumbnailsCommand" class="Shopware\Core\Content\Media\Commands\GenerateThumbnailsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Content\Media\Thumbnail\ThumbnailService"/>
      <argument type="service" id="media.repository"/>
      <argument type="service" id="media_folder.repository"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <call method="setName">
        <argument>media:generate-thumbnails</argument>
      </call>
      <call method="setDescription">
        <argument>Generates thumbnails for all media files</argument>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Commands\GenerateMediaTypesCommand" class="Shopware\Core\Content\Media\Commands\GenerateMediaTypesCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Content\Media\TypeDetector\TypeDetector"/>
      <argument type="service" id="media.repository"/>
      <call method="setName">
        <argument>media:generate-media-types</argument>
      </call>
      <call method="setDescription">
        <argument>Generates media types for all media files</argument>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Commands\DeleteNotUsedMediaCommand" class="Shopware\Core\Content\Media\Commands\DeleteNotUsedMediaCommand" shared="false">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Content\Media\UnusedMediaPurger"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>media:delete-unused</argument>
      </call>
      <call method="setDescription">
        <argument>Deletes all media files which are not used in any entity</argument>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Pathname\UrlGeneratorInterface" class="Shopware\Core\Content\Media\Pathname\UrlGenerator">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Shopware\Core\Content\Media\Pathname\PathnameStrategy\PathnameStrategyInterface"/>
      <argument type="service" id="shopware.filesystem.public"/>
    </service>
    <service id="Shopware\Core\Content\Media\Pathname\PathnameStrategy\StrategyFactory" class="Shopware\Core\Content\Media\Pathname\PathnameStrategy\StrategyFactory">
      <argument type="tagged_iterator" tag="shopware.pathname.strategy"/>
    </service>
    <service id="Shopware\Core\Content\Media\Pathname\PathnameStrategy\PathnameStrategyInterface" class="Shopware\Core\Content\Media\Pathname\PathnameStrategy\PathnameStrategyInterface">
      <argument>%env(default:default_cdn_strategy:SHOPWARE_CDN_STRATEGY_DEFAULT)%</argument>
      <factory service="Shopware\Core\Content\Media\Pathname\PathnameStrategy\StrategyFactory" method="factory"/>
    </service>
    <service id="Shopware\Core\Content\Media\Pathname\PathnameStrategy\FilenamePathnameStrategy" class="Shopware\Core\Content\Media\Pathname\PathnameStrategy\FilenamePathnameStrategy">
      <tag name="shopware.pathname.strategy"/>
      <argument type="service" id="Shopware\Core\Content\Media\Pathname\PathnameStrategy\PlainPathnameStrategy"/>
    </service>
    <service id="Shopware\Core\Content\Media\Pathname\PathnameStrategy\PhysicalFilenamePathnameStrategy" class="Shopware\Core\Content\Media\Pathname\PathnameStrategy\PhysicalFilenamePathnameStrategy">
      <tag name="shopware.pathname.strategy"/>
      <argument type="service" id="Shopware\Core\Content\Media\Pathname\PathnameStrategy\PlainPathnameStrategy"/>
    </service>
    <service id="Shopware\Core\Content\Media\Pathname\PathnameStrategy\PlainPathnameStrategy" class="Shopware\Core\Content\Media\Pathname\PathnameStrategy\PlainPathnameStrategy">
      <tag name="shopware.pathname.strategy"/>
    </service>
    <service id="Shopware\Core\Content\Media\Pathname\PathnameStrategy\IdPathnameStrategy" class="Shopware\Core\Content\Media\Pathname\PathnameStrategy\IdPathnameStrategy">
      <tag name="shopware.pathname.strategy"/>
      <argument type="service" id="Shopware\Core\Content\Media\Pathname\PathnameStrategy\PlainPathnameStrategy"/>
    </service>
    <service id="Shopware\Core\Content\Media\Api\MediaUploadController" class="Shopware\Core\Content\Media\Api\MediaUploadController" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\MediaService"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\FileSaver"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\FileNameProvider"/>
      <argument type="service" id="Shopware\Core\Content\Media\MediaDefinition"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Api\MediaFolderController" class="Shopware\Core\Content\Media\Api\MediaFolderController" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\MediaFolderService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Media\Metadata\MetadataLoader\ImageMetadataLoader" class="Shopware\Core\Content\Media\Metadata\MetadataLoader\ImageMetadataLoader">
      <tag name="shopware.metadata.loader"/>
    </service>
    <service id="Shopware\Core\Content\Media\Metadata\MetadataLoader" class="Shopware\Core\Content\Media\Metadata\MetadataLoader">
      <argument type="tagged_iterator" tag="shopware.metadata.loader"/>
    </service>
    <service id="Shopware\Core\Content\Media\TypeDetector\AudioTypeDetector" class="Shopware\Core\Content\Media\TypeDetector\AudioTypeDetector">
      <tag name="shopware.media_type.detector" priority="10"/>
    </service>
    <service id="Shopware\Core\Content\Media\TypeDetector\DefaultTypeDetector" class="Shopware\Core\Content\Media\TypeDetector\DefaultTypeDetector">
      <tag name="shopware.media_type.detector" priority="0"/>
    </service>
    <service id="Shopware\Core\Content\Media\TypeDetector\DocumentTypeDetector" class="Shopware\Core\Content\Media\TypeDetector\DocumentTypeDetector">
      <tag name="shopware.media_type.detector" priority="10"/>
    </service>
    <service id="Shopware\Core\Content\Media\TypeDetector\ImageTypeDetector" class="Shopware\Core\Content\Media\TypeDetector\ImageTypeDetector">
      <tag name="shopware.media_type.detector" priority="10"/>
    </service>
    <service id="Shopware\Core\Content\Media\TypeDetector\VideoTypeDetector" class="Shopware\Core\Content\Media\TypeDetector\VideoTypeDetector">
      <tag name="shopware.media_type.detector" priority="10"/>
    </service>
    <service id="Shopware\Core\Content\Media\TypeDetector\TypeDetector" class="Shopware\Core\Content\Media\TypeDetector\TypeDetector">
      <argument type="tagged_iterator" tag="shopware.media_type.detector"/>
    </service>
    <service id="Shopware\Core\Content\Media\DeleteNotUsedMediaService" class="Shopware\Core\Content\Media\DeleteNotUsedMediaService">
      <argument type="service" id="media.repository"/>
      <argument type="service" id="media_default_folder.repository"/>
    </service>
    <service id="Shopware\Core\Content\Media\UnusedMediaPurger" class="Shopware\Core\Content\Media\UnusedMediaPurger">
      <argument type="service" id="media.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Media\MediaFolderService" class="Shopware\Core\Content\Media\MediaFolderService">
      <argument type="service" id="media.repository"/>
      <argument type="service" id="media_folder.repository"/>
      <argument type="service" id="media_folder_configuration.repository"/>
    </service>
    <service id="Shopware\Core\Content\Media\Thumbnail\ThumbnailService" class="Shopware\Core\Content\Media\Thumbnail\ThumbnailService">
      <argument type="service" id="media_thumbnail.repository"/>
      <argument type="service" id="shopware.filesystem.public"/>
      <argument type="service" id="shopware.filesystem.private"/>
      <argument type="service" id="media_folder.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Media\DataAbstractionLayer\MediaIndexer"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Media\MediaService" class="Shopware\Core\Content\Media\MediaService">
      <argument type="service" id="media.repository"/>
      <argument type="service" id="media_folder.repository"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\FileLoader"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\FileSaver"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\FileFetcher"/>
    </service>
    <service id="Shopware\Core\Content\Media\Cms\ImageCmsElementResolver" class="Shopware\Core\Content\Media\Cms\ImageCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
      <argument type="service" id="Shopware\Storefront\Page\Cms\DefaultMediaResolver"/>
    </service>
    <service id="Shopware\Core\Content\Media\Cms\Type\ImageSliderTypeDataResolver" class="Shopware\Core\Content\Media\Cms\Type\ImageSliderTypeDataResolver">
      <tag name="shopware.cms.data_resolver"/>
      <argument type="service" id="Shopware\Storefront\Page\Cms\DefaultMediaResolver"/>
    </service>
    <service id="Shopware\Core\Content\Media\Cms\Type\ImageGalleryTypeDataResolver" class="Shopware\Core\Content\Media\Cms\Type\ImageGalleryTypeDataResolver">
      <tag name="shopware.cms.data_resolver"/>
      <argument type="service" id="Shopware\Storefront\Page\Cms\DefaultMediaResolver"/>
    </service>
    <service id="Shopware\Core\Content\Media\Cms\YoutubeVideoCmsElementResolver" class="Shopware\Core\Content\Media\Cms\YoutubeVideoCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
    </service>
    <service id="Shopware\Core\Content\Media\Cms\VimeoVideoCmsElementResolver" class="Shopware\Core\Content\Media\Cms\VimeoVideoCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
    </service>
    <service id="Shopware\Core\Content\Media\DataAbstractionLayer\MediaIndexer" class="Shopware\Core\Content\Media\DataAbstractionLayer\MediaIndexer">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="media.repository"/>
      <argument type="service" id="media_thumbnail.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Media\DataAbstractionLayer\MediaFolderConfigurationIndexer" class="Shopware\Core\Content\Media\DataAbstractionLayer\MediaFolderConfigurationIndexer">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="media_folder_configuration.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Media\DataAbstractionLayer\MediaFolderIndexer" class="Shopware\Core\Content\Media\DataAbstractionLayer\MediaFolderIndexer">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="media_folder.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\ChildCountUpdater"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\TreeUpdater"/>
    </service>
    <service id="Shopware\Core\Content\Media\Subscriber\MediaDeletionSubscriber" class="Shopware\Core\Content\Media\Subscriber\MediaDeletionSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="media_thumbnail.repository"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="Shopware\Core\Content\Media\Message\DeleteFileHandler"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="media.repository"/>
    </service>
    <service id="Shopware\Core\Content\Media\Subscriber\CustomFieldsUnusedMediaSubscriber" class="Shopware\Core\Content\Media\Subscriber\CustomFieldsUnusedMediaSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Application\MediaUrlLoader" class="Shopware\Core\Content\Media\Core\Application\MediaUrlLoader">
      <tag name="kernel.event_listener" event="media.loaded" method="loaded" priority="20"/>
      <tag name="kernel.event_listener" event="partial.media.loaded" method="loaded" priority="19"/>
      <tag name="kernel.event_listener" event="media.loaded" method="legacyPath" priority="10"/>
      <tag name="kernel.event_listener" event="media.loaded" method="legacy" priority="0"/>
      <argument type="service" id="Shopware\Core\Content\Media\Core\Application\AbstractMediaUrlGenerator"/>
      <argument type="service" id="Shopware\Core\Content\Media\Pathname\UrlGeneratorInterface"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Application\MediaLocationBuilder" class="Shopware\Core\Content\Media\Infrastructure\Path\SqlMediaLocationBuilder">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Application\MediaPathUpdater" class="Shopware\Core\Content\Media\Core\Application\MediaPathUpdater">
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Media\Core\Event\UpdateMediaPathEvent" method="updateMedia" priority="0"/>
      <tag name="kernel.event_listener" event="Shopware\Core\Content\Media\Core\Event\UpdateThumbnailPathEvent" method="updateThumbnails" priority="0"/>
      <argument type="service" id="Shopware\Core\Content\Media\Core\Application\AbstractMediaPathStrategy"/>
      <argument type="service" id="Shopware\Core\Content\Media\Core\Application\MediaLocationBuilder"/>
      <argument type="service" id="Shopware\Core\Content\Media\Core\Application\MediaPathStorage"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Application\MediaPathStorage" class="Shopware\Core\Content\Media\Infrastructure\Path\SqlMediaPathStorage">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Strategy\PathStrategyFactory" class="Shopware\Core\Content\Media\Core\Strategy\PathStrategyFactory">
      <argument type="tagged_iterator" tag="shopware.path.strategy"/>
      <argument type="service" id="Shopware\Core\Content\Media\Core\Strategy\BCStrategy"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Strategy\FilenamePathStrategy" class="Shopware\Core\Content\Media\Core\Strategy\FilenamePathStrategy">
      <tag name="shopware.path.strategy"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Strategy\IdPathStrategy" class="Shopware\Core\Content\Media\Core\Strategy\IdPathStrategy">
      <tag name="shopware.path.strategy"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Strategy\BCStrategy" class="Shopware\Core\Content\Media\Core\Strategy\BCStrategy" public="true">
      <argument type="service" id="media.repository"/>
      <argument type="service" id="media_thumbnail.repository"/>
      <argument type="service" id="Shopware\Core\Content\Media\Pathname\UrlGeneratorInterface"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Strategy\PhysicalFilenamePathStrategy" class="Shopware\Core\Content\Media\Core\Strategy\PhysicalFilenamePathStrategy">
      <tag name="shopware.path.strategy"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Strategy\PlainPathStrategy" class="Shopware\Core\Content\Media\Core\Strategy\PlainPathStrategy">
      <tag name="shopware.path.strategy"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Application\AbstractMediaUrlGenerator" class="Shopware\Core\Content\Media\Infrastructure\Path\MediaUrlGenerator">
      <argument type="service" id="shopware.filesystem.public"/>
    </service>
    <service id="Shopware\Core\Content\Media\Core\Application\AbstractMediaPathStrategy" class="Shopware\Core\Content\Media\Core\Application\AbstractMediaPathStrategy">
      <argument>%env(default:default_cdn_strategy:SHOPWARE_CDN_STRATEGY_DEFAULT)%</argument>
      <factory service="Shopware\Core\Content\Media\Core\Strategy\PathStrategyFactory" method="factory"/>
    </service>
    <service id="Shopware\Core\Content\Media\Infrastructure\Path\MediaPathPostUpdater" class="Shopware\Core\Content\Media\Infrastructure\Path\MediaPathPostUpdater">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="Shopware\Core\Content\Media\Core\Application\MediaPathUpdater"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Media\Infrastructure\Command\UpdatePathCommand" class="Shopware\Core\Content\Media\Infrastructure\Command\UpdatePathCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Content\Media\Core\Application\MediaPathUpdater"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <call method="setName">
        <argument>media:update-path</argument>
      </call>
      <call method="setDescription">
        <argument>Iterates over the media and updates the path column.</argument>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\ProductExceptionHandler" class="Shopware\Core\Content\Product\DataAbstractionLayer\ProductExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingExceptionHandler" class="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Content\Product\ProductDefinition" class="Shopware\Core\Content\Product\ProductDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductStreamMapping\ProductStreamMappingDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductStreamMapping\ProductStreamMappingDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\SalesChannelProductDefinition" class="Shopware\Core\Content\Product\SalesChannel\SalesChannelProductDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductCustomFieldSet\ProductCustomFieldSetDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCustomFieldSet\ProductCustomFieldSetDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductDownload\ProductDownloadDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductDownload\ProductDownloadDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductCrossSellingAssignedProducts\ProductCrossSellingAssignedProductsDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCrossSellingAssignedProducts\ProductCrossSellingAssignedProductsDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductFeatureSet\ProductFeatureSetDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductFeatureSet\ProductFeatureSetDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductFeatureSetTranslation\ProductFeatureSetTranslationDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductFeatureSetTranslation\ProductFeatureSetTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingDefinition" class="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingTranslationDefinition" class="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductSearchConfig\ProductSearchConfigDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductSearchConfig\ProductSearchConfigDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductSearchConfigField\ProductSearchConfigFieldDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductSearchConfigField\ProductSearchConfigFieldDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductSearchConfigField\ProductSearchConfigFieldExceptionHandler" class="Shopware\Core\Content\Product\Aggregate\ProductSearchConfigField\ProductSearchConfigFieldExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductSearchConfig\ProductSearchConfigExceptionHandler" class="Shopware\Core\Content\Product\Aggregate\ProductSearchConfig\ProductSearchConfigExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cart\ProductGateway" class="Shopware\Core\Content\Product\Cart\ProductGateway">
      <argument type="service" id="sales_channel.product.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Product\AbstractPropertyGroupSorter" class="Shopware\Core\Content\Product\PropertyGroupSorter"/>
    <service id="Shopware\Core\Content\Product\AbstractProductMaxPurchaseCalculator" class="Shopware\Core\Content\Product\ProductMaxPurchaseCalculator">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Content\Product\AbstractIsNewDetector" class="Shopware\Core\Content\Product\IsNewDetector">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Content\Product\ProductVariationBuilder" class="Shopware\Core\Content\Product\ProductVariationBuilder"/>
    <service id="Shopware\Core\Content\Product\Subscriber\ProductSubscriber" class="Shopware\Core\Content\Product\Subscriber\ProductSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductVariationBuilder"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Content\Product\AbstractPropertyGroupSorter"/>
      <argument type="service" id="Shopware\Core\Content\Product\AbstractProductMaxPurchaseCalculator"/>
      <argument type="service" id="Shopware\Core\Content\Product\AbstractIsNewDetector"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Content\Product\Stock\StockStorage"/>
    </service>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\StockUpdater" class="Shopware\Core\Content\Product\DataAbstractionLayer\StockUpdater">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Product\DataAbstractionLayer\StockUpdate\StockUpdateFilterProvider"/>
    </service>
    <service id="Shopware\Core\Content\Product\Stock\OrderStockSubscriber" class="Shopware\Core\Content\Product\Stock\OrderStockSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Content\Product\Stock\StockStorage"/>
      <argument>true</argument>
    </service>
    <service id="Shopware\Core\Content\Product\Stock\AvailableStockMirrorSubscriber" class="Shopware\Core\Content\Product\Stock\AvailableStockMirrorSubscriber">
      <tag name="kernel.event_listener"/>
    </service>
    <service id="Shopware\Core\Content\Product\Stock\LoadProductStockSubscriber" class="Shopware\Core\Content\Product\Stock\LoadProductStockSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Content\Product\Stock\StockStorage"/>
    </service>
    <service id="Shopware\Core\Content\Product\SearchKeyword\ProductSearchKeywordAnalyzer" class="Shopware\Core\Content\Product\SearchKeyword\ProductSearchKeywordAnalyzer">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Tokenizer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Filter\TokenFilter"/>
    </service>
    <service id="Shopware\Core\Content\Product\Api\ProductActionController" class="Shopware\Core\Content\Product\Api\ProductActionController" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Util\VariantCombinationLoader"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Util\VariantCombinationLoader" class="Shopware\Core\Content\Product\Util\VariantCombinationLoader">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition" class="Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Product\Cms\ProductBoxCmsElementResolver" class="Shopware\Core\Content\Product\Cms\ProductBoxCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cms\ProductListingCmsElementResolver" class="Shopware\Core\Content\Product\Cms\ProductListingCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\ResolveCriteriaProductListingRoute"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cms\ProductSliderCmsElementResolver" class="Shopware\Core\Content\Product\Cms\ProductSliderCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
      <argument type="service" id="Shopware\Core\Content\ProductStream\Service\ProductStreamBuilder"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cms\ProductNameCmsElementResolver" class="Shopware\Core\Content\Product\Cms\ProductNameCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cms\ManufacturerLogoCmsElementResolver" class="Shopware\Core\Content\Product\Cms\ManufacturerLogoCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cms\CrossSellingCmsElementResolver" class="Shopware\Core\Content\Product\Cms\CrossSellingCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\CrossSelling\CachedProductCrossSellingRoute"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cms\ProductDescriptionReviewsCmsElementResolver" class="Shopware\Core\Content\Product\Cms\ProductDescriptionReviewsCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Review\CachedProductReviewRoute"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator" class="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="Shopware\Core\Content\Product\SalesChannel\Price\ProductPriceCalculator" inner="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator.inner"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Execution\ScriptExecutor"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Facade\ScriptPriceStubs"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\CompositeListingProcessor" class="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\CompositeListingProcessor">
      <argument type="tagged_iterator" tag="shopware.listing.processor"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ManufacturerListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ManufacturerListingFilterHandler">
      <tag name="shopware.listing.filter.handler"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PriceListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PriceListingFilterHandler">
      <tag name="shopware.listing.filter.handler"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\RatingListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\RatingListingFilterHandler">
      <tag name="shopware.listing.filter.handler"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ShippingFreeListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ShippingFreeListingFilterHandler">
      <tag name="shopware.listing.filter.handler"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PropertyListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PropertyListingFilterHandler">
      <tag name="shopware.listing.filter.handler"/>
      <argument type="service" id="property_group_option.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\SortingListingProcessor" class="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\SortingListingProcessor">
      <tag name="shopware.listing.processor"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="product_sorting.repository"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\AggregationListingProcessor" class="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\AggregationListingProcessor">
      <tag name="shopware.listing.processor"/>
      <argument type="tagged_iterator" tag="shopware.listing.filter.handler"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\AssociationLoadingListingProcessor" class="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\AssociationLoadingListingProcessor">
      <tag name="shopware.listing.processor"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\BehaviorListingProcessor" class="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\BehaviorListingProcessor">
      <tag name="shopware.listing.processor" priority="-1000"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\PagingListingProcessor" class="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\PagingListingProcessor">
      <tag name="shopware.listing.processor"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingFeaturesSubscriber" class="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingFeaturesSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\CompositeListingProcessor"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cart\ProductLineItemFactory" class="Shopware\Core\Content\Product\Cart\ProductLineItemFactory"/>
    <service id="Shopware\Core\Content\Product\Cart\ProductLineItemCommandValidator" class="Shopware\Core\Content\Product\Cart\ProductLineItemCommandValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Suggest\CachedProductSuggestRoute" class="Shopware\Core\Content\Product\SalesChannel\Suggest\CachedProductSuggestRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Product\SalesChannel\Suggest\ProductSuggestRoute" inner="Shopware\Core\Content\Product\SalesChannel\Suggest\CachedProductSuggestRoute.inner"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Suggest\CachedProductSuggestRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Search\ResolvedCriteriaProductSearchRoute" class="Shopware\Core\Content\Product\SalesChannel\Search\ResolvedCriteriaProductSearchRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Product\SalesChannel\Search\ProductSearchRoute" inner="Shopware\Core\Content\Product\SalesChannel\Search\CachedProductSearchRoute.inner"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Search\CachedProductSearchRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\CompositeListingProcessor"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Search\CachedProductSearchRoute" class="Shopware\Core\Content\Product\SalesChannel\Search\CachedProductSearchRoute" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Search\CachedProductSearchRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\ResolveCriteriaProductListingRoute" class="Shopware\Core\Content\Product\SalesChannel\Listing\ResolveCriteriaProductListingRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingRoute" inner="Shopware\Core\Content\Product\SalesChannel\Listing\CachedProductListingRoute.inner"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\CachedProductListingRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\CompositeListingProcessor"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\FindVariant\FindProductVariantRoute" class="Shopware\Core\Content\Product\SalesChannel\FindVariant\FindProductVariantRoute" public="true">
      <argument type="service" id="sales_channel.product.repository"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\CachedProductListingRoute" class="Shopware\Core\Content\Product\SalesChannel\Listing\CachedProductListingRoute" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\CachedProductListingRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\ProductIndexer" class="Shopware\Core\Content\Product\DataAbstractionLayer\ProductIndexer">
      <tag name="shopware.entity_indexer" priority="100"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="product.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Content\Product\DataAbstractionLayer\VariantListingUpdater"/>
      <argument type="service" id="Shopware\Core\Content\Product\DataAbstractionLayer\ProductCategoryDenormalizer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\InheritanceUpdater"/>
      <argument type="service" id="Shopware\Core\Content\Product\DataAbstractionLayer\RatingAverageUpdater"/>
      <argument type="service" id="Shopware\Elasticsearch\Product\SearchKeywordReplacement"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\ChildCountUpdater"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\ManyToManyIdFieldUpdater"/>
      <argument type="service" id="Shopware\Core\Content\Product\Stock\StockStorage"/>
      <argument type="service" id="Shopware\Core\Content\Product\DataAbstractionLayer\StockUpdater"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Product\DataAbstractionLayer\CheapestPriceUpdater"/>
      <argument type="service" id="Shopware\Core\Content\Product\DataAbstractionLayer\ProductStreamUpdater"/>
      <argument type="service" id="Shopware\Core\Content\Product\DataAbstractionLayer\StatesUpdater"/>
      <argument type="service" id="messenger.bus.shopware"/>
    </service>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\ProductStreamUpdater" class="Shopware\Core\Content\Product\DataAbstractionLayer\ProductStreamUpdater">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
      <argument type="service" id="product.repository"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\ManyToManyIdFieldUpdater"/>
    </service>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\StatesUpdater" class="Shopware\Core\Content\Product\DataAbstractionLayer\StatesUpdater">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\VariantListingUpdater" class="Shopware\Core\Content\Product\DataAbstractionLayer\VariantListingUpdater">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\ProductCategoryDenormalizer" class="Shopware\Core\Content\Product\DataAbstractionLayer\ProductCategoryDenormalizer">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\CheapestPriceUpdater" class="Shopware\Core\Content\Product\DataAbstractionLayer\CheapestPriceUpdater">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Content\Product\DataAbstractionLayer\CheapestPriceQuantitySelector"/>
    </service>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\CheapestPriceQuantitySelector" class="Shopware\Core\Content\Product\DataAbstractionLayer\CheapestPriceQuantitySelector"/>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\RatingAverageUpdater" class="Shopware\Core\Content\Product\DataAbstractionLayer\RatingAverageUpdater">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\StockUpdate\StockUpdateFilterProvider" class="Shopware\Core\Content\Product\DataAbstractionLayer\StockUpdate\StockUpdateFilterProvider">
      <argument type="tagged_iterator" tag="shopware.product.stock_filter"/>
    </service>
    <service id="Shopware\Core\Content\Product\Stock\StockStorage" class="Shopware\Core\Content\Product\Stock\StockStorage">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingLoader" class="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingLoader">
      <argument type="service" id="sales_channel.product.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\ProductCloseoutFilterFactory"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Detail\CachedProductDetailRoute" class="Shopware\Core\Content\Product\SalesChannel\Detail\CachedProductDetailRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Product\SalesChannel\Detail\ProductDetailRoute" inner="Shopware\Core\Content\Product\SalesChannel\Detail\CachedProductDetailRoute.inner"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Detail\CachedProductDetailRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Review\CachedProductReviewRoute" class="Shopware\Core\Content\Product\SalesChannel\Review\CachedProductReviewRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Product\SalesChannel\Review\ProductReviewRoute" inner="Shopware\Core\Content\Product\SalesChannel\Review\CachedProductReviewRoute.inner"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Review\CachedProductReviewRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Detail\AvailableCombinationLoader" class="Shopware\Core\Content\Product\SalesChannel\Detail\AvailableCombinationLoader">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Content\Product\Stock\StockStorage"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\CrossSelling\CachedProductCrossSellingRoute" class="Shopware\Core\Content\Product\SalesChannel\CrossSelling\CachedProductCrossSellingRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Product\SalesChannel\CrossSelling\ProductCrossSellingRoute" inner="Shopware\Core\Content\Product\SalesChannel\CrossSelling\CachedProductCrossSellingRoute.inner"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\CrossSelling\CachedProductCrossSellingRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Review\ProductReviewSaveRoute" class="Shopware\Core\Content\Product\SalesChannel\Review\ProductReviewSaveRoute" public="true">
      <argument type="service" id="product_review.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\ProductListRoute" class="Shopware\Core\Content\Product\SalesChannel\ProductListRoute" public="true">
      <argument type="service" id="sales_channel.product.repository"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cms\BuyBoxCmsElementResolver" class="Shopware\Core\Content\Product\Cms\BuyBoxCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
      <argument type="service" id="Shopware\Storefront\Page\Product\Configurator\ProductPageConfiguratorLoader"/>
      <argument type="service" id="product_review.repository"/>
    </service>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Filter\TokenFilter" class="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Filter\TokenFilter">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\CheapestPrice\CheapestPriceAccessorBuilder" class="Shopware\Core\Content\Product\DataAbstractionLayer\CheapestPrice\CheapestPriceAccessorBuilder" public="true">
      <tag name="shopware.field_accessor_builder" priority="-200"/>
      <argument>100</argument>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cleanup\CleanupProductKeywordDictionaryTask" class="Shopware\Core\Content\Product\Cleanup\CleanupProductKeywordDictionaryTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cleanup\CleanupProductKeywordDictionaryTaskHandler" class="Shopware\Core\Content\Product\Cleanup\CleanupProductKeywordDictionaryTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cleanup\CleanupUnusedDownloadMediaTask" class="Shopware\Core\Content\Product\Cleanup\CleanupUnusedDownloadMediaTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cleanup\CleanupUnusedDownloadMediaTaskHandler" class="Shopware\Core\Content\Product\Cleanup\CleanupUnusedDownloadMediaTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Shopware\Core\Content\Media\UnusedMediaPurger"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\ProductCloseoutFilterFactory" class="Shopware\Core\Content\Product\SalesChannel\ProductCloseoutFilterFactory"/>
    <service id="Shopware\Core\Content\Product\Api\ProductNumberFkResolver" class="Shopware\Core\Content\Product\Api\ProductNumberFkResolver">
      <tag name="shopware.sync.fk_resolver"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipient\NewsletterRecipientDefinition" class="Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipient\NewsletterRecipientDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Newsletter\SalesChannel\SalesChannelNewsletterRecipientDefinition" class="Shopware\Core\Content\Newsletter\SalesChannel\SalesChannelNewsletterRecipientDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition" class="Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Newsletter\ScheduledTask\NewsletterRecipientTask" class="Shopware\Core\Content\Newsletter\ScheduledTask\NewsletterRecipientTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Content\Newsletter\ScheduledTask\NewsletterRecipientTaskHandler" class="Shopware\Core\Content\Newsletter\ScheduledTask\NewsletterRecipientTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="newsletter_recipient.repository"/>
    </service>
    <service id="Shopware\Core\Content\Newsletter\NewsletterExceptionHandler" class="Shopware\Core\Content\Newsletter\NewsletterExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Content\Newsletter\SalesChannel\NewsletterSubscribeRoute" class="Shopware\Core\Content\Newsletter\SalesChannel\NewsletterSubscribeRoute" public="true">
      <argument type="service" id="newsletter_recipient.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="shopware.rate_limiter"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Shopware\Core\Content\Newsletter\SalesChannel\NewsletterConfirmRoute" class="Shopware\Core\Content\Newsletter\SalesChannel\NewsletterConfirmRoute" public="true">
      <argument type="service" id="newsletter_recipient.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Newsletter\SalesChannel\NewsletterUnsubscribeRoute" class="Shopware\Core\Content\Newsletter\SalesChannel\NewsletterUnsubscribeRoute" public="true">
      <argument type="service" id="newsletter_recipient.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Newsletter\DataAbstractionLayer\NewsletterRecipientIndexer" class="Shopware\Core\Content\Newsletter\DataAbstractionLayer\NewsletterRecipientIndexer">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="newsletter_recipient.repository"/>
      <argument type="service" id="Shopware\Core\Content\Newsletter\DataAbstractionLayer\Indexing\CustomerNewsletterSalesChannelsUpdater"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Newsletter\DataAbstractionLayer\Indexing\CustomerNewsletterSalesChannelsUpdater" class="Shopware\Core\Content\Newsletter\DataAbstractionLayer\Indexing\CustomerNewsletterSalesChannelsUpdater">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Newsletter\Event\Subscriber\NewsletterRecipientDeletedSubscriber" class="Shopware\Core\Content\Newsletter\Event\Subscriber\NewsletterRecipientDeletedSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="messenger.bus.shopware"/>
    </service>
    <service id="Shopware\Core\Content\Newsletter\Subscriber\NewsletterRecipientSalutationSubscriber" class="Shopware\Core\Content\Newsletter\Subscriber\NewsletterRecipientSalutationSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Rule\RuleDefinition" class="Shopware\Core\Content\Rule\RuleDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition" class="Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Rule\Aggregate\RuleTag\RuleTagDefinition" class="Shopware\Core\Content\Rule\Aggregate\RuleTag\RuleTagDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Rule\RuleValidator" class="Shopware\Core\Content\Rule\RuleValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\Rule\Collector\RuleConditionRegistry"/>
      <argument type="service" id="rule_condition.repository"/>
      <argument type="service" id="app_script_condition.repository"/>
    </service>
    <service id="Shopware\Core\Content\Rule\DataAbstractionLayer\RulePayloadSubscriber" class="Shopware\Core\Content\Rule\DataAbstractionLayer\RulePayloadSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RulePayloadUpdater"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Debugging\ScriptTraces"/>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/twig</argument>
      <argument>true</argument>
    </service>
    <service id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleIndexer" class="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleIndexer">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="rule.repository"/>
      <argument type="service" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RulePayloadUpdater"/>
      <argument type="service" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleAreaUpdater"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleIndexerSubscriber" class="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleIndexerSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartRuleLoader"/>
    </service>
    <service id="Shopware\Core\Content\Rule\DataAbstractionLayer\RulePayloadUpdater" class="Shopware\Core\Content\Rule\DataAbstractionLayer\RulePayloadUpdater">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\Rule\Collector\RuleConditionRegistry"/>
    </service>
    <service id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleAreaUpdater" class="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleAreaUpdater">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Content\Rule\RuleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\Rule\Collector\RuleConditionRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
    </service>
    <service id="Shopware\Core\Content\ProductStream\ProductStreamDefinition" class="Shopware\Core\Content\ProductStream\ProductStreamDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition" class="Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition" class="Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\ProductStream\Service\ProductStreamBuilder" class="Shopware\Core\Content\ProductStream\Service\ProductStreamBuilder" public="true">
      <argument type="service" id="product_stream.repository"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
    </service>
    <service id="Shopware\Core\Content\ProductStream\DataAbstractionLayer\ProductStreamIndexer" class="Shopware\Core\Content\ProductStream\DataAbstractionLayer\ProductStreamIndexer">
      <tag name="shopware.entity_indexer" priority="100"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="product_stream.repository"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\ProductStream\ScheduledTask\UpdateProductStreamMappingTask" class="Shopware\Core\Content\ProductStream\ScheduledTask\UpdateProductStreamMappingTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Content\ProductStream\ScheduledTask\UpdateProductStreamMappingTaskHandler" class="Shopware\Core\Content\ProductStream\ScheduledTask\UpdateProductStreamMappingTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="product_stream.repository"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\ProductExportDefinition" class="Shopware\Core\Content\ProductExport\ProductExportDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\ProductExport\Service\ProductExportRenderer" class="Shopware\Core\Content\ProductExport\Service\ProductExportRenderer">
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\StringTemplateRenderer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlPlaceholderHandlerInterface"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\Service\ProductExporter" class="Shopware\Core\Content\ProductExport\Service\ProductExporter" public="true">
      <argument type="service" id="product_export.repository"/>
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExportGenerator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExportFileHandler"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\Service\ProductExportFileHandler" class="Shopware\Core\Content\ProductExport\Service\ProductExportFileHandler">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument>export</argument>
    </service>
    <service id="Shopware\Core\Content\ProductExport\Service\ProductExportGenerator" class="Shopware\Core\Content\ProductExport\Service\ProductExportGenerator" public="true">
      <argument type="service" id="Shopware\Core\Content\ProductStream\Service\ProductStreamBuilder"/>
      <argument type="service" id="sales_channel.product.repository"/>
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExportRenderer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExportValidator"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument>100</argument>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlPlaceholderHandlerInterface"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
      <argument type="service" id="Shopware\Core\System\Locale\LanguageLocaleCodeProvider"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\TwigVariableParserFactory"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\Command\ProductExportGenerateCommand" class="Shopware\Core\Content\ProductExport\Command\ProductExportGenerateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExporter"/>
      <call method="setName">
        <argument>product-export:generate</argument>
      </call>
      <call method="setDescription">
        <argument>Generates a product export file</argument>
      </call>
    </service>
    <service id="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportGenerateTask" class="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportGenerateTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportGenerateTaskHandler" class="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportGenerateTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="product_export.repository"/>
      <argument type="service" id="messenger.bus.shopware"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportPartialGenerationHandler" class="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportPartialGenerationHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExportGenerator"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
      <argument type="service" id="product_export.repository"/>
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExportFileHandler"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExportRenderer"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument>100</argument>
      <argument type="service" id="Shopware\Core\System\Locale\LanguageLocaleCodeProvider"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\Api\ProductExportController" class="Shopware\Core\Content\ProductExport\Api\ProductExportController" public="true">
      <argument type="service" id="sales_channel_domain.repository"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExportGenerator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\ProductExport\Service\ProductExportValidator" class="Shopware\Core\Content\ProductExport\Service\ProductExportValidator">
      <argument type="tagged_iterator" tag="shopware.product_export.validator"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\Validator\XmlValidator" class="Shopware\Core\Content\ProductExport\Validator\XmlValidator">
      <tag name="shopware.product_export.validator"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\DataAbstractionLayer\ProductExportExceptionHandler" class="Shopware\Core\Content\ProductExport\DataAbstractionLayer\ProductExportExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\EventListener\ProductExportEventListener" class="Shopware\Core\Content\ProductExport\EventListener\ProductExportEventListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="product_export.repository"/>
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExportFileHandler"/>
      <argument type="service" id="shopware.filesystem.private"/>
    </service>
    <service id="Shopware\Core\Content\ProductExport\SalesChannel\ExportController" class="Shopware\Core\Content\ProductExport\SalesChannel\ExportController" public="true">
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExporter"/>
      <argument type="service" id="Shopware\Core\Content\ProductExport\Service\ProductExportFileHandler"/>
      <argument type="service" id="shopware.filesystem.private"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="product_export.repository"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
    </service>
    <service id="Shopware\Core\Content\Property\PropertyGroupDefinition" class="Shopware\Core\Content\Property\PropertyGroupDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition" class="Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition" class="Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition" class="Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Cms\CmsPageDefinition" class="Shopware\Core\Content\Cms\CmsPageDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition" class="Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition" class="Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition" class="Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition" class="Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition" class="Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Cms\DataResolver\CmsSlotsDataResolver" class="Shopware\Core\Content\Cms\DataResolver\CmsSlotsDataResolver" public="true">
      <argument type="tagged_iterator" tag="shopware.cms.data_resolver"/>
      <argument type="collection">
        <argument key="product" type="service" id="sales_channel.product.repository"/>
      </argument>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Content\Cms\DataResolver\Element\TextCmsElementResolver" class="Shopware\Core\Content\Cms\DataResolver\Element\TextCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
      <argument type="service" id="Shopware\Core\Framework\Util\HtmlSanitizer"/>
    </service>
    <service id="Shopware\Core\Content\Cms\DataResolver\Element\FormCmsElementResolver" class="Shopware\Core\Content\Cms\DataResolver\Element\FormCmsElementResolver">
      <tag name="shopware.cms.data_resolver"/>
      <argument type="service" id="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute"/>
    </service>
    <service id="Shopware\Core\Content\Cms\DataAbstractionLayer\FieldSerializer\SlotConfigFieldSerializer" class="Shopware\Core\Content\Cms\DataAbstractionLayer\FieldSerializer\SlotConfigFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageLoader" class="Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageLoader">
      <argument type="service" id="cms_page.repository"/>
      <argument type="service" id="Shopware\Core\Content\Cms\DataResolver\CmsSlotsDataResolver"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Cms\SalesChannel\CmsRoute" class="Shopware\Core\Content\Cms\SalesChannel\CmsRoute" public="true">
      <argument type="service" id="Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageLoader"/>
    </service>
    <service id="Shopware\Core\Content\Cms\Subscriber\CmsPageDefaultChangeSubscriber" class="Shopware\Core\Content\Cms\Subscriber\CmsPageDefaultChangeSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Cms\Subscriber\UnusedMediaSubscriber" class="Shopware\Core\Content\Cms\Subscriber\UnusedMediaSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\MailTemplate\MailTemplateDefinition" class="Shopware\Core\Content\MailTemplate\MailTemplateDefinition" public="true">
      <tag name="shopware.entity.definition" entity="mail_template"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition" public="true">
      <tag name="shopware.entity.definition" entity="mail_template_translation"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition" public="true">
      <tag name="shopware.entity.definition" entity="mail_template_type"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition" public="true">
      <tag name="shopware.entity.definition" entity="mail_template_type_translation"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Mail\Service\MailSender" class="Shopware\Core\Content\Mail\Service\MailSender" public="true">
      <argument type="service" id="mailer.mailer"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Content\Mail\Service\MailFactory" class="Shopware\Core\Content\Mail\Service\MailFactory" public="true">
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
    </service>
    <service id="Shopware\Core\Content\MailTemplate\Api\MailActionController" class="Shopware\Core\Content\MailTemplate\Api\MailActionController" public="true">
      <argument type="service" id="Shopware\Core\Content\Mail\Service\MailService"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\StringTemplateRenderer"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Mail\Service\MailService" class="Shopware\Core\Content\Mail\Service\MailService">
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\StringTemplateRenderer"/>
      <argument type="service" id="Shopware\Core\Content\Mail\Service\MailFactory"/>
      <argument type="service" id="Shopware\Core\Content\Mail\Service\MailSender"/>
      <argument type="service" id="media.repository"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\SalesChannelDefinition"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Shopware\Core\Content\Mail\Service\MailAttachmentsBuilder" class="Shopware\Core\Content\Mail\Service\MailAttachmentsBuilder" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\MediaService"/>
      <argument type="service" id="media.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentGenerator"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Mail\Service\MailerTransportLoader" class="Shopware\Core\Content\Mail\Service\MailerTransportLoader">
      <argument type="service" id="mailer.transport_factory"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Content\Mail\Service\MailAttachmentsBuilder"/>
      <argument type="service" id="shopware.filesystem.public"/>
      <argument type="service" id="document.repository"/>
    </service>
    <service id="Shopware\Core\Content\MailTemplate\Service\AttachmentLoader" class="Shopware\Core\Content\MailTemplate\Service\AttachmentLoader">
      <argument type="service" id="document.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentGenerator"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition" class="Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\ImportExport\ImportExportProfileDefinition" class="Shopware\Core\Content\ImportExport\ImportExportProfileDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition" class="Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition" class="Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\ImportExport\ImportExportProfileTranslationDefinition" class="Shopware\Core\Content\ImportExport\ImportExportProfileTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\SystemDefaultValidator" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\SystemDefaultValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Service\ImportExportService" class="Shopware\Core\Content\ImportExport\Service\ImportExportService">
      <argument type="service" id="import_export_log.repository"/>
      <argument type="service" id="user.repository"/>
      <argument type="service" id="import_export_profile.repository"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\Service\FileService"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Service\MappingService" class="Shopware\Core\Content\ImportExport\Service\MappingService">
      <argument type="service" id="Shopware\Core\Content\ImportExport\Service\FileService"/>
      <argument type="service" id="import_export_profile.repository"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Service\FileService" class="Shopware\Core\Content\ImportExport\Service\FileService">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument type="service" id="import_export_file.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Controller\ImportExportActionController" class="Shopware\Core\Content\ImportExport\Controller\ImportExportActionController" public="true">
      <argument type="service" id="Shopware\Core\Content\ImportExport\Service\SupportedFeaturesService"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\Service\ImportExportService"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\Service\DownloadService"/>
      <argument type="service" id="import_export_profile.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\ImportExportFactory"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\Service\MappingService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Service\SupportedFeaturesService" class="Shopware\Core\Content\ImportExport\Service\SupportedFeaturesService">
      <argument>%import_export.supported_entities%</argument>
      <argument>%import_export.supported_file_types%</argument>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Service\DownloadService" class="Shopware\Core\Content\ImportExport\Service\DownloadService">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument type="service" id="import_export_file.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\PrimaryKeyResolver" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\PrimaryKeyResolver">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\FieldSerializer"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\SerializerRegistry" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\SerializerRegistry">
      <argument type="tagged_iterator" tag="shopware.import_export.entity_serializer"/>
      <argument type="tagged_iterator" tag="shopware.import_export.field_serializer"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\EntitySerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\EntitySerializer">
      <tag name="shopware.import_export.entity_serializer" priority="-999"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\FieldSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\FieldSerializer">
      <tag name="shopware.import_export.field_serializer" priority="-999"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\ToOneSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\ToOneSerializer">
      <tag name="shopware.import_export.field_serializer" priority="-500"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\PrimaryKeyResolver"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\TranslationsSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\TranslationsSerializer">
      <tag name="shopware.import_export.field_serializer" priority="-500"/>
      <argument type="service" id="language.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\PriceSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\PriceSerializer">
      <tag name="shopware.import_export.field_serializer" priority="-500"/>
      <argument type="service" id="currency.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\CustomFieldsSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Field\CustomFieldsSerializer">
      <tag name="shopware.import_export.field_serializer" priority="-500"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\FieldSerializer\CustomFieldsSerializer"/>
      <argument type="service" id="Shopware\Core\System\CustomField\CustomFieldService"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializer">
      <tag name="shopware.import_export.entity_serializer" priority="-400"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Shopware\Core\Content\Media\MediaService"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\FileSaver"/>
      <argument type="service" id="media_folder.repository"/>
      <argument type="service" id="media.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializerSubscriber" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializerSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializer"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\SalutationSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\SalutationSerializer">
      <tag name="shopware.import_export.entity_serializer" priority="-400"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="salutation.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\CountrySerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\CountrySerializer">
      <tag name="shopware.import_export.entity_serializer" priority="-400"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="country.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\LanguageSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\LanguageSerializer">
      <tag name="shopware.import_export.entity_serializer" priority="-400"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="language.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\CustomerSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\CustomerSerializer">
      <tag name="shopware.import_export.entity_serializer" priority="-400"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="customer_group.repository"/>
      <argument type="service" id="payment_method.repository"/>
      <argument type="service" id="sales_channel.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\PromotionIndividualCodeSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\PromotionIndividualCodeSerializer">
      <tag name="shopware.import_export.entity_serializer" priority="-400"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="promotion_individual_code.repository"/>
      <argument type="service" id="promotion.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\ProductSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\ProductSerializer">
      <tag name="shopware.import_export.entity_serializer" priority="-400"/>
      <argument type="service" id="product_visibility.repository"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="product_media.repository"/>
      <argument type="service" id="product_configurator_setting.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\ProductCrossSellingSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\ProductCrossSellingSerializer">
      <tag name="shopware.import_export.entity_serializer" priority="-400"/>
      <argument type="service" id="product_cross_selling_assigned_products.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\OrderSerializer" class="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\OrderSerializer">
      <tag name="shopware.import_export.entity_serializer" priority="-400"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Processing\Reader\CsvReaderFactory" class="Shopware\Core\Content\ImportExport\Processing\Reader\CsvReaderFactory">
      <tag name="shopware.import_export.reader_factory"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Processing\Writer\CsvFileWriterFactory" class="Shopware\Core\Content\ImportExport\Processing\Writer\CsvFileWriterFactory">
      <tag name="shopware.import_export.writer_factory"/>
      <argument type="service" id="shopware.filesystem.private"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Processing\Pipe\PipeFactory" class="Shopware\Core\Content\ImportExport\Processing\Pipe\PipeFactory">
      <tag name="shopware.import_export.pipe_factory"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\SerializerRegistry"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\PrimaryKeyResolver"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\ImportExportFactory" class="Shopware\Core\Content\ImportExport\ImportExportFactory" public="true">
      <argument type="service" id="Shopware\Core\Content\ImportExport\Service\ImportExportService"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="shopware.filesystem.private"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="import_export_log.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\Service\FileService"/>
      <argument type="tagged_iterator" tag="shopware.import_export.reader_factory"/>
      <argument type="tagged_iterator" tag="shopware.import_export.writer_factory"/>
      <argument type="tagged_iterator" tag="shopware.import_export.pipe_factory"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Message\ImportExportHandler" class="Shopware\Core\Content\ImportExport\Message\ImportExportHandler" public="true">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\ImportExportFactory"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Service\DeleteExpiredFilesService" class="Shopware\Core\Content\ImportExport\Service\DeleteExpiredFilesService">
      <argument type="service" id="import_export_file.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Command\DeleteExpiredFilesCommand" class="Shopware\Core\Content\ImportExport\Command\DeleteExpiredFilesCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\Service\DeleteExpiredFilesService"/>
      <call method="setName">
        <argument>import-export:delete-expired</argument>
      </call>
      <call method="setDescription">
        <argument>Deletes expired files</argument>
      </call>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Message\DeleteFileHandler" class="Shopware\Core\Content\ImportExport\Message\DeleteFileHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="shopware.filesystem.private"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Event\Subscriber\FileDeletedSubscriber" class="Shopware\Core\Content\ImportExport\Event\Subscriber\FileDeletedSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="messenger.bus.shopware"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Event\Subscriber\CategoryCriteriaSubscriber" class="Shopware\Core\Content\ImportExport\Event\Subscriber\CategoryCriteriaSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductCategoryPathsSubscriber" class="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductCategoryPathsSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="category.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Sync\SyncService"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductCriteriaSubscriber" class="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductCriteriaSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductVariantsSubscriber" class="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductVariantsSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Sync\SyncService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="property_group.repository"/>
      <argument type="service" id="property_group_option.repository"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\Command\ImportEntityCommand" class="Shopware\Core\Content\ImportExport\Command\ImportEntityCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\Service\ImportExportService"/>
      <argument type="service" id="import_export_profile.repository"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\ImportExportFactory"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="shopware.filesystem.private"/>
      <call method="setName">
        <argument>import:entity</argument>
      </call>
      <call method="setDescription">
        <argument>Import entities from a csv file</argument>
      </call>
    </service>
    <service id="Shopware\Core\Content\ImportExport\ScheduledTask\CleanupImportExportFileTask" class="Shopware\Core\Content\ImportExport\ScheduledTask\CleanupImportExportFileTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Content\ImportExport\ScheduledTask\CleanupImportExportFileTaskHandler" class="Shopware\Core\Content\ImportExport\ScheduledTask\CleanupImportExportFileTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Shopware\Core\Content\ImportExport\Service\DeleteExpiredFilesService"/>
    </service>
    <service id="Shopware\Core\Content\ContactForm\Validation\ContactFormValidationFactory" class="Shopware\Core\Content\ContactForm\Validation\ContactFormValidationFactory">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Content\ContactForm\SalesChannel\ContactFormRoute" class="Shopware\Core\Content\ContactForm\SalesChannel\ContactFormRoute" public="true">
      <argument type="service" id="Shopware\Core\Content\ContactForm\Validation\ContactFormValidationFactory"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="cms_slot.repository"/>
      <argument type="service" id="salutation.repository"/>
      <argument type="service" id="category.repository"/>
      <argument type="service" id="landing_page.repository"/>
      <argument type="service" id="product.repository"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="shopware.rate_limiter"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\Service\SitemapExporter" class="Shopware\Core\Content\Sitemap\Service\SitemapExporter">
      <argument type="tagged_iterator" tag="shopware.sitemap_url_provider"/>
      <argument type="service" id="cache.system"/>
      <argument>100</argument>
      <argument type="service" id="shopware.filesystem.sitemap"/>
      <argument type="service" id="Shopware\Core\Content\Sitemap\Service\SitemapHandleFactoryInterface"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\Service\SitemapLister" class="Shopware\Core\Content\Sitemap\Service\SitemapLister">
      <argument type="service" id="shopware.filesystem.sitemap"/>
      <argument type="service" id="shopware.asset.sitemap"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\Service\ConfigHandler" class="Shopware\Core\Content\Sitemap\Service\ConfigHandler">
      <argument type="tagged_iterator" tag="shopware.sitemap.config_handler"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\Service\SitemapHandleFactoryInterface" class="Shopware\Core\Content\Sitemap\Service\SitemapHandleFactory">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\SalesChannel\CachedSitemapRoute" class="Shopware\Core\Content\Sitemap\SalesChannel\CachedSitemapRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Sitemap\SalesChannel\SitemapRoute" inner="Shopware\Core\Content\Sitemap\SalesChannel\CachedSitemapRoute.inner"/>
      <argument type="service" id="Shopware\Core\Content\Sitemap\SalesChannel\CachedSitemapRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\Provider\HomeUrlProvider" class="Shopware\Core\Content\Sitemap\Provider\HomeUrlProvider">
      <tag name="shopware.sitemap_url_provider"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\Provider\CategoryUrlProvider" class="Shopware\Core\Content\Sitemap\Provider\CategoryUrlProvider">
      <tag name="shopware.sitemap_url_provider"/>
      <argument type="service" id="Shopware\Core\Content\Sitemap\Service\ConfigHandler"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Content\Category\CategoryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\Provider\CustomUrlProvider" class="Shopware\Core\Content\Sitemap\Provider\CustomUrlProvider">
      <tag name="shopware.sitemap_url_provider"/>
      <argument type="service" id="Shopware\Core\Content\Sitemap\Service\ConfigHandler"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\Provider\ProductUrlProvider" class="Shopware\Core\Content\Sitemap\Provider\ProductUrlProvider">
      <tag name="shopware.sitemap_url_provider"/>
      <argument type="service" id="Shopware\Core\Content\Sitemap\Service\ConfigHandler"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\ConfigHandler\File" class="Shopware\Core\Content\Sitemap\ConfigHandler\File">
      <tag name="shopware.sitemap.config_handler"/>
      <argument>%shopware.sitemap%</argument>
    </service>
    <service id="Shopware\Core\Content\Sitemap\Commands\SitemapGenerateCommand" class="Shopware\Core\Content\Sitemap\Commands\SitemapGenerateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="Shopware\Core\Content\Sitemap\Service\SitemapExporter"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>sitemap:generate</argument>
      </call>
      <call method="setDescription">
        <argument>Generates sitemap files</argument>
      </call>
    </service>
    <service id="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTask" class="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTaskHandler" class="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapMessageHandler" class="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
      <argument type="service" id="Shopware\Core\Content\Sitemap\Service\SitemapExporter"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Content\LandingPage\LandingPageDefinition" class="Shopware\Core\Content\LandingPage\LandingPageDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\LandingPage\Aggregate\LandingPageTranslation\LandingPageTranslationDefinition" class="Shopware\Core\Content\LandingPage\Aggregate\LandingPageTranslation\LandingPageTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\LandingPage\Aggregate\LandingPageTag\LandingPageTagDefinition" class="Shopware\Core\Content\LandingPage\Aggregate\LandingPageTag\LandingPageTagDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\LandingPage\Aggregate\LandingPageSalesChannel\LandingPageSalesChannelDefinition" class="Shopware\Core\Content\LandingPage\Aggregate\LandingPageSalesChannel\LandingPageSalesChannelDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\LandingPage\DataAbstractionLayer\LandingPageIndexer" class="Shopware\Core\Content\LandingPage\DataAbstractionLayer\LandingPageIndexer">
      <tag name="shopware.entity_indexer" priority="1000"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="landing_page.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\LandingPage\SalesChannel\SalesChannelLandingPageDefinition" class="Shopware\Core\Content\LandingPage\SalesChannel\SalesChannelLandingPageDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\LandingPage\SalesChannel\CachedLandingPageRoute" class="Shopware\Core\Content\LandingPage\SalesChannel\CachedLandingPageRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Content\LandingPage\SalesChannel\LandingPageRoute" inner="Shopware\Core\Content\LandingPage\SalesChannel\CachedLandingPageRoute.inner"/>
      <argument type="service" id="Shopware\Core\Content\LandingPage\SalesChannel\CachedLandingPageRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Content\LandingPage\LandingPageValidator" class="Shopware\Core\Content\LandingPage\LandingPageValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
    </service>
    <service id="Shopware\Core\Content\Flow\FlowDefinition" class="Shopware\Core\Content\Flow\FlowDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Flow\Aggregate\FlowSequence\FlowSequenceDefinition" class="Shopware\Core\Content\Flow\Aggregate\FlowSequence\FlowSequenceDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\FlowDispatcher" class="Shopware\Core\Content\Flow\Dispatching\FlowDispatcher">
      <argument type="service" id="Shopware\Core\Content\Flow\Dispatching\FlowDispatcher.inner"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Shopware\Core\Content\Flow\Dispatching\FlowFactory"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Flow\Rule\FlowRuleScopeBuilder" class="Shopware\Core\Content\Flow\Rule\FlowRuleScopeBuilder">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderConverter"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Delivery\DeliveryBuilder"/>
      <argument type="tagged_iterator" tag="shopware.cart.collector"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\FlowExecutor" class="Shopware\Core\Content\Flow\Dispatching\FlowExecutor" public="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\App\Flow\Action\AppFlowActionProvider"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CachedRuleLoader"/>
      <argument type="service" id="Shopware\Core\Content\Flow\Rule\FlowRuleScopeBuilder"/>
      <argument type="tagged_iterator" tag="flow.action" index-by="key" default-index-method="getDefaultKeyName" default-priority-method="getDefaultKeyPriority"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\AddOrderTagAction" class="Shopware\Core\Content\Flow\Dispatching\Action\AddOrderTagAction">
      <tag name="flow.action" priority="1000" key="action.add.order.tag"/>
      <argument type="service" id="order.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\AddCustomerTagAction" class="Shopware\Core\Content\Flow\Dispatching\Action\AddCustomerTagAction">
      <tag name="flow.action" priority="900" key="action.add.customer.tag"/>
      <argument type="service" id="customer.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\RemoveOrderTagAction" class="Shopware\Core\Content\Flow\Dispatching\Action\RemoveOrderTagAction">
      <tag name="flow.action" priority="800" key="action.remove.order.tag"/>
      <argument type="service" id="order_tag.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\RemoveCustomerTagAction" class="Shopware\Core\Content\Flow\Dispatching\Action\RemoveCustomerTagAction">
      <tag name="flow.action" priority="700" key="action.remove.customer.tag"/>
      <argument type="service" id="customer_tag.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\ChangeCustomerGroupAction" class="Shopware\Core\Content\Flow\Dispatching\Action\ChangeCustomerGroupAction">
      <tag name="flow.action" priority="690" key="action.change.customer.group"/>
      <argument type="service" id="customer.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\ChangeCustomerStatusAction" class="Shopware\Core\Content\Flow\Dispatching\Action\ChangeCustomerStatusAction">
      <tag name="flow.action" priority="680" key="action.change.customer.status"/>
      <argument type="service" id="customer.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\GrantDownloadAccessAction" class="Shopware\Core\Content\Flow\Dispatching\Action\GrantDownloadAccessAction">
      <tag name="flow.action" priority="550" key="action.grant.download.access"/>
      <argument type="service" id="order_line_item_download.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\SendMailAction" class="Shopware\Core\Content\Flow\Dispatching\Action\SendMailAction">
      <tag name="flow.action" priority="500" key="action.mail.send"/>
      <argument type="service" id="Shopware\Core\Content\Mail\Service\MailService"/>
      <argument type="service" id="mail_template.repository"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="mail_template_type.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\System\Locale\LanguageLocaleCodeProvider"/>
      <argument>true</argument>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\GenerateDocumentAction" class="Shopware\Core\Content\Flow\Dispatching\Action\GenerateDocumentAction">
      <tag name="flow.action" priority="620" key="action.generate.document"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentGenerator"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\SetOrderStateAction" class="Shopware\Core\Content\Flow\Dispatching\Action\SetOrderStateAction">
      <tag name="flow.action" priority="400" key="action.set.order.state"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderService"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\SetCustomerCustomFieldAction" class="Shopware\Core\Content\Flow\Dispatching\Action\SetCustomerCustomFieldAction">
      <tag name="flow.action" priority="350" key="action.set.customer.custom.field"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="customer.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\SetOrderCustomFieldAction" class="Shopware\Core\Content\Flow\Dispatching\Action\SetOrderCustomFieldAction">
      <tag name="flow.action" priority="300" key="action.set.order.custom.field"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="order.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\SetCustomerGroupCustomFieldAction" class="Shopware\Core\Content\Flow\Dispatching\Action\SetCustomerGroupCustomFieldAction">
      <tag name="flow.action" priority="350" key="action.set.customer.group.custom.field"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="customer_group.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\AddCustomerAffiliateAndCampaignCodeAction" class="Shopware\Core\Content\Flow\Dispatching\Action\AddCustomerAffiliateAndCampaignCodeAction">
      <tag name="flow.action" priority="350" key="action.add.customer.affiliate.and.campaign.code"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="customer.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\AddOrderAffiliateAndCampaignCodeAction" class="Shopware\Core\Content\Flow\Dispatching\Action\AddOrderAffiliateAndCampaignCodeAction">
      <tag name="flow.action" priority="350" key="action.add.order.affiliate.and.campaign.code"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="order.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Action\StopFlowAction" class="Shopware\Core\Content\Flow\Dispatching\Action\StopFlowAction">
      <tag name="flow.action" priority="1" key="action.stop.flow"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Api\FlowActionCollector" class="Shopware\Core\Content\Flow\Api\FlowActionCollector">
      <argument type="tagged_iterator" tag="flow.action"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="app_flow_action.repository"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\CachedFlowLoader" class="Shopware\Core\Content\Flow\Dispatching\CachedFlowLoader" public="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="Shopware\Core\Content\Flow\Dispatching\FlowLoader" inner="Shopware\Core\Content\Flow\Dispatching\CachedFlowLoader.inner"/>
      <argument type="service" id="Shopware\Core\Content\Flow\Dispatching\CachedFlowLoader.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Indexing\FlowPayloadUpdater" class="Shopware\Core\Content\Flow\Indexing\FlowPayloadUpdater">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Content\Flow\Dispatching\FlowBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Indexing\FlowIndexer" class="Shopware\Core\Content\Flow\Indexing\FlowIndexer">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="flow.repository"/>
      <argument type="service" id="Shopware\Core\Content\Flow\Indexing\FlowPayloadUpdater"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber" class="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="messenger.bus.shopware"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\FlowBuilder" class="Shopware\Core\Content\Flow\Dispatching\FlowBuilder"/>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\OrderStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\OrderStorer">
      <tag name="flow.storer"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\ProductStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\ProductStorer">
      <tag name="flow.storer"/>
      <argument type="service" id="product.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\CustomerStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\CustomerStorer">
      <tag name="flow.storer"/>
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\MailStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\MailStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\UserStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\UserStorer">
      <tag name="flow.storer"/>
      <argument type="service" id="user_recovery.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\CustomerGroupStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\CustomerGroupStorer">
      <tag name="flow.storer"/>
      <argument type="service" id="customer_group.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\CustomerRecoveryStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\CustomerRecoveryStorer">
      <tag name="flow.storer"/>
      <argument type="service" id="customer_recovery.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\OrderTransactionStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\OrderTransactionStorer">
      <tag name="flow.storer"/>
      <argument type="service" id="order_transaction.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\NewsletterRecipientStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\NewsletterRecipientStorer">
      <tag name="flow.storer"/>
      <argument type="service" id="newsletter_recipient.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\ContactFormDataStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\ContactFormDataStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\ReviewFormDataStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\ReviewFormDataStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\ScalarValuesStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\ScalarValuesStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\ConfirmUrlStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\ConfirmUrlStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\ContentsStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\ContentsStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\ContextTokenStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\ContextTokenStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\EmailStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\EmailStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\MessageStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\MessageStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\NameStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\NameStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\RecipientsStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\RecipientsStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\ResetUrlStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\ResetUrlStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\ShopNameStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\ShopNameStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\SubjectStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\SubjectStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\TemplateDataStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\TemplateDataStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\UrlStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\UrlStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\MediaUploadedStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\MediaUploadedStorer">
      <tag name="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\Storer\CustomAppStorer" class="Shopware\Core\Content\Flow\Dispatching\Storer\CustomAppStorer">
      <tag name="flow.storer" priority="999"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\FlowFactory" class="Shopware\Core\Content\Flow\Dispatching\FlowFactory" public="true">
      <argument type="tagged_iterator" tag="flow.storer"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Rule\OrderTagRule" class="Shopware\Core\Content\Flow\Rule\OrderTagRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Rule\OrderTrackingCodeRule" class="Shopware\Core\Content\Flow\Rule\OrderTrackingCodeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Rule\OrderDeliveryStatusRule" class="Shopware\Core\Content\Flow\Rule\OrderDeliveryStatusRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Rule\OrderCreatedByAdminRule" class="Shopware\Core\Content\Flow\Rule\OrderCreatedByAdminRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Rule\OrderTransactionStatusRule" class="Shopware\Core\Content\Flow\Rule\OrderTransactionStatusRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Rule\OrderStatusRule" class="Shopware\Core\Content\Flow\Rule\OrderStatusRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Rule\OrderCustomFieldRule" class="Shopware\Core\Content\Flow\Rule\OrderCustomFieldRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Rule\OrderDocumentTypeRule" class="Shopware\Core\Content\Flow\Rule\OrderDocumentTypeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Aggregate\FlowTemplate\FlowTemplateDefinition" class="Shopware\Core\Content\Flow\Aggregate\FlowTemplate\FlowTemplateDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Content\Flow\DataAbstractionLayer\FieldSerializer\FlowTemplateConfigFieldSerializer" class="Shopware\Core\Content\Flow\DataAbstractionLayer\FieldSerializer\FlowTemplateConfigFieldSerializer" public="true">
      <tag name="shopware.field_serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Controller\TriggerFlowController" class="Shopware\Core\Content\Flow\Controller\TriggerFlowController" public="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="app_flow_event.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="checkout.filesystem.private" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument>plugins/checkout</argument>
    </service>
    <service id="checkout.filesystem.public" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument>plugins/checkout</argument>
    </service>
    <service id="Shopware\Core\Checkout\Cart\CreditCartProcessor" class="Shopware\Core\Checkout\Cart\CreditCartProcessor">
      <tag name="shopware.cart.processor"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\AbsolutePriceCalculator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\CustomCartProcessor" class="Shopware\Core\Checkout\Cart\CustomCartProcessor">
      <tag name="shopware.cart.processor" priority="4000"/>
      <tag name="shopware.cart.collector"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\CartValueResolver" class="Shopware\Core\Checkout\Cart\CartValueResolver">
      <tag name="controller.argument_value_resolver" priority="1001"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Price\AmountCalculator" class="Shopware\Core\Checkout\Cart\Price\AmountCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\CashRounding"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Tax\PercentageTaxRuleBuilder"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Tax\TaxCalculator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Cleanup\CleanupCartTask" class="Shopware\Core\Checkout\Cart\Cleanup\CleanupCartTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Cleanup\CleanupCartTaskHandler" class="Shopware\Core\Checkout\Cart\Cleanup\CleanupCartTaskHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument>120</argument>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Price\CashRounding" class="Shopware\Core\Checkout\Cart\Price\CashRounding"/>
    <service id="Shopware\Core\Checkout\Cart\CartPersister" class="Shopware\Core\Checkout\Cart\CartPersister">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartSerializationCleaner"/>
      <argument>false</argument>
    </service>
    <service id="Shopware\Core\Checkout\Cart\CartSerializationCleaner" class="Shopware\Core\Checkout\Cart\CartSerializationCleaner">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\SalesChannel\CartService" class="Shopware\Core\Checkout\Cart\SalesChannel\CartService" public="true" lazy="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartLoadRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartDeleteRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartItemAddRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartItemUpdateRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartItemRemoveRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartOrderRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartFactory"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\CartCalculator" class="Shopware\Core\Checkout\Cart\CartCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartRuleLoader"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\CartFactory" class="Shopware\Core\Checkout\Cart\CartFactory">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\SalesChannel\CartItemUpdateRoute" class="Shopware\Core\Checkout\Cart\SalesChannel\CartItemUpdateRoute" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItemFactoryRegistry"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\SalesChannel\CartLoadRoute" class="Shopware\Core\Checkout\Cart\SalesChannel\CartLoadRoute" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartFactory"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\TaxProvider\TaxProviderProcessor"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\SalesChannel\CartDeleteRoute" class="Shopware\Core\Checkout\Cart\SalesChannel\CartDeleteRoute" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\SalesChannel\CartItemRemoveRoute" class="Shopware\Core\Checkout\Cart\SalesChannel\CartItemRemoveRoute" public="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\SalesChannel\CartItemAddRoute" class="Shopware\Core\Checkout\Cart\SalesChannel\CartItemAddRoute" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItemFactoryRegistry"/>
      <argument type="service" id="shopware.rate_limiter"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\SalesChannel\CartOrderRoute" class="Shopware\Core\Checkout\Cart\SalesChannel\CartOrderRoute" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartCalculator"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderPersister"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\PreparedPaymentService"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\TaxProvider\TaxProviderProcessor"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator" class="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\GrossPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\NetPriceCalculator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Price\GrossPriceCalculator" class="Shopware\Core\Checkout\Cart\Price\GrossPriceCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Tax\TaxCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\CashRounding"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Price\NetPriceCalculator" class="Shopware\Core\Checkout\Cart\Price\NetPriceCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Tax\TaxCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\CashRounding"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Price\PercentagePriceCalculator" class="Shopware\Core\Checkout\Cart\Price\PercentagePriceCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\CashRounding"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Tax\PercentageTaxRuleBuilder"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Price\AbsolutePriceCalculator" class="Shopware\Core\Checkout\Cart\Price\AbsolutePriceCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Tax\PercentageTaxRuleBuilder"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Price\CurrencyPriceCalculator" class="Shopware\Core\Checkout\Cart\Price\CurrencyPriceCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Tax\PercentageTaxRuleBuilder"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Tax\PercentageTaxRuleBuilder" class="Shopware\Core\Checkout\Cart\Tax\PercentageTaxRuleBuilder"/>
    <service id="Shopware\Core\Checkout\Cart\Tax\TaxDetector" class="Shopware\Core\Checkout\Cart\Tax\TaxDetector"/>
    <service id="Shopware\Core\Checkout\Cart\Tax\TaxCalculator" class="Shopware\Core\Checkout\Cart\Tax\TaxCalculator"/>
    <service id="Shopware\Core\Checkout\Cart\TaxProvider\TaxProviderProcessor" class="Shopware\Core\Checkout\Cart\TaxProvider\TaxProviderProcessor">
      <argument type="service" id="tax_provider.repository"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\TaxProvider\TaxAdjustment"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\TaxProvider\TaxProviderRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\App\TaxProvider\Payload\TaxProviderPayloadService"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\TaxProvider\TaxProviderRegistry" class="Shopware\Core\Checkout\Cart\TaxProvider\TaxProviderRegistry" public="true">
      <argument type="tagged_iterator" tag="shopware.tax.provider"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\TaxProvider\TaxAdjustmentCalculator" class="Shopware\Core\Checkout\Cart\TaxProvider\TaxAdjustmentCalculator"/>
    <service id="shopware.tax.adjustment_calculator" class="Shopware\Core\Checkout\Cart\Price\AmountCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\CashRounding"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Tax\PercentageTaxRuleBuilder"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\TaxProvider\TaxAdjustmentCalculator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\TaxProvider\TaxAdjustment" class="Shopware\Core\Checkout\Cart\TaxProvider\TaxAdjustment">
      <argument type="service" id="shopware.tax.adjustment_calculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\CashRounding"/>
    </service>
    <service id="Shopware\Core\Framework\App\TaxProvider\Payload\TaxProviderPayloadService" class="Shopware\Core\Framework\App\TaxProvider\Payload\TaxProviderPayloadService">
      <argument type="service" id="Shopware\Core\Framework\App\AppPayloadServiceHelper"/>
      <argument type="service" id="shopware.app_system.guzzle"/>
      <argument>%env(APP_URL)%</argument>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Delivery\DeliveryBuilder" class="Shopware\Core\Checkout\Cart\Delivery\DeliveryBuilder"/>
    <service id="Shopware\Core\Checkout\Cart\Delivery\DeliveryCalculator" class="Shopware\Core\Checkout\Cart\Delivery\DeliveryCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Tax\PercentageTaxRuleBuilder"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\PriceActionController" class="Shopware\Core\Checkout\Cart\PriceActionController" public="true">
      <argument type="service" id="tax.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\NetPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\GrossPriceCalculator"/>
      <argument type="service" id="currency.repository"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Calculator" class="Shopware\Core\Checkout\Cart\Calculator" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\PercentagePriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\AbsolutePriceCalculator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Delivery\DeliveryProcessor" class="Shopware\Core\Checkout\Cart\Delivery\DeliveryProcessor">
      <tag name="shopware.cart.processor" priority="-5000"/>
      <tag name="shopware.cart.collector" priority="-5000"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Delivery\DeliveryBuilder"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Delivery\DeliveryCalculator"/>
      <argument type="service" id="shipping_method.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Delivery\DeliveryValidator" class="Shopware\Core\Checkout\Cart\Delivery\DeliveryValidator">
      <tag name="shopware.cart.validator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItem\LineItemValidator" class="Shopware\Core\Checkout\Cart\LineItem\LineItemValidator">
      <tag name="shopware.cart.validator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Address\AddressValidator" class="Shopware\Core\Checkout\Cart\Address\AddressValidator">
      <tag name="shopware.cart.validator"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="country.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Validator" class="Shopware\Core\Checkout\Cart\Validator">
      <argument type="tagged_iterator" tag="shopware.cart.validator"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cart\ProductLineItemValidator" class="Shopware\Core\Content\Product\Cart\ProductLineItemValidator">
      <tag name="shopware.cart.validator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Processor" class="Shopware\Core\Checkout\Cart\Processor">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Validator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\AmountCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Transaction\TransactionProcessor"/>
      <argument type="tagged_iterator" tag="shopware.cart.processor"/>
      <argument type="tagged_iterator" tag="shopware.cart.collector"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Execution\ScriptExecutor"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cart\ProductCartProcessor" class="Shopware\Core\Content\Product\Cart\ProductCartProcessor">
      <tag name="shopware.cart.processor" priority="5000"/>
      <tag name="shopware.cart.collector" priority="5000"/>
      <argument type="service" id="Shopware\Core\Content\Product\Cart\ProductGateway"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Content\Product\Cart\ProductFeatureBuilder"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Content\Product\Cart\ProductFeatureBuilder" class="Shopware\Core\Content\Product\Cart\ProductFeatureBuilder">
      <argument type="service" id="custom_field.repository"/>
      <argument type="service" id="Shopware\Core\System\Locale\LanguageLocaleCodeProvider"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Transaction\TransactionProcessor" class="Shopware\Core\Checkout\Cart\Transaction\TransactionProcessor"/>
    <service id="Shopware\Core\Checkout\Cart\Order\Api\OrderConverterController" class="Shopware\Core\Checkout\Cart\Order\Api\OrderConverterController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderConverter"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
      <argument type="service" id="order.repository"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Order\Api\OrderRecalculationController" class="Shopware\Core\Checkout\Cart\Order\Api\OrderRecalculationController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\RecalculationService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Order\RecalculationService" class="Shopware\Core\Checkout\Cart\Order\RecalculationService">
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderConverter"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="product.repository"/>
      <argument type="service" id="order_address.repository"/>
      <argument type="service" id="customer_address.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Processor"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartRuleLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\PromotionItemBuilder"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\CartRuleLoader" class="Shopware\Core\Checkout\Cart\CartRuleLoader">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Processor"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CachedRuleLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Tax\TaxDetector"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartFactory"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\CachedRuleLoader" class="Shopware\Core\Checkout\Cart\CachedRuleLoader">
      <tag name="container.decorator" id="Shopware\Core\Checkout\Cart\RuleLoader" inner="Shopware\Core\Checkout\Cart\CachedRuleLoader.inner"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CachedRuleLoader.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItem\LineItemQuantitySplitter" class="Shopware\Core\Checkout\Cart\LineItem\LineItemQuantitySplitter">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\PriceDefinitionFactory" class="Shopware\Core\Checkout\Cart\PriceDefinitionFactory"/>
    <service id="Shopware\Core\Checkout\Cart\LineItemFactoryRegistry" class="Shopware\Core\Checkout\Cart\LineItemFactoryRegistry">
      <argument type="tagged_iterator" tag="shopware.cart.line_item.factory"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItemFactoryHandler\ProductLineItemFactory" class="Shopware\Core\Checkout\Cart\LineItemFactoryHandler\ProductLineItemFactory">
      <tag name="shopware.cart.line_item.factory"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\PriceDefinitionFactory"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItemFactoryHandler\PromotionLineItemFactory" class="Shopware\Core\Checkout\Cart\LineItemFactoryHandler\PromotionLineItemFactory">
      <tag name="shopware.cart.line_item.factory"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItemFactoryHandler\CreditLineItemFactory" class="Shopware\Core\Checkout\Cart\LineItemFactoryHandler\CreditLineItemFactory">
      <tag name="shopware.cart.line_item.factory"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\PriceDefinitionFactory"/>
      <argument type="service" id="media.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItemFactoryHandler\CustomLineItemFactory" class="Shopware\Core\Checkout\Cart\LineItemFactoryHandler\CustomLineItemFactory">
      <tag name="shopware.cart.line_item.factory"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\PriceDefinitionFactory"/>
      <argument type="service" id="media.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItem\Group\RulesMatcher\AbstractAnyRuleLineItemMatcher" class="Shopware\Core\Checkout\Cart\LineItem\Group\RulesMatcher\AnyRuleLineItemMatcher"/>
    <service id="Shopware\Core\Checkout\Cart\LineItem\Group\AbstractProductLineItemProvider" class="Shopware\Core\Checkout\Cart\LineItem\Group\ProductLineItemProvider"/>
    <service id="Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupBuilder" class="Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupBuilder">
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupServiceRegistry"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\Group\RulesMatcher\AnyRuleMatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\LineItemQuantitySplitter"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\Group\AbstractProductLineItemProvider"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupServiceRegistry" class="Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupServiceRegistry">
      <argument type="tagged_iterator" tag="lineitem.group.packager"/>
      <argument type="tagged_iterator" tag="lineitem.group.sorter"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItem\Group\Packager\LineItemGroupCountPackager" class="Shopware\Core\Checkout\Cart\LineItem\Group\Packager\LineItemGroupCountPackager">
      <tag name="lineitem.group.packager"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItem\Group\Packager\LineItemGroupUnitPriceGrossPackager" class="Shopware\Core\Checkout\Cart\LineItem\Group\Packager\LineItemGroupUnitPriceGrossPackager">
      <tag name="lineitem.group.packager"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItem\Group\Packager\LineItemGroupUnitPriceNetPackager" class="Shopware\Core\Checkout\Cart\LineItem\Group\Packager\LineItemGroupUnitPriceNetPackager">
      <tag name="lineitem.group.packager"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItem\Group\Sorter\LineItemGroupPriceAscSorter" class="Shopware\Core\Checkout\Cart\LineItem\Group\Sorter\LineItemGroupPriceAscSorter">
      <tag name="lineitem.group.sorter"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItem\Group\Sorter\LineItemGroupPriceDescSorter" class="Shopware\Core\Checkout\Cart\LineItem\Group\Sorter\LineItemGroupPriceDescSorter">
      <tag name="lineitem.group.sorter"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\LineItem\Group\RulesMatcher\AnyRuleMatcher" class="Shopware\Core\Checkout\Cart\LineItem\Group\RulesMatcher\AnyRuleMatcher">
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\Group\RulesMatcher\AbstractAnyRuleLineItemMatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Facade\CartFacadeHookFactory" class="Shopware\Core\Checkout\Cart\Facade\CartFacadeHookFactory" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Facade\CartFacadeHelper"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Facade\ScriptPriceStubs"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Facade\PriceFactoryFactory" class="Shopware\Core\Checkout\Cart\Facade\PriceFactoryFactory" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Facade\ScriptPriceStubs"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Facade\ScriptPriceStubs" class="Shopware\Core\Checkout\Cart\Facade\ScriptPriceStubs">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\PercentagePriceCalculator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Facade\CartFacadeHelper" class="Shopware\Core\Checkout\Cart\Facade\CartFacadeHelper">
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItemFactoryRegistry"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Processor"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Facade\ScriptPriceStubs"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Processor\ContainerCartProcessor" class="Shopware\Core\Checkout\Cart\Processor\ContainerCartProcessor">
      <tag name="shopware.cart.processor" priority="3800"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\PercentagePriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\CurrencyPriceCalculator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Processor\DiscountCartProcessor" class="Shopware\Core\Checkout\Cart\Processor\DiscountCartProcessor">
      <tag name="shopware.cart.processor" priority="3700"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\PercentagePriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\CurrencyPriceCalculator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Command\CartMigrateCommand" class="Shopware\Core\Checkout\Cart\Command\CartMigrateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument>false</argument>
      <argument>120</argument>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\RedisConnectionFactory"/>
      <call method="setName">
        <argument>cart:migrate</argument>
      </call>
      <call method="setDescription">
        <argument>Migrate carts from redis to database</argument>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Customer\CustomerDefinition" class="Shopware\Core\Checkout\Customer\CustomerDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupRegistrationSalesChannel\CustomerGroupRegistrationSalesChannelDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupRegistrationSalesChannel\CustomerGroupRegistrationSalesChannelDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\AccountService" class="Shopware\Core\Checkout\Customer\SalesChannel\AccountService">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\Password\LegacyPasswordVerifier"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\SwitchDefaultAddressRoute"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CartRestorer"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Validation\AddressValidationFactory" class="Shopware\Core\Checkout\Customer\Validation\AddressValidationFactory">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Validation\CustomerProfileValidationFactory" class="Shopware\Core\Checkout\Customer\Validation\CustomerProfileValidationFactory">
      <argument type="service" id="Shopware\Core\System\Salutation\SalutationDefinition"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument>%customer.account_types%</argument>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Validation\CustomerValidationFactory" class="Shopware\Core\Checkout\Customer\Validation\CustomerValidationFactory">
      <argument type="service" id="Shopware\Core\Checkout\Customer\Validation\CustomerProfileValidationFactory"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerEmailUniqueValidator" class="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerEmailUniqueValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerPasswordMatchesValidator" class="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerPasswordMatchesValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\AccountService"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerVatIdentificationValidator" class="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerVatIdentificationValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerZipCodeValidator" class="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerZipCodeValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="country.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Password\LegacyEncoder\Md5" class="Shopware\Core\Checkout\Customer\Password\LegacyEncoder\Md5">
      <tag name="shopware.legacy_encoder"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Password\LegacyEncoder\Sha256" class="Shopware\Core\Checkout\Customer\Password\LegacyEncoder\Sha256">
      <tag name="shopware.legacy_encoder"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Password\LegacyPasswordVerifier" class="Shopware\Core\Checkout\Customer\Password\LegacyPasswordVerifier">
      <argument type="tagged_iterator" tag="shopware.legacy_encoder"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Subscriber\CustomerMetaFieldSubscriber" class="Shopware\Core\Checkout\Customer\Subscriber\CustomerMetaFieldSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Service\ProductReviewCountService" class="Shopware\Core\Checkout\Customer\Service\ProductReviewCountService">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Subscriber\ProductReviewSubscriber" class="Shopware\Core\Checkout\Customer\Subscriber\ProductReviewSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\Service\ProductReviewCountService"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Subscriber\CustomerRemoteAddressSubscriber" class="Shopware\Core\Checkout\Customer\Subscriber\CustomerRemoteAddressSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Subscriber\CustomerTokenSubscriber" class="Shopware\Core\Checkout\Customer\Subscriber\CustomerTokenSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Subscriber\CustomerGroupSubscriber" class="Shopware\Core\Checkout\Customer\Subscriber\CustomerGroupSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="customer_group.repository"/>
      <argument type="service" id="seo_url.repository"/>
      <argument type="service" id="language.repository"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlPersister"/>
      <argument type="service" id="slugify"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Subscriber\CustomerChangePasswordSubscriber" class="Shopware\Core\Checkout\Customer\Subscriber\CustomerChangePasswordSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Subscriber\CustomerFlowEventsSubscriber" class="Shopware\Core\Checkout\Customer\Subscriber\CustomerFlowEventsSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextRestorer"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\DataAbstractionLayer\CustomerIndexer"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\LoginRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\LoginRoute" public="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\AccountService"/>
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CartRestorer"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Shopware\Core\Framework\RateLimiter\RateLimiter"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\LogoutRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\LogoutRoute" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\SendPasswordRecoveryMailRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\SendPasswordRecoveryMailRoute" public="true">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="customer_recovery.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="shopware.rate_limiter"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\ResetPasswordRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\ResetPasswordRoute" public="true">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="customer_recovery.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="shopware.rate_limiter"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\CustomerRecoveryIsExpiredRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\CustomerRecoveryIsExpiredRoute" public="true">
      <argument type="service" id="customer_recovery.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="shopware.rate_limiter"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\ChangePaymentMethodRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\ChangePaymentMethodRoute" public="true">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="payment_method.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\ChangeCustomerProfileRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\ChangeCustomerProfileRoute" public="true">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\Validation\CustomerProfileValidationFactory"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\StoreApiCustomFieldMapper"/>
      <argument type="service" id="salutation.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\ChangePasswordRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\ChangePasswordRoute" public="true">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\ChangeEmailRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\ChangeEmailRoute" public="true">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\ChangeLanguageRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\ChangeLanguageRoute" public="true">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\CustomerRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\CustomerRoute" public="true">
      <argument type="service" id="customer.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\DeleteCustomerRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\DeleteCustomerRoute" public="true">
      <argument type="service" id="customer.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\RegisterRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\RegisterRoute" public="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGeneratorInterface"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\Validation\CustomerValidationFactory"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\Validation\AddressValidationFactory"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
      <argument type="service" id="sales_channel.country.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\StoreApiCustomFieldMapper"/>
      <argument type="service" id="salutation.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\RegisterConfirmRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\RegisterConfirmRoute" public="true">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextPersister"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\ListAddressRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\ListAddressRoute" public="true">
      <argument type="service" id="customer_address.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\UpsertAddressRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\UpsertAddressRoute" public="true">
      <argument type="service" id="customer_address.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\Validation\AddressValidationFactory"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\StoreApiCustomFieldMapper"/>
      <argument type="service" id="salutation.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\DeleteAddressRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\DeleteAddressRoute" public="true">
      <argument type="service" id="customer_address.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\SwitchDefaultAddressRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\SwitchDefaultAddressRoute" public="true">
      <argument type="service" id="customer_address.repository"/>
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\CustomerGroupRegistrationSettingsRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\CustomerGroupRegistrationSettingsRoute" public="true">
      <argument type="service" id="customer_group.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\DataAbstractionLayer\CustomerIndexer" class="Shopware\Core\Checkout\Customer\DataAbstractionLayer\CustomerIndexer">
      <tag name="shopware.entity_indexer" priority="100"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\ManyToManyIdFieldUpdater"/>
      <argument type="service" id="Shopware\Core\Content\Newsletter\DataAbstractionLayer\Indexing\CustomerNewsletterSalesChannelsUpdater"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Api\CustomerGroupRegistrationActionController" class="Shopware\Core\Checkout\Customer\Api\CustomerGroupRegistrationActionController" public="true">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="customer_group.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextRestorer"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlist\CustomerWishlistDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlist\CustomerWishlistDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlistProduct\CustomerWishlistProductDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlistProduct\CustomerWishlistProductDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\LoadWishlistRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\LoadWishlistRoute" public="true">
      <argument type="service" id="customer_wishlist.repository"/>
      <argument type="service" id="sales_channel.product.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\ProductCloseoutFilterFactory"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\AddWishlistProductRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\AddWishlistProductRoute" public="true">
      <argument type="service" id="customer_wishlist.repository"/>
      <argument type="service" id="sales_channel.product.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\RemoveWishlistProductRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\RemoveWishlistProductRoute" public="true">
      <argument type="service" id="customer_wishlist.repository"/>
      <argument type="service" id="customer_wishlist_product.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\DataAbstractionLayer\CustomerWishlistProductExceptionHandler" class="Shopware\Core\Checkout\Customer\DataAbstractionLayer\CustomerWishlistProductExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\MergeWishlistProductRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\MergeWishlistProductRoute" public="true">
      <argument type="service" id="customer_wishlist.repository"/>
      <argument type="service" id="sales_channel.product.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\CustomerValueResolver" class="Shopware\Core\Checkout\Customer\CustomerValueResolver">
      <tag name="controller.argument_value_resolver" priority="1002"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\AccountNewsletterRecipientRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\AccountNewsletterRecipientRoute" public="true">
      <argument type="service" id="sales_channel.newsletter_recipient.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\DeleteUnusedGuestCustomerService" class="Shopware\Core\Checkout\Customer\DeleteUnusedGuestCustomerService">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Command\DeleteUnusedGuestCustomersCommand" class="Shopware\Core\Checkout\Customer\Command\DeleteUnusedGuestCustomersCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\DeleteUnusedGuestCustomerService"/>
      <call method="setName">
        <argument>customer:delete-unused-guests</argument>
      </call>
      <call method="setDescription">
        <argument>Delete unused guest customers</argument>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Customer\DeleteUnusedGuestCustomerHandler" class="Shopware\Core\Checkout\Customer\DeleteUnusedGuestCustomerHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\DeleteUnusedGuestCustomerService"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Subscriber\CustomerBeforeDeleteSubscriber" class="Shopware\Core\Checkout\Customer\Subscriber\CustomerBeforeDeleteSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\SalesChannel\DownloadRoute" class="Shopware\Core\Checkout\Customer\SalesChannel\DownloadRoute" public="true">
      <argument type="service" id="order_line_item_download.repository"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\DownloadResponseGenerator"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Subscriber\CustomerSalutationSubscriber" class="Shopware\Core\Checkout\Customer\Subscriber\CustomerSalutationSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Document\DocumentDefinition" class="Shopware\Core\Checkout\Document\DocumentDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition" class="Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition" class="Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition" class="Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition" class="Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Document\Twig\DocumentTemplateRenderer" class="Shopware\Core\Checkout\Document\Twig\DocumentTemplateRenderer">
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\TemplateFinder"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Document\DocumentGeneratorController" class="Shopware\Core\Checkout\Document\DocumentGeneratorController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentGenerator"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="pdf.merger" class="setasign\Fpdi\Tcpdf\Fpdi"/>
    <service id="Shopware\Core\Checkout\Document\Service\DocumentConfigLoader" class="Shopware\Core\Checkout\Document\Service\DocumentConfigLoader">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="document_base_config.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Document\Service\ReferenceInvoiceLoader" class="Shopware\Core\Checkout\Document\Service\ReferenceInvoiceLoader">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Document\Renderer\InvoiceRenderer" class="Shopware\Core\Checkout\Document\Renderer\InvoiceRenderer">
      <tag name="document.renderer"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentConfigLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Twig\DocumentTemplateRenderer"/>
      <argument type="service" id="Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGeneratorInterface"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Document\Renderer\DeliveryNoteRenderer" class="Shopware\Core\Checkout\Document\Renderer\DeliveryNoteRenderer">
      <tag name="document.renderer"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentConfigLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Twig\DocumentTemplateRenderer"/>
      <argument type="service" id="Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGeneratorInterface"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Document\Renderer\StornoRenderer" class="Shopware\Core\Checkout\Document\Renderer\StornoRenderer">
      <tag name="document.renderer"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentConfigLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Twig\DocumentTemplateRenderer"/>
      <argument type="service" id="Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGeneratorInterface"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\ReferenceInvoiceLoader"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Document\Renderer\CreditNoteRenderer" class="Shopware\Core\Checkout\Document\Renderer\CreditNoteRenderer">
      <tag name="document.renderer"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentConfigLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Twig\DocumentTemplateRenderer"/>
      <argument type="service" id="Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGeneratorInterface"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\ReferenceInvoiceLoader"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Document\Renderer\DocumentRendererRegistry" class="Shopware\Core\Checkout\Document\Renderer\DocumentRendererRegistry">
      <argument type="tagged_iterator" tag="document.renderer"/>
    </service>
    <service id="Shopware\Core\Checkout\Document\Service\PdfRenderer" class="Shopware\Core\Checkout\Document\Service\PdfRenderer">
      <argument>%shopware.dompdf.options%</argument>
    </service>
    <service id="Shopware\Core\Checkout\Document\Service\DocumentGenerator" class="Shopware\Core\Checkout\Document\Service\DocumentGenerator">
      <argument type="service" id="Shopware\Core\Checkout\Document\Renderer\DocumentRendererRegistry"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\PdfRenderer"/>
      <argument type="service" id="Shopware\Core\Content\Media\MediaService"/>
      <argument type="service" id="document.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Document\Service\DocumentMerger" class="Shopware\Core\Checkout\Document\Service\DocumentMerger">
      <argument type="service" id="document.repository"/>
      <argument type="service" id="Shopware\Core\Content\Media\MediaService"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentGenerator"/>
      <argument type="service" id="pdf.merger"/>
    </service>
    <service id="Shopware\Core\Checkout\Document\Controller\DocumentController" class="Shopware\Core\Checkout\Document\Controller\DocumentController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentGenerator"/>
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentMerger"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Document\SalesChannel\DocumentRoute" class="Shopware\Core\Checkout\Document\SalesChannel\DocumentRoute" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Document\Service\DocumentGenerator"/>
    </service>
    <service id="Shopware\Core\Checkout\Order\OrderDefinition" class="Shopware\Core\Checkout\Order\OrderDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\OrderExceptionHandler" class="Shopware\Core\Checkout\Order\OrderExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderLineItemDownload\OrderLineItemDownloadDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderLineItemDownload\OrderLineItemDownloadDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCapture\OrderTransactionCaptureDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCapture\OrderTransactionCaptureDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefundPosition\OrderTransactionCaptureRefundPositionDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefundPosition\OrderTransactionCaptureRefundPositionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\SalesChannel\OrderService" class="Shopware\Core\Checkout\Order\SalesChannel\OrderService">
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Validation\OrderValidationFactory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="payment_method.repository"/>
      <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineRegistry"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="mail_template.repository"/>
      <argument type="service" id="document.repository"/>
      <argument type="service" id="Shopware\Core\Content\Mail\Service\MailService"/>
      <argument type="service" id="sales_channel.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Order\Validation\OrderValidationFactory" class="Shopware\Core\Checkout\Order\Validation\OrderValidationFactory"/>
    <service id="Shopware\Core\Checkout\Cart\Order\OrderPersister" class="Shopware\Core\Checkout\Cart\Order\OrderPersister">
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderConverter"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Order\LineItemDownloadLoader" class="Shopware\Core\Checkout\Cart\Order\LineItemDownloadLoader">
      <argument type="service" id="product_download.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Order\OrderConverter" class="Shopware\Core\Checkout\Cart\Order\OrderConverter">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\NumberRange\ValueGenerator\NumberRangeValueGeneratorInterface"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\OrderDefinition"/>
      <argument type="service" id="order_address.repository"/>
      <argument type="service" id="Shopware\Core\System\StateMachine\Loader\InitialStateIdLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\LineItemDownloadLoader"/>
      <argument type="service" id="rule.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler" class="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler">
      <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineRegistry"/>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCapture\OrderTransactionCaptureStateHandler" class="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCapture\OrderTransactionCaptureStateHandler">
      <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineRegistry"/>
    </service>
    <service id="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundStateHandler" class="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundStateHandler">
      <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineRegistry"/>
    </service>
    <service id="Shopware\Core\Checkout\Order\Api\OrderActionController" class="Shopware\Core\Checkout\Order\Api\OrderActionController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderService"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\PaymentRefundProcessor"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Order\SalesChannel\OrderRoute" class="Shopware\Core\Checkout\Order\SalesChannel\OrderRoute" public="true">
      <argument type="service" id="order.repository"/>
      <argument type="service" id="promotion.repository"/>
      <argument type="service" id="shopware.rate_limiter"/>
    </service>
    <service id="Shopware\Core\Checkout\Order\SalesChannel\CancelOrderRoute" class="Shopware\Core\Checkout\Order\SalesChannel\CancelOrderRoute" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderService"/>
      <argument type="service" id="order.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Order\SalesChannel\SetPaymentOrderRoute" class="Shopware\Core\Checkout\Order\SalesChannel\SetPaymentOrderRoute" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderService"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\SalesChannel\SortedPaymentMethodRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderConverter"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartRuleLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\StateMachine\Loader\InitialStateIdLoader"/>
    </service>
    <service id="Shopware\Core\Checkout\Order\Listener\OrderStateChangeEventListener" class="Shopware\Core\Checkout\Order\Listener\OrderStateChangeEventListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="order_transaction.repository"/>
      <argument type="service" id="order_delivery.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Event\BusinessEventCollector"/>
      <argument type="service" id="state_machine_state.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Order\Subscriber\OrderSalutationSubscriber" class="Shopware\Core\Checkout\Order\Subscriber\OrderSalutationSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\PaymentMethodDefinition" class="Shopware\Core\Checkout\Payment\PaymentMethodDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Payment\SalesChannel\SalesChannelPaymentMethodDefinition" class="Shopware\Core\Checkout\Payment\SalesChannel\SalesChannelPaymentMethodDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition" class="Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentMethodValidator" class="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentMethodValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\PaymentService" class="Shopware\Core\Checkout\Payment\PaymentService">
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\PaymentTransactionChainProcessor"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\Token\JWTFactoryV2"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PaymentHandlerRegistry"/>
      <argument type="service" id="order_transaction.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\PaymentTransactionStructFactory"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\PreparedPaymentService" class="Shopware\Core\Checkout\Payment\PreparedPaymentService">
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PaymentHandlerRegistry"/>
      <argument type="service" id="app_payment_method.repository"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="Shopware\Core\System\StateMachine\Loader\InitialStateIdLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\PaymentTransactionStructFactory"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Controller\PaymentController" class="Shopware\Core\Checkout\Payment\Controller\PaymentController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Payment\PaymentService"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderConverter"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\Token\JWTFactoryV2"/>
      <argument type="service" id="order.repository"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Cart\PaymentTransactionStructFactory" class="Shopware\Core\Checkout\Payment\Cart\PaymentTransactionStructFactory"/>
    <service id="Shopware\Core\Checkout\Payment\Cart\PaymentTransactionChainProcessor" class="Shopware\Core\Checkout\Payment\Cart\PaymentTransactionChainProcessor">
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\Token\JWTFactoryV2"/>
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PaymentHandlerRegistry"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\System\StateMachine\Loader\InitialStateIdLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\PaymentTransactionStructFactory"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Cart\PaymentRefundProcessor" class="Shopware\Core\Checkout\Payment\Cart\PaymentRefundProcessor" public="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundStateHandler"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PaymentHandlerRegistry"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Cart\PaymentRecurringProcessor" class="Shopware\Core\Checkout\Payment\Cart\PaymentRecurringProcessor" public="true">
      <argument type="service" id="order.repository"/>
      <argument type="service" id="Shopware\Core\System\StateMachine\Loader\InitialStateIdLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PaymentHandlerRegistry"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\Cart\PaymentTransactionStructFactory"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="shopware.jwt_signer" class="Lcobucci\JWT\Signer\Rsa\Sha256"/>
    <service id="shopware.jwt_config" class="Lcobucci\JWT\Configuration">
      <argument type="service" id="shopware.jwt_signer"/>
      <argument type="service" id="shopware.private_key"/>
      <argument type="service" id="shopware.public_key"/>
      <factory class="Shopware\Core\Checkout\Payment\Cart\Token\JWTConfigurationFactory" method="createJWTConfiguration"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Cart\Token\JWTFactoryV2" class="Shopware\Core\Checkout\Payment\Cart\Token\JWTFactoryV2">
      <argument type="service" id="shopware.jwt_config"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PaymentHandlerRegistry" class="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PaymentHandlerRegistry">
      <argument type="service" id=".service_locator.iAsjxbi"/>
      <argument type="service" id=".service_locator.tTw6vfd"/>
      <argument type="service" id=".service_locator.VZ0.H1C"/>
      <argument type="service" id=".service_locator.VZ0.H1C"/>
      <argument type="service" id=".service_locator.Xbsa8iG"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PrePayment" class="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PrePayment">
      <tag name="shopware.payment.method.sync"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DebitPayment" class="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DebitPayment">
      <tag name="shopware.payment.method.sync"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\CashPayment" class="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\CashPayment">
      <tag name="shopware.payment.method.sync"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\InvoicePayment" class="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\InvoicePayment">
      <tag name="shopware.payment.method.sync"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DefaultPayment" class="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DefaultPayment">
      <tag name="shopware.payment.method.sync"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionStateHandler"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentHandlerIdentifierSubscriber" class="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentHandlerIdentifierSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentDistinguishableNameSubscriber" class="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentDistinguishableNameSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentMethodIndexer" class="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentMethodIndexer">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="payment_method.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentDistinguishableNameGenerator"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentDistinguishableNameGenerator" class="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentDistinguishableNameGenerator">
      <argument type="service" id="payment_method.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\Cart\PaymentMethodValidator" class="Shopware\Core\Checkout\Payment\Cart\PaymentMethodValidator">
      <tag name="shopware.cart.validator"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\SalesChannel\CachedPaymentMethodRoute" class="Shopware\Core\Checkout\Payment\SalesChannel\CachedPaymentMethodRoute" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Payment\SalesChannel\CachedPaymentMethodRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\SalesChannel\SortedPaymentMethodRoute" class="Shopware\Core\Checkout\Payment\SalesChannel\SortedPaymentMethodRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Checkout\Payment\SalesChannel\PaymentMethodRoute" inner="Shopware\Core\Checkout\Payment\SalesChannel\CachedPaymentMethodRoute.inner"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\SalesChannel\CachedPaymentMethodRoute"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Execution\ScriptExecutor"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\SalesChannel\HandlePaymentMethodRoute" class="Shopware\Core\Checkout\Payment\SalesChannel\HandlePaymentMethodRoute" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Payment\PaymentService"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\CartAmountRule" class="Shopware\Core\Checkout\Cart\Rule\CartAmountRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\CartPositionPriceRule" class="Shopware\Core\Checkout\Cart\Rule\CartPositionPriceRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\GoodsCountRule" class="Shopware\Core\Checkout\Cart\Rule\GoodsCountRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\GoodsPriceRule" class="Shopware\Core\Checkout\Cart\Rule\GoodsPriceRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemOfTypeRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemOfTypeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Rule\PromotionLineItemRule" class="Shopware\Core\Checkout\Promotion\Rule\PromotionLineItemRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Rule\PromotionCodeOfTypeRule" class="Shopware\Core\Checkout\Promotion\Rule\PromotionCodeOfTypeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Rule\PromotionValueRule" class="Shopware\Core\Checkout\Promotion\Rule\PromotionValueRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Rule\PromotionsInCartCountRule" class="Shopware\Core\Checkout\Promotion\Rule\PromotionsInCartCountRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemTotalPriceRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemTotalPriceRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemUnitPriceRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemUnitPriceRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemWithQuantityRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemWithQuantityRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemWrapperRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemWrapperRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\CartShippingCostRule" class="Shopware\Core\Checkout\Cart\Rule\CartShippingCostRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\CartWeightRule" class="Shopware\Core\Checkout\Cart\Rule\CartWeightRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\CartVolumeRule" class="Shopware\Core\Checkout\Cart\Rule\CartVolumeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\CartHasDeliveryFreeItemRule" class="Shopware\Core\Checkout\Cart\Rule\CartHasDeliveryFreeItemRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\BillingCountryRule" class="Shopware\Core\Checkout\Customer\Rule\BillingCountryRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\BillingStreetRule" class="Shopware\Core\Checkout\Customer\Rule\BillingStreetRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\BillingZipCodeRule" class="Shopware\Core\Checkout\Customer\Rule\BillingZipCodeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\CustomerGroupRule" class="Shopware\Core\Checkout\Customer\Rule\CustomerGroupRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\CustomerTagRule" class="Shopware\Core\Checkout\Customer\Rule\CustomerTagRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\CustomerNumberRule" class="Shopware\Core\Checkout\Customer\Rule\CustomerNumberRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\DifferentAddressesRule" class="Shopware\Core\Checkout\Customer\Rule\DifferentAddressesRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\EmailRule" class="Shopware\Core\Checkout\Customer\Rule\EmailRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\IsNewCustomerRule" class="Shopware\Core\Checkout\Customer\Rule\IsNewCustomerRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\IsActiveRule" class="Shopware\Core\Checkout\Customer\Rule\IsActiveRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\LastNameRule" class="Shopware\Core\Checkout\Customer\Rule\LastNameRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\IsCompanyRule" class="Shopware\Core\Checkout\Customer\Rule\IsCompanyRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\CartTaxDisplayRule" class="Shopware\Core\Checkout\Cart\Rule\CartTaxDisplayRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\CartTotalPurchasePriceRule" class="Shopware\Core\Checkout\Cart\Rule\CartTotalPurchasePriceRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\IsGuestCustomerRule" class="Shopware\Core\Checkout\Customer\Rule\IsGuestCustomerRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\IsNewsletterRecipientRule" class="Shopware\Core\Checkout\Customer\Rule\IsNewsletterRecipientRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\ShippingCountryRule" class="Shopware\Core\Checkout\Customer\Rule\ShippingCountryRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\ShippingStreetRule" class="Shopware\Core\Checkout\Customer\Rule\ShippingStreetRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\BillingCityRule" class="Shopware\Core\Checkout\Customer\Rule\BillingCityRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\ShippingCityRule" class="Shopware\Core\Checkout\Customer\Rule\ShippingCityRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\BillingStateRule" class="Shopware\Core\Checkout\Customer\Rule\BillingStateRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\ShippingStateRule" class="Shopware\Core\Checkout\Customer\Rule\ShippingStateRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\ShippingZipCodeRule" class="Shopware\Core\Checkout\Customer\Rule\ShippingZipCodeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\CustomerLoggedInRule" class="Shopware\Core\Checkout\Customer\Rule\CustomerLoggedInRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemsInCartCountRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemsInCartCountRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\NumberOfReviewsRule" class="Shopware\Core\Checkout\Customer\Rule\NumberOfReviewsRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\OrderCountRule" class="Shopware\Core\Checkout\Customer\Rule\OrderCountRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\DaysSinceLastOrderRule" class="Shopware\Core\Checkout\Customer\Rule\DaysSinceLastOrderRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemTagRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemTagRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\AlwaysValidRule" class="Shopware\Core\Checkout\Cart\Rule\AlwaysValidRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemPropertyRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemPropertyRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemIsNewRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemIsNewRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemOfManufacturerRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemOfManufacturerRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemPurchasePriceRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemPurchasePriceRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemCreationDateRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemCreationDateRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemReleaseDateRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemReleaseDateRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemClearanceSaleRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemClearanceSaleRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemPromotedRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemPromotedRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemInCategoryRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemInCategoryRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemInProductStreamRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemInProductStreamRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemTaxationRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemTaxationRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemDimensionWidthRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemDimensionWidthRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemDimensionHeightRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemDimensionHeightRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemDimensionLengthRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemDimensionLengthRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemDimensionWeightRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemDimensionWeightRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemDimensionVolumeRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemDimensionVolumeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemListPriceRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemListPriceRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemListPriceRatioRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemListPriceRatioRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemCustomFieldRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemCustomFieldRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemStockRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemStockRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemActualStockRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemActualStockRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\PaymentMethodRule" class="Shopware\Core\Checkout\Cart\Rule\PaymentMethodRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\ShippingMethodRule" class="Shopware\Core\Checkout\Cart\Rule\ShippingMethodRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemGoodsTotalRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemGoodsTotalRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\OrderTotalAmountRule" class="Shopware\Core\Checkout\Customer\Rule\OrderTotalAmountRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\CustomerCustomFieldRule" class="Shopware\Core\Checkout\Customer\Rule\CustomerCustomFieldRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\CustomerBirthdayRule" class="Shopware\Core\Checkout\Customer\Rule\CustomerBirthdayRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\CustomerCreatedByAdminRule" class="Shopware\Core\Checkout\Customer\Rule\CustomerCreatedByAdminRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemProductStatesRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemProductStatesRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\CustomerAgeRule" class="Shopware\Core\Checkout\Customer\Rule\CustomerAgeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\CustomerSalutationRule" class="Shopware\Core\Checkout\Customer\Rule\CustomerSalutationRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\DaysSinceLastLoginRule" class="Shopware\Core\Checkout\Customer\Rule\DaysSinceLastLoginRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\DaysSinceFirstLoginRule" class="Shopware\Core\Checkout\Customer\Rule\DaysSinceFirstLoginRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\AffiliateCodeRule" class="Shopware\Core\Checkout\Customer\Rule\AffiliateCodeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\CampaignCodeRule" class="Shopware\Core\Checkout\Customer\Rule\CampaignCodeRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Customer\Rule\CustomerDefaultPaymentMethodRule" class="Shopware\Core\Checkout\Customer\Rule\CustomerDefaultPaymentMethodRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemPropertyValueRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemPropertyValueRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\Rule\LineItemVariantValueRule" class="Shopware\Core\Checkout\Cart\Rule\LineItemVariantValueRule">
      <tag name="shopware.rule.definition"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\PromotionDefinition" class="Shopware\Core\Checkout\Promotion\PromotionDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Validator\PromotionValidator" class="Shopware\Core\Checkout\Promotion\Validator\PromotionValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\PromotionItemBuilder" class="Shopware\Core\Checkout\Promotion\Cart\PromotionItemBuilder"/>
    <service id="Shopware\Core\Checkout\Promotion\Cart\PromotionCollector" class="Shopware\Core\Checkout\Promotion\Cart\PromotionCollector">
      <tag name="shopware.cart.collector" priority="4900"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Gateway\PromotionGateway"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\PromotionItemBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\Util\HtmlSanitizer"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\PromotionProcessor" class="Shopware\Core\Checkout\Promotion\Cart\PromotionProcessor">
      <tag name="shopware.cart.processor" priority="4900"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\PromotionCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupBuilder"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\PromotionDeliveryProcessor" class="Shopware\Core\Checkout\Promotion\Cart\PromotionDeliveryProcessor">
      <tag name="shopware.cart.processor" priority="-5100"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\PromotionDeliveryCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupBuilder"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\PromotionCalculator" class="Shopware\Core\Checkout\Promotion\Cart\PromotionCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\AmountCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\AbsolutePriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupBuilder"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\Discount\Composition\DiscountCompositionBuilder"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\AdvancedPackageFilter"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\AdvancedPackagePicker"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\AdvancedPackageRules"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\LineItemQuantitySplitter"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\PercentagePriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\Discount\ScopePackager\CartScopeDiscountPackager"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\Discount\ScopePackager\SetGroupScopeDiscountPackager"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\Discount\ScopePackager\SetScopeDiscountPackager"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\PromotionDeliveryCalculator" class="Shopware\Core\Checkout\Promotion\Cart\PromotionDeliveryCalculator">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\PercentagePriceCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\PromotionItemBuilder"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Subscriber\Storefront\StorefrontCartSubscriber" class="Shopware\Core\Checkout\Promotion\Subscriber\Storefront\StorefrontCartSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Api\PromotionActionController" class="Shopware\Core\Checkout\Promotion\Api\PromotionActionController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupServiceRegistry"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\FilterServiceRegistry"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Api\PromotionController" class="Shopware\Core\Checkout\Promotion\Api\PromotionController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Util\PromotionCodeService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\AdvancedPackageFilter" class="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\AdvancedPackageFilter">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\FilterServiceRegistry"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\AdvancedPackagePicker" class="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\AdvancedPackagePicker">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\FilterServiceRegistry"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\AdvancedPackageRules" class="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\AdvancedPackageRules"/>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\FilterServiceRegistry" class="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\FilterServiceRegistry">
      <argument type="tagged_iterator" tag="promotion.filter.sorter"/>
      <argument type="tagged_iterator" tag="promotion.filter.picker"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\Sorter\FilterSorterPriceAsc" class="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\Sorter\FilterSorterPriceAsc">
      <tag name="promotion.filter.sorter"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\Sorter\FilterSorterPriceDesc" class="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\Sorter\FilterSorterPriceDesc">
      <tag name="promotion.filter.sorter"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\Picker\VerticalPicker" class="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\Picker\VerticalPicker">
      <tag name="promotion.filter.picker"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\Picker\HorizontalPicker" class="Shopware\Core\Checkout\Promotion\Cart\Discount\Filter\Picker\HorizontalPicker">
      <tag name="promotion.filter.picker"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Gateway\PromotionGateway" class="Shopware\Core\Checkout\Promotion\Gateway\PromotionGateway">
      <argument type="service" id="promotion.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Service\PromotionDateTimeService"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Subscriber\PromotionIndividualCodeRedeemer" class="Shopware\Core\Checkout\Promotion\Subscriber\PromotionIndividualCodeRedeemer">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="promotion_individual_code.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Service\PromotionDateTimeService" class="Shopware\Core\Checkout\Promotion\Service\PromotionDateTimeService"/>
    <service id="Shopware\Core\Checkout\Promotion\Util\PromotionCodeService" class="Shopware\Core\Checkout\Promotion\Util\PromotionCodeService">
      <argument type="service" id="promotion.repository"/>
      <argument type="service" id="promotion_individual_code.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\Composition\DiscountCompositionBuilder" class="Shopware\Core\Checkout\Promotion\Cart\Discount\Composition\DiscountCompositionBuilder"/>
    <service id="Shopware\Core\Checkout\Promotion\DataAbstractionLayer\PromotionIndexer" class="Shopware\Core\Checkout\Promotion\DataAbstractionLayer\PromotionIndexer">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="promotion.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\DataAbstractionLayer\PromotionExclusionUpdater"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\DataAbstractionLayer\PromotionRedemptionUpdater"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\DataAbstractionLayer\PromotionRedemptionUpdater" class="Shopware\Core\Checkout\Promotion\DataAbstractionLayer\PromotionRedemptionUpdater">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\DataAbstractionLayer\PromotionExclusionUpdater" class="Shopware\Core\Checkout\Promotion\DataAbstractionLayer\PromotionExclusionUpdater">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\ScopePackager\CartScopeDiscountPackager" class="Shopware\Core\Checkout\Promotion\Cart\Discount\ScopePackager\CartScopeDiscountPackager"/>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\ScopePackager\SetGroupScopeDiscountPackager" class="Shopware\Core\Checkout\Promotion\Cart\Discount\ScopePackager\SetGroupScopeDiscountPackager">
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupBuilder"/>
    </service>
    <service id="Shopware\Core\Checkout\Promotion\Cart\Discount\ScopePackager\SetScopeDiscountPackager" class="Shopware\Core\Checkout\Promotion\Cart\Discount\ScopePackager\SetScopeDiscountPackager">
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItem\Group\LineItemGroupBuilder"/>
    </service>
    <service id="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceExceptionHandler" class="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="Shopware\Core\Checkout\Shipping\ShippingMethodDefinition" class="Shopware\Core\Checkout\Shipping\ShippingMethodDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Shipping\SalesChannel\SalesChannelShippingMethodDefinition" class="Shopware\Core\Checkout\Shipping\SalesChannel\SalesChannelShippingMethodDefinition" public="true">
      <tag name="shopware.sales_channel.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition" class="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition" class="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition" class="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Core\Checkout\Shipping\SalesChannel\CachedShippingMethodRoute" class="Shopware\Core\Checkout\Shipping\SalesChannel\CachedShippingMethodRoute" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Shipping\SalesChannel\CachedShippingMethodRoute.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Checkout\Shipping\SalesChannel\SortedShippingMethodRoute" class="Shopware\Core\Checkout\Shipping\SalesChannel\SortedShippingMethodRoute" public="true">
      <tag name="container.decorator" id="Shopware\Core\Checkout\Shipping\SalesChannel\ShippingMethodRoute" inner="Shopware\Core\Checkout\Shipping\SalesChannel\CachedShippingMethodRoute.inner"/>
      <argument type="service" id="Shopware\Core\Checkout\Shipping\SalesChannel\CachedShippingMethodRoute"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Execution\ScriptExecutor"/>
    </service>
    <service id="Shopware\Core\Checkout\Shipping\Validator\ShippingMethodValidator" class="Shopware\Core\Checkout\Shipping\Validator\ShippingMethodValidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="maintenance.filesystem.private" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument>plugins/maintenance</argument>
    </service>
    <service id="maintenance.filesystem.public" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument>plugins/maintenance</argument>
    </service>
    <service id="Shopware\Core\Maintenance\System\Service\DatabaseConnectionFactory" class="Shopware\Core\Maintenance\System\Service\DatabaseConnectionFactory" autowire="true"/>
    <service id="Shopware\Core\Maintenance\System\Command\SystemInstallCommand" class="Shopware\Core\Maintenance\System\Command\SystemInstallCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Shopware\Core\Maintenance\System\Service\SetupDatabaseAdapter"/>
      <argument type="service" id="Shopware\Core\Maintenance\System\Service\DatabaseConnectionFactory"/>
      <call method="setName">
        <argument>system:install</argument>
      </call>
      <call method="setDescription">
        <argument>Installs the Shopware 6 system</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\System\Command\SystemIsInstalledCommand" class="Shopware\Core\Maintenance\System\Command\SystemIsInstalledCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <call method="setName">
        <argument>system:is-installed</argument>
      </call>
      <call method="setDescription">
        <argument>Checks if the system is installed and returns exit code 0 if Shopware is installed</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\System\Command\SystemGenerateJwtSecretCommand" class="Shopware\Core\Maintenance\System\Command\SystemGenerateJwtSecretCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Shopware\Core\Maintenance\System\Service\JwtCertificateGenerator"/>
      <call method="setName">
        <argument>system:generate-jwt-secret</argument>
      </call>
      <call method="setDescription">
        <argument>Generates a new JWT secret</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\System\Command\SystemGenerateAppSecretCommand" class="Shopware\Core\Maintenance\System\Command\SystemGenerateAppSecretCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>system:generate-app-secret</argument>
      </call>
      <call method="setDescription">
        <argument>Generates a new app secret</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\System\Command\SystemSetupCommand" class="Shopware\Core\Maintenance\System\Command\SystemSetupCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Shopware\Core\Maintenance\System\Service\JwtCertificateGenerator"/>
      <argument type="service" id="Symfony\Component\Dotenv\Command\DotenvDumpCommand"/>
      <call method="setName">
        <argument>system:setup</argument>
      </call>
      <call method="setDescription">
        <argument>Setup the system</argument>
      </call>
    </service>
    <service id="Symfony\Component\Dotenv\Command\DotenvDumpCommand" class="Symfony\Component\Dotenv\Command\DotenvDumpCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <call method="setName">
        <argument>dotenv:dump</argument>
      </call>
      <call method="setDescription">
        <argument>Compiles .env files to .env.local.php</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\System\Command\SystemUpdatePrepareCommand" class="Shopware\Core\Maintenance\System\Command\SystemUpdatePrepareCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument>6.5.7.3</argument>
      <call method="setName">
        <argument>system:update:prepare</argument>
      </call>
      <call method="setDescription">
        <argument>Prepares the update process</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\System\Command\SystemUpdateFinishCommand" class="Shopware\Core\Maintenance\System\Command\SystemUpdateFinishCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="service_container"/>
      <argument>6.5.7.3</argument>
      <call method="setName">
        <argument>system:update:finish</argument>
      </call>
      <call method="setDescription">
        <argument>Finishes the update process</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelUpdateDomainCommand" class="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelUpdateDomainCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="sales_channel_domain.repository"/>
      <call method="setName">
        <argument>sales-channel:update:domain</argument>
      </call>
      <call method="setDescription">
        <argument>Updates a sales channel domain</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\System\Command\SystemConfigureShopCommand" class="Shopware\Core\Maintenance\System\Command\SystemConfigureShopCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Maintenance\System\Service\ShopConfigurator"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheClearer"/>
      <call method="setName">
        <argument>system:configure-shop</argument>
      </call>
      <call method="setDescription">
        <argument>Configure shop</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\System\Service\JwtCertificateGenerator" class="Shopware\Core\Maintenance\System\Service\JwtCertificateGenerator" autowire="true"/>
    <service id="Shopware\Core\Maintenance\System\Service\AppUrlVerifier" class="Shopware\Core\Maintenance\System\Service\AppUrlVerifier" autowire="true">
      <argument type="service" id="shopware.maintenance.client"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument>dev</argument>
      <argument>%env(bool:APP_URL_CHECK_DISABLED)%</argument>
    </service>
    <service id="shopware.maintenance.client" class="GuzzleHttp\Client" autowire="true"/>
    <service id="Shopware\Core\Maintenance\System\Service\ShopConfigurator" class="Shopware\Core\Maintenance\System\Service\ShopConfigurator" autowire="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelCreateCommand" class="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelCreateCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Maintenance\SalesChannel\Service\SalesChannelCreator"/>
      <call method="setName">
        <argument>sales-channel:create</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new sales channel</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\SalesChannel\Service\SalesChannelCreator" class="Shopware\Core\Maintenance\SalesChannel\Service\SalesChannelCreator" public="true" autowire="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="payment_method.repository"/>
      <argument type="service" id="shipping_method.repository"/>
      <argument type="service" id="country.repository"/>
      <argument type="service" id="category.repository"/>
    </service>
    <service id="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelListCommand" class="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelListCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="sales_channel.repository"/>
      <call method="setName">
        <argument>sales-channel:list</argument>
      </call>
      <call method="setDescription">
        <argument>Lists all sales channels</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceEnableCommand" class="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceEnableCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="sales_channel.repository"/>
      <call method="setName">
        <argument>sales-channel:maintenance:enable</argument>
      </call>
      <call method="setDescription">
        <argument>Enable maintenance mode for a sales channel</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceDisableCommand" class="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceDisableCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="sales_channel.repository"/>
      <call method="setName">
        <argument>sales-channel:maintenance:disable</argument>
      </call>
      <call method="setDescription">
        <argument>Disable maintenance mode for a sales channel</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\User\Command\UserCreateCommand" class="Shopware\Core\Maintenance\User\Command\UserCreateCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Maintenance\User\Service\UserProvisioner"/>
      <call method="setName">
        <argument>user:create</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new user</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\User\Command\UserChangePasswordCommand" class="Shopware\Core\Maintenance\User\Command\UserChangePasswordCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="user.repository"/>
      <call method="setName">
        <argument>user:change-password</argument>
      </call>
      <call method="setDescription">
        <argument>Change the password of a user</argument>
      </call>
    </service>
    <service id="Shopware\Core\Maintenance\User\Service\UserProvisioner" class="Shopware\Core\Maintenance\User\Service\UserProvisioner" public="true" autowire="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Maintenance\System\Service\SetupDatabaseAdapter" class="Shopware\Core\Maintenance\System\Service\SetupDatabaseAdapter" autowire="true"/>
    <service id="profiling.filesystem.private" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument>plugins/profiling</argument>
    </service>
    <service id="profiling.filesystem.public" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument>plugins/profiling</argument>
    </service>
    <service id="Shopware\Core\Profiling\Integration\Stopwatch" class="Shopware\Core\Profiling\Integration\Stopwatch">
      <tag name="shopware.profiler" integration="Symfony"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="Shopware\Core\Profiling\Integration\Tideways" class="Shopware\Core\Profiling\Integration\Tideways">
      <tag name="shopware.profiler" integration="Tideways"/>
    </service>
    <service id="Shopware\Core\Profiling\Integration\Datadog" class="Shopware\Core\Profiling\Integration\Datadog">
      <tag name="shopware.profiler" integration="Datadog"/>
    </service>
    <service id="Shopware\Core\Profiling\Profiler" class="Shopware\Core\Profiling\Profiler" public="true">
      <argument type="tagged_iterator" tag="shopware.profiler" index-by="integration" default-index-method="getDefaultIntegrationName" default-priority-method="getDefaultIntegrationPriority"/>
      <argument>%shopware.profiler.integrations%</argument>
    </service>
    <service id="Shopware\Core\Profiling\Doctrine\ConnectionProfiler" class="Shopware\Core\Profiling\Doctrine\ConnectionProfiler">
      <tag name="data_collector" template="@Profiling/Collector/db.html.twig" id="app.connection_collector" priority="200"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\Profiling\Twig\DoctrineExtension" class="Shopware\Core\Profiling\Twig\DoctrineExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="Shopware\Core\Profiling\Subscriber\ActiveRulesDataCollectorSubscriber" class="Shopware\Core\Profiling\Subscriber\ActiveRulesDataCollectorSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector"/>
      <argument type="service" id="rule.repository"/>
    </service>
    <service id="Shopware\Core\Profiling\Routing\ProfilerWhitelist" class="Shopware\Core\Profiling\Routing\ProfilerWhitelist">
      <tag name="shopware.route_scope_whitelist"/>
    </service>
    <service id="Shopware\Administration\Command\DeleteAdminFilesAfterBuildCommand" class="Shopware\Administration\Command\DeleteAdminFilesAfterBuildCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>administration:delete-files-after-build</argument>
      </call>
      <call method="setDescription">
        <argument>Deletes all unnecessary files of the administration after the build process.</argument>
      </call>
    </service>
    <service id="Shopware\Administration\Command\DeleteExtensionLocalPublicFilesCommand" class="Shopware\Administration\Command\DeleteExtensionLocalPublicFilesCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="kernel"/>
      <call method="setName">
        <argument>administration:delete-extension-local-public-files</argument>
      </call>
      <call method="setDescription">
        <argument>Deletes all files in the local public folder of the extension. This command should run after assets:install so the assets are available in the public folder.</argument>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationSource_Administration" class="Shopware\Core\Framework\Migration\MigrationSource">
      <tag name="shopware.migration_source"/>
      <argument>Administration</argument>
      <argument type="collection">
        <argument key="/home/avinash/Desktop/work/Shopware/vendor/shopware/administration/Migration">Shopware\Administration\Migration</argument>
      </argument>
    </service>
    <service id="administration.filesystem.private" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument>plugins/administration</argument>
    </service>
    <service id="administration.filesystem.public" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument>plugins/administration</argument>
    </service>
    <service id="Shopware\Administration\Controller\AdminExtensionApiController" class="Shopware\Administration\Controller\AdminExtensionApiController" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\ActionButton\Executor"/>
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
      <argument type="service" id="app.repository"/>
      <argument type="service" id="Shopware\Core\Framework\App\Hmac\QuerySigner"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Administration\Controller\AdministrationController" class="Shopware\Administration\Controller\AdministrationController" public="true">
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\TemplateFinder"/>
      <argument type="service" id="Shopware\Core\Framework\Store\Services\FirstRunWizardService"/>
      <argument type="service" id="Shopware\Administration\Snippet\CachedSnippetFinder"/>
      <argument>%kernel.supported_api_versions%</argument>
      <argument type="service" id="Shopware\Administration\Framework\Routing\KnownIps\KnownIpsCollector"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core</argument>
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="currency.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Util\HtmlSanitizer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="parameter_bag"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Administration\Controller\AdminSearchController" class="Shopware\Administration\Controller\AdminSearchController" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Administration\Service\AdminSearcher"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Acl\AclCriteriaValidator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Serializer\JsonEntityEncoder"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Administration\Controller\UserConfigController" class="Shopware\Administration\Controller\UserConfigController" public="true">
      <argument type="service" id="user_config.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Administration\Controller\AdminProductStreamController" class="Shopware\Administration\Controller\AdminProductStreamController" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
      <argument type="service" id="sales_channel.product.repository"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Administration\Controller\AdminTagController" class="Shopware\Administration\Controller\AdminTagController" public="true">
      <argument type="service" id="Shopware\Core\System\Tag\Service\FilterTagIdsService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Administration\Controller\NotificationController" class="Shopware\Administration\Controller\NotificationController" public="true">
      <argument type="service" id="shopware.rate_limiter"/>
      <argument type="service" id="Shopware\Administration\Notification\NotificationService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Administration\Notification\NotificationService" class="Shopware\Administration\Notification\NotificationService" public="true">
      <argument type="service" id="notification.repository"/>
    </service>
    <service id="Shopware\Administration\Notification\Subscriber\UpdateSubscriber" class="Shopware\Administration\Notification\Subscriber\UpdateSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Administration\Notification\NotificationService"/>
    </service>
    <service id="Shopware\Administration\Service\AdminSearcher" class="Shopware\Administration\Service\AdminSearcher">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Administration\Framework\Routing\AdministrationRouteScope" class="Shopware\Administration\Framework\Routing\AdministrationRouteScope">
      <tag name="shopware.route_scope"/>
      <argument>%env(resolve:SHOPWARE_ADMINISTRATION_PATH_NAME)%</argument>
    </service>
    <service id="Shopware\Administration\Snippet\AppAdministrationSnippetDefinition" class="Shopware\Administration\Snippet\AppAdministrationSnippetDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Administration\Snippet\AppAdministrationSnippetPersister" class="Shopware\Administration\Snippet\AppAdministrationSnippetPersister">
      <argument type="service" id="app_administration_snippet.repository"/>
      <argument type="service" id="locale.repository"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
    </service>
    <service id="Shopware\Administration\Snippet\CachedSnippetFinder" class="Shopware\Administration\Snippet\CachedSnippetFinder">
      <tag name="container.decorator" id="Shopware\Administration\Snippet\SnippetFinder" inner="Shopware\Administration\Snippet\CachedSnippetFinder.inner"/>
      <argument type="service" id="Shopware\Administration\Snippet\CachedSnippetFinder.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="Shopware\Administration\Framework\Routing\KnownIps\KnownIpsCollector" class="Shopware\Administration\Framework\Routing\KnownIps\KnownIpsCollector"/>
    <service id="Shopware\Administration\Notification\NotificationDefinition" class="Shopware\Administration\Notification\NotificationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Administration\Notification\Extension\IntegrationExtension" class="Shopware\Administration\Notification\Extension\IntegrationExtension">
      <tag name="shopware.entity.extension"/>
    </service>
    <service id="Shopware\Administration\Notification\Extension\UserExtension" class="Shopware\Administration\Notification\Extension\UserExtension">
      <tag name="shopware.entity.extension"/>
    </service>
    <service id="Shopware\Administration\System\SalesChannel\Subscriber\SalesChannelUserConfigSubscriber" class="Shopware\Administration\System\SalesChannel\Subscriber\SalesChannelUserConfigSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="user_config.repository"/>
    </service>
    <service id="Shopware\Administration\Dashboard\OrderAmountService" class="Shopware\Administration\Dashboard\OrderAmountService">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\CashRounding"/>
      <argument>%env(bool:SHOPWARE_DBAL_TIMEZONE_SUPPORT_ENABLED)%</argument>
    </service>
    <service id="Shopware\Administration\Controller\DashboardController" class="Shopware\Administration\Controller\DashboardController" public="true">
      <argument type="service" id="Shopware\Administration\Dashboard\OrderAmountService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\CriteriaParser" class="Shopware\Elasticsearch\Framework\DataAbstractionLayer\CriteriaParser">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper"/>
      <argument type="service" id="Shopware\Core\System\CustomField\CustomFieldService"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Storage\AbstractKeyValueStorage"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\ElasticsearchHelper" class="Shopware\Elasticsearch\Framework\ElasticsearchHelper" public="true">
      <argument>dev</argument>
      <argument>%env(bool:SHOPWARE_ES_ENABLED)%</argument>
      <argument>%env(bool:SHOPWARE_ES_INDEXING_ENABLED)%</argument>
      <argument>%env(string:SHOPWARE_ES_INDEX_PREFIX)%</argument>
      <argument>%env(string:SHOPWARE_ES_THROW_EXCEPTION)%</argument>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchRegistry"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\CriteriaParser"/>
      <argument type="service" id="monolog.logger.elasticsearch"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Storage\AbstractKeyValueStorage"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\ElasticsearchIndexingUtils" class="Shopware\Elasticsearch\Framework\ElasticsearchIndexingUtils">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="parameter_bag"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\ElasticsearchFieldBuilder" class="Shopware\Elasticsearch\Framework\ElasticsearchFieldBuilder">
      <argument type="service" id="Shopware\Core\System\Language\CachedLanguageLoader"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchIndexingUtils"/>
      <argument>%elasticsearch.language_analyzer_mapping%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Framework\ElasticsearchFieldMapper" class="Shopware\Elasticsearch\Framework\ElasticsearchFieldMapper">
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchIndexingUtils"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Indexing\IndexCreator" class="Shopware\Elasticsearch\Framework\Indexing\IndexCreator">
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument>%elasticsearch.index.config%</argument>
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\IndexMappingProvider"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Indexing\IndexMappingProvider" class="Shopware\Elasticsearch\Framework\Indexing\IndexMappingProvider">
      <argument>%elasticsearch.index.mapping%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Indexing\IndexMappingUpdater" class="Shopware\Elasticsearch\Framework\Indexing\IndexMappingUpdater">
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchRegistry"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchLanguageProvider"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\IndexMappingProvider"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Command\ElasticsearchIndexingCommand" class="Shopware\Elasticsearch\Framework\Command\ElasticsearchIndexingCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\ElasticsearchIndexer"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\CreateAliasTaskHandler"/>
      <argument>%env(bool:SHOPWARE_ES_INDEXING_ENABLED)%</argument>
      <call method="setName">
        <argument>es:index</argument>
      </call>
      <call method="setDescription">
        <argument>Index all entities into elasticsearch</argument>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Command\ElasticsearchTestAnalyzerCommand" class="Shopware\Elasticsearch\Framework\Command\ElasticsearchTestAnalyzerCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <call method="setName">
        <argument>es:test:analyzer</argument>
      </call>
      <call method="setDescription">
        <argument>Test the elasticsearch analyzer</argument>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Command\ElasticsearchStatusCommand" class="Shopware\Elasticsearch\Framework\Command\ElasticsearchStatusCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <call method="setName">
        <argument>es:status</argument>
      </call>
      <call method="setDescription">
        <argument>Show the status of the elasticsearch index</argument>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Command\ElasticsearchResetCommand" class="Shopware\Elasticsearch\Framework\Command\ElasticsearchResetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchOutdatedIndexDetector"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="shopware.increment.gateway.registry"/>
      <call method="setName">
        <argument>es:reset</argument>
      </call>
      <call method="setDescription">
        <argument>Reset the elasticsearch index</argument>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Command\ElasticsearchUpdateMappingCommand" class="Shopware\Elasticsearch\Framework\Command\ElasticsearchUpdateMappingCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\IndexMappingUpdater"/>
      <call method="setName">
        <argument>es:mapping:update</argument>
      </call>
      <call method="setDescription">
        <argument>Update the Elasticsearch indices mapping</argument>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\ElasticsearchLanguageProvider" class="Shopware\Elasticsearch\Framework\ElasticsearchLanguageProvider">
      <argument type="service" id="language.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Elasticsearch\Product\ProductUpdater" class="Shopware\Elasticsearch\Product\ProductUpdater">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\ElasticsearchIndexer"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\AbstractElasticsearchSearchHydrator" class="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearchHydrator"/>
    <service id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\AbstractElasticsearchAggregationHydrator" class="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregatorHydrator">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher" class="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher">
      <tag name="container.decorator" id="Shopware\Core\Framework\DataAbstractionLayer\Search\EntitySearcherInterface" inner="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher.inner"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher.inner"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\CriteriaParser"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\AbstractElasticsearchSearchHydrator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>5s</argument>
    </service>
    <service id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator" class="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator">
      <tag name="container.decorator" id="Shopware\Core\Framework\DataAbstractionLayer\Search\EntityAggregatorInterface" inner="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator.inner"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator.inner"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\AbstractElasticsearchAggregationHydrator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>5s</argument>
    </service>
    <service id="Shopware\Elasticsearch\Product\SearchKeywordReplacement" class="Shopware\Elasticsearch\Product\SearchKeywordReplacement">
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="Shopware\Core\Content\Product\DataAbstractionLayer\SearchKeywordUpdater" inner="Shopware\Elasticsearch\Product\SearchKeywordReplacement.inner"/>
      <argument type="service" id="Shopware\Elasticsearch\Product\SearchKeywordReplacement.inner"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
    </service>
    <service id="Shopware\Elasticsearch\Product\ProductSearchBuilder" class="Shopware\Elasticsearch\Product\ProductSearchBuilder">
      <tag name="container.decorator" id="Shopware\Core\Content\Product\SearchKeyword\ProductSearchBuilderInterface" inner="Shopware\Elasticsearch\Product\ProductSearchBuilder.inner"/>
      <argument type="service" id="Shopware\Elasticsearch\Product\ProductSearchBuilder.inner"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
      <argument>300</argument>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Indexing\CreateAliasTaskHandler" class="Shopware\Elasticsearch\Framework\Indexing\CreateAliasTaskHandler" public="true">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="scheduled_task.repository"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
      <argument>%elasticsearch.index.config%</argument>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Storage\AbstractKeyValueStorage"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Indexing\CreateAliasTask" class="Shopware\Elasticsearch\Framework\Indexing\CreateAliasTask">
      <tag name="shopware.scheduled.task"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\ElasticsearchRegistry" class="Shopware\Elasticsearch\Framework\ElasticsearchRegistry">
      <argument type="tagged_iterator" tag="shopware.es.definition"/>
    </service>
    <service id="Shopware\Elasticsearch\Product\ElasticsearchProductDefinition" class="Shopware\Elasticsearch\Product\ElasticsearchProductDefinition">
      <tag name="shopware.es.definition"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="collection"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Product\AbstractProductSearchQueryBuilder"/>
      <argument type="service" id="Shopware\Elasticsearch\Product\EsProductDefinition"/>
      <argument>%env(bool:SHOPWARE_ES_EXCLUDE_SOURCE)%</argument>
      <argument>dev</argument>
    </service>
    <service id="Shopware\Elasticsearch\Product\EsProductDefinition" class="Shopware\Elasticsearch\Product\EsProductDefinition" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Elasticsearch\Product\AbstractProductSearchQueryBuilder"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchFieldBuilder"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchFieldMapper"/>
    </service>
    <service id="Shopware\Elasticsearch\Product\StopwordTokenFilter" class="Shopware\Elasticsearch\Product\StopwordTokenFilter">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Filter\TokenFilter"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Elasticsearch\Product\AbstractProductSearchQueryBuilder" class="Shopware\Elasticsearch\Product\ProductSearchQueryBuilder">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
      <argument type="service" id="Shopware\Elasticsearch\Product\StopwordTokenFilter"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Tokenizer"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
    </service>
    <service id="Shopware\Elasticsearch\Product\CustomFieldUpdater" class="Shopware\Elasticsearch\Product\CustomFieldUpdater">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchOutdatedIndexDetector"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Command\ElasticsearchCreateAliasCommand" class="Shopware\Elasticsearch\Framework\Command\ElasticsearchCreateAliasCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\CreateAliasTaskHandler"/>
      <call method="setName">
        <argument>es:create:alias</argument>
      </call>
      <call method="setDescription">
        <argument>Create the elasticsearch alias</argument>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Command\ElasticsearchCleanIndicesCommand" class="Shopware\Elasticsearch\Framework\Command\ElasticsearchCleanIndicesCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchOutdatedIndexDetector"/>
      <call method="setName">
        <argument>es:index:cleanup</argument>
      </call>
      <call method="setDescription">
        <argument>Clean outdated indices</argument>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminIndexingCommand" class="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminIndexingCommand">
      <tag name="console.command"/>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Elasticsearch\Admin\AdminSearchRegistry"/>
      <call method="setName">
        <argument>es:admin:index</argument>
      </call>
      <call method="setDescription">
        <argument>Index the elasticsearch for the admin search</argument>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminResetCommand" class="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminResetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="shopware.increment.gateway.registry"/>
      <argument type="service" id="Shopware\Elasticsearch\Admin\AdminElasticsearchHelper"/>
      <call method="setName">
        <argument>es:admin:reset</argument>
      </call>
      <call method="setDescription">
        <argument>Reset Admin Elasticsearch indexing</argument>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminTestCommand" class="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminTestCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Elasticsearch\Admin\AdminSearcher"/>
      <call method="setName">
        <argument>es:admin:test</argument>
      </call>
      <call method="setDescription">
        <argument>Allows you to test the admin search index</argument>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminUpdateMappingCommand" class="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminUpdateMappingCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Elasticsearch\Admin\AdminSearchRegistry"/>
      <call method="setName">
        <argument>es:admin:mapping:update</argument>
      </call>
      <call method="setDescription">
        <argument>Update the Elasticsearch indices mapping</argument>
      </call>
    </service>
    <service id="Shopware\Elasticsearch\Framework\ElasticsearchOutdatedIndexDetector" class="Shopware\Elasticsearch\Framework\ElasticsearchOutdatedIndexDetector">
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchRegistry"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchLanguageProvider"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Indexing\ElasticsearchIndexer" class="Shopware\Elasticsearch\Framework\Indexing\ElasticsearchIndexer">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchRegistry"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\IndexCreator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="currency.repository"/>
      <argument type="service" id="language.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\MultilingualEsIndexer"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchLanguageProvider"/>
      <argument>dev</argument>
    </service>
    <service id="Shopware\Elasticsearch\Framework\Indexing\MultilingualEsIndexer" class="Shopware\Elasticsearch\Framework\Indexing\MultilingualEsIndexer">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchRegistry"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\IndexCreator"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="monolog.logger"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Product\LanguageSubscriber" class="Shopware\Elasticsearch\Product\LanguageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchHelper"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\ElasticsearchRegistry"/>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
      <argument type="service" id="messenger.bus.shopware"/>
    </service>
    <service id="Shopware\Elasticsearch\Profiler\DataCollector" class="Shopware\Elasticsearch\Profiler\DataCollector">
      <tag name="data_collector" template="@Elasticsearch/Collector/elasticsearch.html.twig" id="elasticsearch"/>
      <argument>%env(bool:SHOPWARE_ES_ENABLED)%</argument>
      <argument>%env(bool:SHOPWARE_ADMIN_ES_ENABLED)%</argument>
      <argument type="service" id="shopware.es.profiled.client"/>
      <argument type="service" id="shopware.es.profiled.adminClient"/>
    </service>
    <service id="_dummy_es_env_usage" class="iterable" lazy="true">
      <argument>%env(bool:SHOPWARE_ES_ENABLED)%</argument>
      <argument>%env(bool:SHOPWARE_ES_INDEXING_ENABLED)%</argument>
      <argument>%env(string:OPENSEARCH_URL)%</argument>
      <argument>%env(string:SHOPWARE_ES_INDEX_PREFIX)%</argument>
      <argument>%env(bool:SHOPWARE_ES_THROW_EXCEPTION)%</argument>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Subscriber\RefreshIndexSubscriber" class="Shopware\Elasticsearch\Admin\Subscriber\RefreshIndexSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Elasticsearch\Admin\AdminSearchRegistry"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\SystemUpdateListener" class="Shopware\Elasticsearch\Framework\SystemUpdateListener">
      <tag name="kernel.event_listener"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Storage\AbstractKeyValueStorage"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\ElasticsearchIndexer"/>
      <argument type="service" id="messenger.bus.shopware"/>
    </service>
    <service id="Shopware\Elasticsearch\Admin\AdminElasticsearchHelper" class="Shopware\Elasticsearch\Admin\AdminElasticsearchHelper" public="true">
      <argument>%env(bool:SHOPWARE_ADMIN_ES_ENABLED)%</argument>
      <argument>%env(bool:SHOPWARE_ADMIN_ES_REFRESH_INDICES)%</argument>
      <argument>%env(string:SHOPWARE_ADMIN_ES_INDEX_PREFIX)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\AdminSearchController" class="Shopware\Elasticsearch\Admin\AdminSearchController" public="true">
      <argument type="service" id="Shopware\Elasticsearch\Admin\AdminSearcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Api\Serializer\JsonEntityEncoder"/>
      <argument type="service" id="Shopware\Elasticsearch\Admin\AdminElasticsearchHelper"/>
    </service>
    <service id="Shopware\Elasticsearch\Admin\AdminSearcher" class="Shopware\Elasticsearch\Admin\AdminSearcher">
      <argument type="service" id="shopware.es.profiled.adminClient"/>
      <argument type="service" id="Shopware\Elasticsearch\Admin\AdminSearchRegistry"/>
      <argument type="service" id="Shopware\Elasticsearch\Admin\AdminElasticsearchHelper"/>
      <argument>5s</argument>
      <argument>300</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\AdminSearchRegistry" class="Shopware\Elasticsearch\Admin\AdminSearchRegistry">
      <tag name="kernel.event_subscriber"/>
      <tag name="messenger.message_handler"/>
      <argument type="tagged_iterator" tag="shopware.elastic.admin-searcher-index" index-by="key" default-index-method="getDefaultKeyName" default-priority-method="getDefaultKeyPriority"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="shopware.es.profiled.adminClient"/>
      <argument type="service" id="Shopware\Elasticsearch\Admin\AdminElasticsearchHelper"/>
      <argument>%elasticsearch.administration.index.config%</argument>
      <argument>%elasticsearch.administration.index.mapping%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\CmsPageAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\CmsPageAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="cms_page"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="cms_page.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\CustomerAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\CustomerAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="customer"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="customer.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\CustomerGroupAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\CustomerGroupAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="customer_group"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="customer_group.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\LandingPageAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\LandingPageAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="landing_page"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="landing_page.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\ManufacturerAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\ManufacturerAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="product_manufacturer"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="product_manufacturer.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\MediaAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\MediaAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="media"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="media.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\OrderAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\OrderAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="order"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="order.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\PaymentMethodAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\PaymentMethodAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="payment_method"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="payment_method.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\ProductAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\ProductAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="product"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="product.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\PromotionAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\PromotionAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="promotion"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="promotion.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\PropertyGroupAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\PropertyGroupAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="property_group"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="property_group.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\SalesChannelAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\SalesChannelAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="sales_channel"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\ShippingMethodAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\ShippingMethodAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="shipping_method"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="shipping_method.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\CategoryAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\CategoryAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="category"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="category.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\NewsletterRecipientAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\NewsletterRecipientAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="newsletter_recipient"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="newsletter_recipient.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Elasticsearch\Admin\Indexer\ProductStreamAdminSearchIndexer" class="Shopware\Elasticsearch\Admin\Indexer\ProductStreamAdminSearchIndexer">
      <tag name="shopware.elastic.admin-searcher-index" key="product_stream"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="product_stream.repository"/>
      <argument>%env(int:SHOPWARE_ES_INDEXING_BATCH_SIZE)%</argument>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationSource_Elasticsearch" class="Shopware\Core\Framework\Migration\MigrationSource">
      <tag name="shopware.migration_source"/>
      <argument>Elasticsearch</argument>
      <argument type="collection">
        <argument key="/home/avinash/Desktop/work/Shopware/vendor/shopware/elasticsearch/Migration">Shopware\Elasticsearch\Migration</argument>
      </argument>
    </service>
    <service id="elasticsearch.filesystem.private" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument>plugins/elasticsearch</argument>
    </service>
    <service id="elasticsearch.filesystem.public" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument>plugins/elasticsearch</argument>
    </service>
    <service id="Shopware\Core\Framework\Migration\MigrationSource_Storefront" class="Shopware\Core\Framework\Migration\MigrationSource">
      <tag name="shopware.migration_source"/>
      <argument>Storefront</argument>
      <argument type="collection">
        <argument key="/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Migration">Shopware\Storefront\Migration</argument>
      </argument>
    </service>
    <service id="storefront.filesystem.private" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.private"/>
      <argument>plugins/storefront</argument>
    </service>
    <service id="storefront.filesystem.public" class="Shopware\Core\Framework\Adapter\Filesystem\PrefixFilesystem" public="true">
      <argument type="service" id="shopware.filesystem.public"/>
      <argument>plugins/storefront</argument>
    </service>
    <service id="Shopware\Storefront\Checkout\Cart\SalesChannel\StorefrontCartFacade" class="Shopware\Storefront\Checkout\Cart\SalesChannel\StorefrontCartFacade" autowire="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="Shopware\Storefront\Checkout\Shipping\BlockedShippingMethodSwitcher"/>
      <argument type="service" id="Shopware\Storefront\Checkout\Payment\BlockedPaymentMethodSwitcher"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\SalesChannel\ContextSwitchRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartCalculator"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartPersister"/>
    </service>
    <service id="Shopware\Storefront\Checkout\Shipping\BlockedShippingMethodSwitcher" class="Shopware\Storefront\Checkout\Shipping\BlockedShippingMethodSwitcher" autowire="true">
      <argument type="service" id="Shopware\Core\Checkout\Shipping\SalesChannel\SortedShippingMethodRoute"/>
    </service>
    <service id="Shopware\Storefront\Checkout\Payment\BlockedPaymentMethodSwitcher" class="Shopware\Storefront\Checkout\Payment\BlockedPaymentMethodSwitcher" autowire="true">
      <argument type="service" id="Shopware\Core\Checkout\Payment\SalesChannel\SortedPaymentMethodRoute"/>
    </service>
    <service id="Shopware\Storefront\Framework\Routing\CachedDomainLoader" class="Shopware\Storefront\Framework\Routing\CachedDomainLoader" autowire="true">
      <tag name="container.decorator" id="Shopware\Storefront\Framework\Routing\DomainLoader" inner="Shopware\Storefront\Framework\Routing\CachedDomainLoader.inner"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\CachedDomainLoader.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Shopware\Storefront\Framework\Routing\CachedDomainLoaderInvalidator" class="Shopware\Storefront\Framework\Routing\CachedDomainLoaderInvalidator" autowire="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
    </service>
    <service id="Shopware\Storefront\Framework\Routing\RequestTransformer" class="Shopware\Storefront\Framework\Routing\RequestTransformer" autowire="true">
      <tag name="container.decorator" id="Shopware\Core\Framework\Routing\RequestTransformerInterface" inner="Shopware\Storefront\Framework\Routing\RequestTransformer.inner"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\RequestTransformer.inner"/>
      <argument type="service" id="Shopware\Core\Content\Seo\EmptyPathInfoResolver"/>
      <argument>%shopware.routing.registered_api_prefixes%</argument>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\CachedDomainLoader"/>
    </service>
    <service id="Shopware\Storefront\Framework\Routing\Router" class="Shopware\Storefront\Framework\Routing\Router" autowire="true">
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Shopware\Storefront\Framework\Routing\MaintenanceModeResolver" class="Shopware\Storefront\Framework\Routing\MaintenanceModeResolver" autowire="true">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Shopware\Core\Framework\Routing\MaintenanceModeResolver"/>
    </service>
    <service id="Shopware\Storefront\Framework\Routing\StorefrontRouteScope" class="Shopware\Storefront\Framework\Routing\StorefrontRouteScope" autowire="true">
      <tag name="shopware.route_scope"/>
    </service>
    <service id="Shopware\Storefront\Framework\Twig\TemplateDataExtension" class="Shopware\Storefront\Framework\Twig\TemplateDataExtension" autowire="true">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Shopware\Storefront\Framework\Twig\TemplateConfigAccessor" class="Shopware\Storefront\Framework\Twig\TemplateConfigAccessor" autowire="true">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeConfigValueAccessor"/>
    </service>
    <service id="Shopware\Storefront\Theme\ThemeConfigValueAccessor" class="Shopware\Storefront\Theme\ThemeConfigValueAccessor" autowire="true">
      <argument type="service" id="Shopware\Storefront\Theme\CachedResolvedConfigLoader"/>
      <argument>true</argument>
    </service>
    <service id="Shopware\Storefront\Framework\Twig\Extension\ConfigExtension" class="Shopware\Storefront\Framework\Twig\Extension\ConfigExtension" autowire="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Shopware\Storefront\Framework\Twig\TemplateConfigAccessor"/>
    </service>
    <service id="Shopware\Storefront\Framework\Twig\IconExtension" class="Shopware\Storefront\Framework\Twig\IconExtension" autowire="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\TemplateFinder"/>
    </service>
    <service id="Shopware\Storefront\Framework\Twig\ThumbnailExtension" class="Shopware\Storefront\Framework\Twig\ThumbnailExtension" autowire="true">
      <tag name="twig.extension"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\TemplateFinder"/>
    </service>
    <service id="Shopware\Storefront\Framework\Twig\TwigDateRequestListener" class="Shopware\Storefront\Framework\Twig\TwigDateRequestListener" autowire="true">
      <tag name="kernel.event_listener" event="kernel.request"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="Shopware\Storefront\Framework\Twig\ErrorTemplateResolver" class="Shopware\Storefront\Framework\Twig\ErrorTemplateResolver" autowire="true">
      <argument type="service" id="twig"/>
    </service>
    <service id="Shopware\Storefront\Framework\Twig\Extension\UrlEncodingTwigFilter" class="Shopware\Storefront\Framework\Twig\Extension\UrlEncodingTwigFilter" autowire="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Shopware\Storefront\Framework\Twig\Extension\IconCacheTwigFilter" class="Shopware\Storefront\Framework\Twig\Extension\IconCacheTwigFilter" autowire="true">
      <tag name="twig.extension"/>
    </service>
    <service id="Shopware\Core\System\Salutation\AbstractSalutationsSorter" class="Shopware\Core\System\Salutation\SalutationSorter" autowire="true"/>
    <service id="Shopware\Storefront\Framework\Media\StorefrontMediaUploader" class="Shopware\Storefront\Framework\Media\StorefrontMediaUploader" autowire="true">
      <argument type="service" id="Shopware\Core\Content\Media\MediaService"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\FileSaver"/>
      <argument type="service" id="Shopware\Storefront\Framework\Media\StorefrontMediaValidatorRegistry"/>
    </service>
    <service id="Shopware\Storefront\Framework\Media\StorefrontMediaValidatorRegistry" class="Shopware\Storefront\Framework\Media\StorefrontMediaValidatorRegistry" public="true" autowire="true">
      <argument type="tagged_iterator" tag="storefront.media.upload.validator"/>
    </service>
    <service id="Shopware\Storefront\Framework\Media\Validator\StorefrontMediaImageValidator" class="Shopware\Storefront\Framework\Media\Validator\StorefrontMediaImageValidator" autowire="true">
      <tag name="storefront.media.upload.validator"/>
    </service>
    <service id="Shopware\Storefront\Framework\Media\Validator\StorefrontMediaDocumentValidator" class="Shopware\Storefront\Framework\Media\Validator\StorefrontMediaDocumentValidator" autowire="true">
      <tag name="storefront.media.upload.validator"/>
    </service>
    <service id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber" class="Shopware\Storefront\Framework\Routing\StorefrontSubscriber" autowire="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="service" id="Shopware\Core\Content\Seo\HreflangLoaderInterface"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\MaintenanceModeResolver"/>
      <argument type="service" id="Shopware\Core\Framework\App\ShopId\ShopIdProvider"/>
      <argument type="service" id="Shopware\Core\Framework\App\ActiveAppsLoader"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
    </service>
    <service id="Shopware\Storefront\Framework\Routing\NotFound\NotFoundSubscriber" class="Shopware\Storefront\Framework\Routing\NotFound\NotFoundSubscriber" autowire="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Storefront\Controller\ErrorController"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <argument>true</argument>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Cache\EntityCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Framework\AffiliateTracking\AffiliateTrackingListener" class="Shopware\Storefront\Framework\AffiliateTracking\AffiliateTrackingListener" autowire="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="Shopware\Storefront\Page\Navigation\NavigationPageLoader" class="Shopware\Storefront\Page\Navigation\NavigationPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Category\SalesChannel\CachedCategoryRoute"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlPlaceholderHandlerInterface"/>
    </service>
    <service id="Shopware\Storefront\Page\Navigation\Error\ErrorPageLoader" class="Shopware\Storefront\Page\Navigation\Error\ErrorPageLoader" autowire="true">
      <argument type="service" id="Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageLoader"/>
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Page\Maintenance\MaintenancePageLoader" class="Shopware\Storefront\Page\Maintenance\MaintenancePageLoader" autowire="true">
      <argument type="service" id="Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageLoader"/>
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Page\LandingPage\LandingPageLoader" class="Shopware\Storefront\Page\LandingPage\LandingPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="Shopware\Core\Content\LandingPage\SalesChannel\CachedLandingPageRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Pagelet\Menu\Offcanvas\MenuOffcanvasPageletLoader" class="Shopware\Storefront\Pagelet\Menu\Offcanvas\MenuOffcanvasPageletLoader" autowire="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Category\Service\NavigationLoader"/>
    </service>
    <service id="Shopware\Storefront\Pagelet\Captcha\BasicCaptchaPageletLoader" class="Shopware\Storefront\Pagelet\Captcha\BasicCaptchaPageletLoader" autowire="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Storefront\Framework\Captcha\BasicCaptcha\BasicCaptchaGenerator"/>
      <argument type="service" id="Shopware\Core\Content\Category\Service\NavigationLoader"/>
    </service>
    <service id="Shopware\Storefront\Pagelet\Country\CountryStateDataPageletLoader" class="Shopware\Storefront\Pagelet\Country\CountryStateDataPageletLoader" autowire="true">
      <argument type="service" id="Shopware\Core\System\Country\SalesChannel\CachedCountryStateRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Page\Suggest\SuggestPageLoader" class="Shopware\Storefront\Page\Suggest\SuggestPageLoader" autowire="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Suggest\CachedProductSuggestRoute"/>
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
    </service>
    <service id="Shopware\Storefront\Pagelet\Header\HeaderPageletLoader" class="Shopware\Storefront\Pagelet\Header\HeaderPageletLoader" autowire="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\Currency\SalesChannel\CachedCurrencyRoute"/>
      <argument type="service" id="Shopware\Core\System\Language\SalesChannel\CachedLanguageRoute"/>
      <argument type="service" id="Shopware\Core\Content\Category\Service\NavigationLoader"/>
    </service>
    <service id="Shopware\Storefront\Pagelet\Footer\FooterPageletLoader" class="Shopware\Storefront\Pagelet\Footer\FooterPageletLoader" autowire="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Category\Service\NavigationLoader"/>
    </service>
    <service id="Shopware\Storefront\Page\GenericPageLoader" class="Shopware\Storefront\Page\GenericPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Pagelet\Header\HeaderPageletLoader"/>
      <argument type="service" id="Shopware\Storefront\Pagelet\Footer\FooterPageletLoader"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\SalesChannel\SortedPaymentMethodRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Shipping\SalesChannel\SortedShippingMethodRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Page\Search\SearchPageLoader" class="Shopware\Storefront\Page\Search\SearchPageLoader" public="true" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Search\ResolvedCriteriaProductSearchRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Page\Product\ProductPageLoader" class="Shopware\Storefront\Page\Product\ProductPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Detail\CachedProductDetailRoute"/>
      <argument type="service" id="Shopware\Storefront\Page\Product\Review\ProductReviewLoader"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\CrossSelling\CachedProductCrossSellingRoute"/>
    </service>
    <service id="Shopware\Storefront\Page\Product\QuickView\MinimalQuickViewPageLoader" class="Shopware\Storefront\Page\Product\QuickView\MinimalQuickViewPageLoader" autowire="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Detail\CachedProductDetailRoute"/>
    </service>
    <service id="Shopware\Storefront\Page\Product\Configurator\ProductPageConfiguratorLoader" class="Shopware\Storefront\Page\Product\Configurator\ProductPageConfiguratorLoader" autowire="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Product\SalesChannel\Detail\ProductConfiguratorLoader" inner="Shopware\Storefront\Page\Product\Configurator\ProductPageConfiguratorLoader.inner"/>
      <argument type="service" id="Shopware\Storefront\Page\Product\Configurator\ProductPageConfiguratorLoader.inner"/>
    </service>
    <service id="Shopware\Storefront\Page\Checkout\Finish\CheckoutFinishPageLoader" class="Shopware\Storefront\Page\Checkout\Finish\CheckoutFinishPageLoader" autowire="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderRoute"/>
    </service>
    <service id="Shopware\Storefront\Page\Checkout\Confirm\CheckoutConfirmPageLoader" class="Shopware\Storefront\Page\Checkout\Confirm\CheckoutConfirmPageLoader" autowire="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Storefront\Checkout\Cart\SalesChannel\StorefrontCartFacade"/>
      <argument type="service" id="Shopware\Core\Checkout\Shipping\SalesChannel\SortedShippingMethodRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\SalesChannel\SortedPaymentMethodRoute"/>
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\Validation\AddressValidationFactory"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\DataValidator"/>
    </service>
    <service id="Shopware\Storefront\Page\Checkout\Cart\CheckoutCartPageLoader" class="Shopware\Storefront\Page\Checkout\Cart\CheckoutCartPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Storefront\Checkout\Cart\SalesChannel\StorefrontCartFacade"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\SalesChannel\SortedPaymentMethodRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Shipping\SalesChannel\SortedShippingMethodRoute"/>
      <argument type="service" id="Shopware\Core\System\Country\SalesChannel\CachedCountryRoute"/>
    </service>
    <service id="Shopware\Storefront\Page\Checkout\Offcanvas\OffcanvasCartPageLoader" class="Shopware\Storefront\Page\Checkout\Offcanvas\OffcanvasCartPageLoader" autowire="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Storefront\Checkout\Cart\SalesChannel\StorefrontCartFacade"/>
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Shipping\SalesChannel\SortedShippingMethodRoute"/>
    </service>
    <service id="Shopware\Storefront\Page\Account\Profile\AccountProfilePageLoader" class="Shopware\Storefront\Page\Account\Profile\AccountProfilePageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute"/>
      <argument type="service" id="Shopware\Core\System\Salutation\AbstractSalutationsSorter"/>
    </service>
    <service id="Shopware\Storefront\Page\Account\PaymentMethod\AccountPaymentMethodPageLoader" class="Shopware\Storefront\Page\Account\PaymentMethod\AccountPaymentMethodPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Page\Account\Overview\AccountOverviewPageLoader" class="Shopware\Storefront\Page\Account\Overview\AccountOverviewPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\CustomerRoute"/>
      <argument type="service" id="Shopware\Storefront\Pagelet\Newsletter\Account\NewsletterAccountPageletLoader"/>
    </service>
    <service id="Shopware\Storefront\Page\Account\Order\AccountOrderPageLoader" class="Shopware\Storefront\Page\Account\Order\AccountOrderPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\AccountService"/>
    </service>
    <service id="Shopware\Storefront\Page\Account\Order\AccountOrderDetailPageLoader" class="Shopware\Storefront\Page\Account\Order\AccountOrderDetailPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderRoute"/>
    </service>
    <service id="Shopware\Storefront\Page\Account\Order\AccountEditOrderPageLoader" class="Shopware\Storefront\Page\Account\Order\AccountEditOrderPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderRoute"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\SalesChannel\SortedPaymentMethodRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Order\OrderConverter"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderService"/>
    </service>
    <service id="Shopware\Storefront\Page\Account\Login\AccountLoginPageLoader" class="Shopware\Storefront\Page\Account\Login\AccountLoginPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\System\Country\SalesChannel\CachedCountryRoute"/>
      <argument type="service" id="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute"/>
      <argument type="service" id="Shopware\Core\System\Salutation\AbstractSalutationsSorter"/>
    </service>
    <service id="Shopware\Storefront\Page\Account\RecoverPassword\AccountRecoverPasswordPageLoader" class="Shopware\Storefront\Page\Account\RecoverPassword\AccountRecoverPasswordPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\CustomerRecoveryIsExpiredRoute"/>
    </service>
    <service id="Shopware\Storefront\Page\Account\CustomerGroupRegistration\CustomerGroupRegistrationPageLoader" class="Shopware\Storefront\Page\Account\CustomerGroupRegistration\CustomerGroupRegistrationPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\Account\Login\AccountLoginPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\CustomerGroupRegistrationSettingsRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Page\Checkout\Register\CheckoutRegisterPageLoader" class="Shopware\Storefront\Page\Checkout\Register\CheckoutRegisterPageLoader" public="true" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ListAddressRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute"/>
      <argument type="service" id="Shopware\Core\System\Country\SalesChannel\CachedCountryRoute"/>
    </service>
    <service id="Shopware\Storefront\Page\Newsletter\Subscribe\NewsletterSubscribePageLoader" class="Shopware\Storefront\Page\Newsletter\Subscribe\NewsletterSubscribePageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Pagelet\Newsletter\Account\NewsletterAccountPageletLoader" class="Shopware\Storefront\Pagelet\Newsletter\Account\NewsletterAccountPageletLoader" autowire="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Newsletter\SalesChannel\NewsletterSubscribeRoute"/>
      <argument type="service" id="Shopware\Core\Content\Newsletter\SalesChannel\NewsletterUnsubscribeRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\AccountNewsletterRecipientRoute"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Storefront\Page\Address\Detail\AddressDetailPageLoader" class="Shopware\Storefront\Page\Address\Detail\AddressDetailPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="Shopware\Core\System\Country\SalesChannel\CachedCountryRoute"/>
      <argument type="service" id="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ListAddressRoute"/>
      <argument type="service" id="Shopware\Core\System\Salutation\AbstractSalutationsSorter"/>
    </service>
    <service id="Shopware\Storefront\Page\Address\Listing\AddressListingPageLoader" class="Shopware\Storefront\Page\Address\Listing\AddressListingPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="Shopware\Core\System\Country\SalesChannel\CachedCountryRoute"/>
      <argument type="service" id="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ListAddressRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
    </service>
    <service id="Shopware\Storefront\Page\Contact\ContactPageLoader" class="Shopware\Storefront\Page\Contact\ContactPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="salutation.repository"/>
    </service>
    <service id="Shopware\Storefront\Page\Sitemap\SitemapPageLoader" class="Shopware\Storefront\Page\Sitemap\SitemapPageLoader" autowire="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Sitemap\SalesChannel\CachedSitemapRoute"/>
    </service>
    <service id="Shopware\Storefront\Page\Cms\DefaultMediaResolver" class="Shopware\Storefront\Page\Cms\DefaultMediaResolver" autowire="true">
      <tag name="container.decorator" id="Shopware\Core\Content\Media\Cms\DefaultMediaResolver" inner="Shopware\Storefront\Page\Cms\DefaultMediaResolver.inner"/>
      <argument type="service" id="Shopware\Storefront\Page\Cms\DefaultMediaResolver.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="Shopware\Storefront\Framework\Cache\CacheStore" class="Shopware\Storefront\Framework\Cache\CacheStore" public="true" autowire="true">
      <argument type="service" id="cache.http"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheStateValidator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\HttpCacheKeyGenerator"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\MaintenanceModeResolver"/>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="Shopware\Storefront\Framework\Cache\HttpCacheKeyGenerator" class="Shopware\Storefront\Framework\Cache\HttpCacheKeyGenerator" autowire="true">
      <argument>7290e2c16fdac46b1cf04202326f2e4f</argument>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>%storefront.http_cache.ignored_url_parameters%</argument>
    </service>
    <service id="Shopware\Storefront\Framework\Cache\CacheTracer" class="Shopware\Storefront\Framework\Cache\CacheTracer" autowire="true">
      <tag name="container.decorator" id="Shopware\Core\Framework\Adapter\Cache\CacheTracer" inner="Shopware\Storefront\Framework\Cache\CacheTracer.inner"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheTracer.inner"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeConfigValueAccessor"/>
    </service>
    <service id="Shopware\Storefront\Framework\Cache\CacheStateValidator" class="Shopware\Storefront\Framework\Cache\CacheStateValidator" autowire="true">
      <argument>%shopware.cache.invalidation.http_cache%</argument>
    </service>
    <service id="Shopware\Storefront\Framework\Cache\CacheResponseSubscriber" class="Shopware\Storefront\Framework\Cache\CacheResponseSubscriber" autowire="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument>%env(default:shopware_http_cache_default_ttl_default:SHOPWARE_HTTP_DEFAULT_TTL)%</argument>
      <argument>%env(default:shopware_http_cache_enabled_default:SHOPWARE_HTTP_CACHE_ENABLED)%</argument>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\MaintenanceModeResolver"/>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="shopware.storefront.framework.reverse_proxy.http_client" class="GuzzleHttp\Client" autowire="true"/>
    <service id="Shopware\Storefront\Framework\Cache\ReverseProxy\VarnishReverseProxyGateway" class="Shopware\Storefront\Framework\Cache\ReverseProxy\VarnishReverseProxyGateway" autowire="true">
      <argument>%storefront.reverse_proxy.hosts%</argument>
      <argument>2</argument>
      <argument type="service" id="shopware.storefront.framework.reverse_proxy.http_client"/>
    </service>
    <service id="Shopware\Storefront\Framework\Cache\CacheWarmer\CacheWarmer" class="Shopware\Storefront\Framework\Cache\CacheWarmer\CacheWarmer" autowire="true">
      <argument type="service" id="sales_channel_domain.repository"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheWarmer\CacheRouteWarmerRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheIdLoader"/>
    </service>
    <service id="Shopware\Storefront\Framework\Cache\CacheWarmer\CacheWarmerTaskHandler" class="Shopware\Storefront\Framework\Cache\CacheWarmer\CacheWarmerTaskHandler" autowire="true">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\RequestTransformer"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheIdLoader"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheTagCollection"/>
    </service>
    <service id="Shopware\Storefront\Framework\Cache\CacheWarmer\CacheRouteWarmerRegistry" class="Shopware\Storefront\Framework\Cache\CacheWarmer\CacheRouteWarmerRegistry" autowire="true">
      <argument type="tagged_iterator" tag="http_cache.route_warmer"/>
    </service>
    <service id="Shopware\Storefront\Framework\Cache\CacheWarmer\Product\ProductRouteWarmer" class="Shopware\Storefront\Framework\Cache\CacheWarmer\Product\ProductRouteWarmer" autowire="true">
      <tag name="http_cache.route_warmer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
    </service>
    <service id="Shopware\Storefront\Framework\Cache\CacheWarmer\Navigation\NavigationRouteWarmer" class="Shopware\Storefront\Framework\Cache\CacheWarmer\Navigation\NavigationRouteWarmer" autowire="true">
      <tag name="http_cache.route_warmer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="Shopware\Core\Content\Category\CategoryDefinition"/>
    </service>
    <service id="Shopware\Storefront\Framework\Command\HttpCacheWarmUpCommand" class="Shopware\Storefront\Framework\Command\HttpCacheWarmUpCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheWarmer\CacheWarmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <call method="setName">
        <argument>http:cache:warm:up</argument>
      </call>
      <call method="setDescription">
        <argument>Warm up the http cache</argument>
      </call>
    </service>
    <service id="Shopware\Storefront\Framework\Command\SalesChannelCreateStorefrontCommand" class="Shopware\Storefront\Framework\Command\SalesChannelCreateStorefrontCommand" autowire="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="snippet_set.repository"/>
      <argument type="service" id="Shopware\Core\Maintenance\SalesChannel\Service\SalesChannelCreator"/>
      <call method="setName">
        <argument>sales-channel:create:storefront</argument>
      </call>
      <call method="setDescription">
        <argument>Creates a new storefront sales channel</argument>
      </call>
    </service>
    <service id="Shopware\Storefront\Framework\Cookie\AppCookieProvider" class="Shopware\Storefront\Framework\Cookie\AppCookieProvider" autowire="true">
      <tag name="container.decorator" id="Shopware\Storefront\Framework\Cookie\CookieProviderInterface" inner="Shopware\Storefront\Framework\Cookie\AppCookieProvider.inner"/>
      <argument type="service" id="Shopware\Storefront\Framework\Cookie\AppCookieProvider.inner"/>
      <argument type="service" id="app.repository"/>
    </service>
    <service id="Shopware\Storefront\Framework\Captcha\CaptchaRouteListener" class="Shopware\Storefront\Framework\Captcha\CaptchaRouteListener" autowire="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="tagged_iterator" tag="shopware.storefront.captcha"/>
      <argument type="service" id="Shopware\Storefront\Controller\ErrorController"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Storefront\Framework\Captcha\HoneypotCaptcha" class="Shopware\Storefront\Framework\Captcha\HoneypotCaptcha" autowire="true">
      <tag name="shopware.storefront.captcha" priority="400"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
    </service>
    <service id="Shopware\Storefront\Framework\Captcha\BasicCaptcha" class="Shopware\Storefront\Framework\Captcha\BasicCaptcha" autowire="true">
      <tag name="shopware.storefront.captcha" priority="300"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Storefront\Framework\Captcha\BasicCaptcha\BasicCaptchaGenerator" class="Shopware\Storefront\Framework\Captcha\BasicCaptcha\BasicCaptchaGenerator" autowire="true"/>
    <service id="shopware.captcha.client" class="GuzzleHttp\Client" autowire="true"/>
    <service id="Shopware\Storefront\Framework\Captcha\GoogleReCaptchaV2" class="Shopware\Storefront\Framework\Captcha\GoogleReCaptchaV2" autowire="true">
      <tag name="shopware.storefront.captcha" priority="200"/>
      <argument type="service" id="shopware.captcha.client"/>
    </service>
    <service id="Shopware\Storefront\Framework\Captcha\GoogleReCaptchaV3" class="Shopware\Storefront\Framework\Captcha\GoogleReCaptchaV3" autowire="true">
      <tag name="shopware.storefront.captcha" priority="100"/>
      <argument type="service" id="shopware.captcha.client"/>
    </service>
    <service id="Shopware\Storefront\Framework\Routing\ResponseHeaderListener" class="Shopware\Storefront\Framework\Routing\ResponseHeaderListener" autowire="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="Shopware\Storefront\Event\CartMergedSubscriber" class="Shopware\Storefront\Event\CartMergedSubscriber" autowire="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="Shopware\Storefront\Page\Wishlist\WishlistPageLoader" class="Shopware\Storefront\Page\Wishlist\WishlistPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\LoadWishlistRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Page\Wishlist\GuestWishlistPageLoader" class="Shopware\Storefront\Page\Wishlist\GuestWishlistPageLoader" autowire="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Pagelet\Wishlist\GuestWishlistPageletLoader" class="Shopware\Storefront\Pagelet\Wishlist\GuestWishlistPageletLoader" autowire="true">
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\ProductListRoute"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\ProductCloseoutFilterFactory"/>
    </service>
    <service id="Shopware\Storefront\Framework\App\Template\IconTemplateLoader" class="Shopware\Storefront\Framework\App\Template\IconTemplateLoader" autowire="true">
      <tag name="container.decorator" id="Shopware\Core\Framework\App\Template\TemplateLoader" inner="Shopware\Storefront\Framework\App\Template\IconTemplateLoader.inner"/>
      <argument type="service" id="Shopware\Storefront\Framework\App\Template\IconTemplateLoader.inner"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginConfiguration\StorefrontPluginConfigurationFactory"/>
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
    </service>
    <service id="Shopware\Storefront\Framework\Twig\TwigAppVariable" class="Shopware\Storefront\Framework\Twig\TwigAppVariable" autowire="true">
      <tag name="container.decorator" id="twig.app_variable" inner="Shopware\Storefront\Framework\Twig\TwigAppVariable.inner"/>
      <argument type="service" id="Shopware\Storefront\Framework\Twig\TwigAppVariable.inner"/>
      <argument>%shopware.twig.app_variable.allowed_server_params%</argument>
    </service>
    <service id="Shopware\Storefront\Framework\Seo\SeoUrlRoute\ProductPageSeoUrlRoute" class="Shopware\Storefront\Framework\Seo\SeoUrlRoute\ProductPageSeoUrlRoute">
      <tag name="shopware.seo_url.route"/>
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
    </service>
    <service id="Shopware\Storefront\Framework\Seo\SeoUrlRoute\NavigationPageSeoUrlRoute" class="Shopware\Storefront\Framework\Seo\SeoUrlRoute\NavigationPageSeoUrlRoute">
      <tag name="shopware.seo_url.route"/>
      <argument type="service" id="Shopware\Core\Content\Category\CategoryDefinition"/>
      <argument type="service" id="Shopware\Core\Content\Category\Service\CategoryBreadcrumbBuilder"/>
    </service>
    <service id="Shopware\Storefront\Framework\Seo\SeoUrlRoute\LandingPageSeoUrlRoute" class="Shopware\Storefront\Framework\Seo\SeoUrlRoute\LandingPageSeoUrlRoute">
      <tag name="shopware.seo_url.route"/>
      <argument type="service" id="Shopware\Core\Content\LandingPage\LandingPageDefinition"/>
    </service>
    <service id="Shopware\Storefront\Framework\Seo\SeoUrlRoute\SeoUrlUpdateListener" class="Shopware\Storefront\Framework\Seo\SeoUrlRoute\SeoUrlUpdateListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlUpdater"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry"/>
    </service>
    <service id="Shopware\Storefront\Controller\Api\CaptchaController" class="Shopware\Storefront\Controller\Api\CaptchaController" public="true">
      <argument type="tagged_iterator" tag="shopware.storefront.captcha"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\AccountOrderController" class="Shopware\Storefront\Controller\AccountOrderController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Account\Order\AccountOrderPageLoader"/>
      <argument type="service" id="Shopware\Storefront\Page\Account\Order\AccountEditOrderPageLoader"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\SalesChannel\ContextSwitchRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\CancelOrderRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\SetPaymentOrderRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\SalesChannel\HandlePaymentMethodRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Storefront\Page\Account\Order\AccountOrderDetailPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderRoute"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\AccountPaymentController" class="Shopware\Storefront\Controller\AccountPaymentController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Account\PaymentMethod\AccountPaymentMethodPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ChangePaymentMethodRoute"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\AccountProfileController" class="Shopware\Storefront\Controller\AccountProfileController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Account\Overview\AccountOverviewPageLoader"/>
      <argument type="service" id="Shopware\Storefront\Page\Account\Profile\AccountProfilePageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ChangeCustomerProfileRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ChangePasswordRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ChangeEmailRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\DeleteCustomerRoute"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\AddressController" class="Shopware\Storefront\Controller\AddressController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Address\Listing\AddressListingPageLoader"/>
      <argument type="service" id="Shopware\Storefront\Page\Address\Detail\AddressDetailPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\AccountService"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ListAddressRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\UpsertAddressRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\DeleteAddressRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ChangeCustomerProfileRoute"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\AuthController" class="Shopware\Storefront\Controller\AuthController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Account\Login\AccountLoginPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\SendPasswordRecoveryMailRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\ResetPasswordRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\LoginRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\LogoutRoute"/>
      <argument type="service" id="Shopware\Storefront\Checkout\Cart\SalesChannel\StorefrontCartFacade"/>
      <argument type="service" id="Shopware\Storefront\Page\Account\RecoverPassword\AccountRecoverPasswordPageLoader"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\AppController" class="Shopware\Storefront\Controller\AppController" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Api\AppJWTGenerateRoute"/>
    </service>
    <service id="Shopware\Storefront\Controller\CartLineItemController" class="Shopware\Storefront\Controller\CartLineItemController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Cart\PromotionItemBuilder"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItemFactoryHandler\ProductLineItemFactory"/>
      <argument type="service" id="Shopware\Core\Framework\Util\HtmlSanitizer"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\ProductListRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\LineItemFactoryRegistry"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\CheckoutController" class="Shopware\Storefront\Controller\CheckoutController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="Shopware\Storefront\Page\Checkout\Cart\CheckoutCartPageLoader"/>
      <argument type="service" id="Shopware\Storefront\Page\Checkout\Confirm\CheckoutConfirmPageLoader"/>
      <argument type="service" id="Shopware\Storefront\Page\Checkout\Finish\CheckoutFinishPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Order\SalesChannel\OrderService"/>
      <argument type="service" id="Shopware\Core\Checkout\Payment\PaymentService"/>
      <argument type="service" id="Shopware\Storefront\Page\Checkout\Offcanvas\OffcanvasCartPageLoader"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\LogoutRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartLoadRoute"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\CookieController" class="Shopware\Storefront\Controller\CookieController" public="true">
      <argument type="service" id="Shopware\Storefront\Framework\Cookie\AppCookieProvider"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\CmsController" class="Shopware\Storefront\Controller\CmsController" public="true">
      <argument type="service" id="Shopware\Core\Content\Cms\SalesChannel\CmsRoute"/>
      <argument type="service" id="Shopware\Core\Content\Category\SalesChannel\CachedCategoryRoute"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\ResolveCriteriaProductListingRoute"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Detail\CachedProductDetailRoute"/>
      <argument type="service" id="Shopware\Storefront\Page\Product\Review\ProductReviewLoader"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\FindVariant\FindProductVariantRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\FormController" class="Shopware\Storefront\Controller\FormController" public="true">
      <argument type="service" id="Shopware\Core\Content\ContactForm\SalesChannel\ContactFormRoute"/>
      <argument type="service" id="Shopware\Core\Content\Newsletter\SalesChannel\NewsletterSubscribeRoute"/>
      <argument type="service" id="Shopware\Core\Content\Newsletter\SalesChannel\NewsletterUnsubscribeRoute"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\ContextController" class="Shopware\Storefront\Controller\ContextController" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\SalesChannel\ContextSwitchRoute"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.default"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\MaintenanceController" class="Shopware\Storefront\Controller\MaintenanceController" public="true">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Storefront\Page\Maintenance\MaintenancePageLoader"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\MaintenanceModeResolver"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\ErrorController" class="Shopware\Storefront\Controller\ErrorController" public="true" lazy="true">
      <argument type="service" id="Shopware\Storefront\Framework\Twig\ErrorTemplateResolver"/>
      <argument type="service" id="Shopware\Storefront\Pagelet\Header\HeaderPageletLoader"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Storefront\Page\Navigation\Error\ErrorPageLoader"/>
      <argument type="service" id="Shopware\Storefront\Pagelet\Footer\FooterPageletLoader"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\NavigationController" class="Shopware\Storefront\Controller\NavigationController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Navigation\NavigationPageLoader"/>
      <argument type="service" id="Shopware\Storefront\Pagelet\Menu\Offcanvas\MenuOffcanvasPageletLoader"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\NewsletterController" class="Shopware\Storefront\Controller\NewsletterController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Newsletter\Subscribe\NewsletterSubscribePageLoader"/>
      <argument type="service" id="Shopware\Core\Content\Newsletter\SalesChannel\NewsletterConfirmRoute"/>
      <argument type="service" id="Shopware\Storefront\Pagelet\Newsletter\Account\NewsletterAccountPageletLoader"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\ProductController" class="Shopware\Storefront\Controller\ProductController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Product\ProductPageLoader"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\FindVariant\FindProductVariantRoute"/>
      <argument type="service" id="Shopware\Storefront\Page\Product\QuickView\MinimalQuickViewPageLoader"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Review\ProductReviewSaveRoute"/>
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlPlaceholderHandlerInterface"/>
      <argument type="service" id="Shopware\Storefront\Page\Product\Review\ProductReviewLoader"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\LandingPageController" class="Shopware\Storefront\Controller\LandingPageController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\LandingPage\LandingPageLoader"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\RegisterController" class="Shopware\Storefront\Controller\RegisterController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Account\Login\AccountLoginPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\RegisterRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\RegisterConfirmRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService"/>
      <argument type="service" id="Shopware\Storefront\Page\Checkout\Register\CheckoutRegisterPageLoader"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="Shopware\Storefront\Page\Account\CustomerGroupRegistration\CustomerGroupRegistrationPageLoader"/>
      <argument type="service" id="sales_channel_domain.repository"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\ScriptController" class="Shopware\Storefront\Controller\ScriptController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\GenericPageLoader"/>
      <argument type="service" id="Shopware\Core\Framework\Script\Api\ScriptResponseEncoder"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\SearchController" class="Shopware\Storefront\Controller\SearchController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Search\SearchPageLoader"/>
      <argument type="service" id="Shopware\Storefront\Page\Suggest\SuggestPageLoader"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Search\ResolvedCriteriaProductSearchRoute"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\SitemapController" class="Shopware\Storefront\Controller\SitemapController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Sitemap\SitemapPageLoader"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Page\Product\Review\ProductReviewLoader" class="Shopware\Storefront\Page\Product\Review\ProductReviewLoader" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Review\CachedProductReviewRoute"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Controller\CountryStateController" class="Shopware\Storefront\Controller\CountryStateController" public="true">
      <argument type="service" id="Shopware\Storefront\Pagelet\Country\CountryStateDataPageletLoader"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\DocumentController" class="Shopware\Storefront\Controller\DocumentController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Document\SalesChannel\DocumentRoute"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\DownloadController" class="Shopware\Storefront\Controller\DownloadController" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\DownloadRoute"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\WellKnownController" class="Shopware\Storefront\Controller\WellKnownController" public="true">
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\WishlistController" class="Shopware\Storefront\Controller\WishlistController" public="true">
      <argument type="service" id="Shopware\Storefront\Page\Wishlist\WishlistPageLoader"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\LoadWishlistRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\AddWishlistProductRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\RemoveWishlistProductRoute"/>
      <argument type="service" id="Shopware\Core\Checkout\Customer\SalesChannel\MergeWishlistProductRoute"/>
      <argument type="service" id="Shopware\Storefront\Page\Wishlist\GuestWishlistPageLoader"/>
      <argument type="service" id="Shopware\Storefront\Pagelet\Wishlist\GuestWishlistPageletLoader"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\CaptchaController" class="Shopware\Storefront\Controller\CaptchaController" public="true">
      <argument type="service" id="Shopware\Storefront\Pagelet\Captcha\BasicCaptchaPageletLoader"/>
      <argument type="service" id="Shopware\Storefront\Framework\Captcha\BasicCaptcha"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
      <call method="setTwig">
        <argument type="service" id="twig"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Controller\VerificationHashController" class="Shopware\Storefront\Controller\VerificationHashController" public="true">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\StorefrontPluginConfiguration\StorefrontPluginConfigurationFactory" class="Shopware\Storefront\Theme\StorefrontPluginConfiguration\StorefrontPluginConfigurationFactory">
      <argument>/home/avinash/Desktop/work/Shopware</argument>
    </service>
    <service id="Shopware\Storefront\Theme\StorefrontPluginRegistry" class="Shopware\Storefront\Theme\StorefrontPluginRegistry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginConfiguration\StorefrontPluginConfigurationFactory"/>
      <argument type="service" id="Shopware\Core\Framework\App\ActiveAppsLoader"/>
    </service>
    <service id="Shopware\Storefront\Theme\ScssPhpCompiler" class="Shopware\Storefront\Theme\ScssPhpCompiler"/>
    <service id="Shopware\Storefront\Theme\ThemeCompiler" class="Shopware\Storefront\Theme\ThemeCompiler">
      <argument type="service" id="shopware.filesystem.theme"/>
      <argument type="service" id="shopware.filesystem.temp"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeFileResolver"/>
      <argument>true</argument>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeFileImporter"/>
      <argument type="collection">
        <argument key="public" type="service" id="shopware.asset.public"/>
        <argument key="asset" type="service" id="shopware.asset.asset"/>
        <argument key="sitemap" type="service" id="shopware.asset.sitemap"/>
        <argument key="theme" type="service" id="shopware.asset.theme"/>
      </argument>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
      <argument type="service" id="Shopware\Storefront\Theme\SeedingThemePathBuilder"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Shopware\Storefront\Theme\ScssPhpCompiler"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument>900</argument>
      <argument>false</argument>
    </service>
    <service id="Shopware\Storefront\Theme\ThemeFileImporter" class="Shopware\Storefront\Theme\ThemeFileImporter">
      <argument>/home/avinash/Desktop/work/Shopware</argument>
    </service>
    <service id="Shopware\Storefront\Theme\ThemeLifecycleService" class="Shopware\Storefront\Theme\ThemeLifecycleService">
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
      <argument type="service" id="theme.repository"/>
      <argument type="service" id="media.repository"/>
      <argument type="service" id="media_folder.repository"/>
      <argument type="service" id="theme_media.repository"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\FileSaver"/>
      <argument type="service" id="Shopware\Core\Content\Media\File\FileNameProvider"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeFileImporter"/>
      <argument type="service" id="language.repository"/>
      <argument type="service" id="theme_child.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginConfiguration\StorefrontPluginConfigurationFactory" on-invalid="null"/>
    </service>
    <service id="Shopware\Storefront\Theme\ThemeFileResolver" class="Shopware\Storefront\Theme\ThemeFileResolver">
      <argument type="service" id="Shopware\Storefront\Theme\ThemeFileImporter"/>
    </service>
    <service id="Shopware\Storefront\Theme\ThemeService" class="Shopware\Storefront\Theme\ThemeService">
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
      <argument type="service" id="theme.repository"/>
      <argument type="service" id="theme_sales_channel.repository"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeCompiler"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Storefront\Theme\ConfigLoader\DatabaseConfigLoader"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="messenger.bus.shopware"/>
      <argument type="service" id="Shopware\Administration\Notification\NotificationService"/>
    </service>
    <service id="Shopware\Storefront\Theme\CachedResolvedConfigLoader" class="Shopware\Storefront\Theme\CachedResolvedConfigLoader">
      <tag name="container.decorator" id="Shopware\Storefront\Theme\ResolvedConfigLoader" inner="Shopware\Storefront\Theme\CachedResolvedConfigLoader.inner"/>
      <argument type="service" id="Shopware\Storefront\Theme\CachedResolvedConfigLoader.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    </service>
    <service id="Shopware\Storefront\Theme\CachedResolvedConfigLoaderInvalidator" class="Shopware\Storefront\Theme\CachedResolvedConfigLoaderInvalidator">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidator"/>
      <argument>true</argument>
    </service>
    <service id="Shopware\Storefront\Theme\ThemeLifecycleHandler" class="Shopware\Storefront\Theme\ThemeLifecycleHandler">
      <argument type="service" id="Shopware\Storefront\Theme\ThemeLifecycleService"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeService"/>
      <argument type="service" id="theme.repository"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Storefront\Theme\ThemeAppLifecycleHandler" class="Shopware\Storefront\Theme\ThemeAppLifecycleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginConfiguration\StorefrontPluginConfigurationFactory"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeLifecycleHandler"/>
    </service>
    <service id="Shopware\Storefront\Theme\ConfigLoader\DatabaseAvailableThemeProvider" class="Shopware\Storefront\Theme\ConfigLoader\DatabaseAvailableThemeProvider">
      <argument type="service" id="sales_channel.repository"/>
    </service>
    <service id="Shopware\Storefront\Theme\ConfigLoader\DatabaseConfigLoader" class="Shopware\Storefront\Theme\ConfigLoader\DatabaseConfigLoader">
      <argument type="service" id="theme.repository"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
      <argument type="service" id="media.repository"/>
    </service>
    <service id="Shopware\Storefront\Theme\SeedingThemePathBuilder" class="Shopware\Storefront\Theme\SeedingThemePathBuilder" lazy="true">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
    </service>
    <service id="Shopware\Storefront\Theme\MD5ThemePathBuilder" class="Shopware\Storefront\Theme\MD5ThemePathBuilder"/>
    <service id="Shopware\Storefront\Theme\Message\DeleteThemeFilesHandler" class="Shopware\Storefront\Theme\Message\DeleteThemeFilesHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="shopware.filesystem.theme"/>
      <argument type="service" id="Shopware\Storefront\Theme\SeedingThemePathBuilder"/>
    </service>
    <service id="Shopware\Storefront\Theme\Message\CompileThemeHandler" class="Shopware\Storefront\Theme\Message\CompileThemeHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeCompiler"/>
      <argument type="service" id="Shopware\Storefront\Theme\ConfigLoader\DatabaseConfigLoader"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
      <argument type="service" id="Shopware\Administration\Notification\NotificationService"/>
      <argument type="service" id="sales_channel.repository"/>
    </service>
    <service id="Shopware\Storefront\Theme\ConfigLoader\StaticFileConfigLoader" class="Shopware\Storefront\Theme\ConfigLoader\StaticFileConfigLoader">
      <argument type="service" id="shopware.filesystem.private"/>
    </service>
    <service id="Shopware\Storefront\Theme\ConfigLoader\StaticFileAvailableThemeProvider" class="Shopware\Storefront\Theme\ConfigLoader\StaticFileAvailableThemeProvider">
      <argument type="service" id="shopware.filesystem.private"/>
    </service>
    <service id="Shopware\Storefront\Theme\ConfigLoader\StaticFileConfigDumper" class="Shopware\Storefront\Theme\ConfigLoader\StaticFileConfigDumper">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Storefront\Theme\ConfigLoader\DatabaseConfigLoader"/>
      <argument type="service" id="Shopware\Storefront\Theme\ConfigLoader\DatabaseAvailableThemeProvider"/>
      <argument type="service" id="shopware.filesystem.private"/>
    </service>
    <service id="shopware.asset.theme" class="Shopware\Storefront\Theme\ThemeAssetPackage" lazy="true">
      <tag name="shopware.asset" asset="theme"/>
      <tag name="assets.package" package="theme"/>
      <argument type="collection">
        <argument></argument>
      </argument>
      <argument type="service" id="shopware.asset.theme.version_strategy"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Shopware\Storefront\Theme\SeedingThemePathBuilder"/>
    </service>
    <service id="Shopware\Storefront\Theme\ThemeDefinition" class="Shopware\Storefront\Theme\ThemeDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition" class="Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition" class="Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition" class="Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Aggregate\ThemeChildDefinition" class="Shopware\Storefront\Theme\Aggregate\ThemeChildDefinition" public="true">
      <tag name="shopware.entity.definition"/>
      <call method="compile">
        <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Extension\SalesChannelExtension" class="Shopware\Storefront\Theme\Extension\SalesChannelExtension">
      <tag name="shopware.entity.extension"/>
    </service>
    <service id="Shopware\Storefront\Theme\Extension\LanguageExtension" class="Shopware\Storefront\Theme\Extension\LanguageExtension">
      <tag name="shopware.entity.extension"/>
    </service>
    <service id="Shopware\Storefront\Theme\Extension\MediaExtension" class="Shopware\Storefront\Theme\Extension\MediaExtension">
      <tag name="shopware.entity.extension"/>
    </service>
    <service id="Shopware\Storefront\Theme\Controller\ThemeController" class="Shopware\Storefront\Theme\Controller\ThemeController" public="true">
      <argument type="service" id="Shopware\Storefront\Theme\ThemeService"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Command\ThemeCreateCommand" class="Shopware\Storefront\Theme\Command\ThemeCreateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <call method="setName">
        <argument>theme:create</argument>
      </call>
      <call method="setDescription">
        <argument>Create a new theme</argument>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Command\ThemeChangeCommand" class="Shopware\Storefront\Theme\Command\ThemeChangeCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeService"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="theme.repository"/>
      <argument type="service" id="theme_sales_channel.repository"/>
      <argument type="service" id="media_thumbnail.repository"/>
      <call method="setName">
        <argument>theme:change</argument>
      </call>
      <call method="setDescription">
        <argument>Change the active theme for a sales channel</argument>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Command\ThemeCompileCommand" class="Shopware\Storefront\Theme\Command\ThemeCompileCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeService"/>
      <argument type="service" id="Shopware\Storefront\Theme\ConfigLoader\DatabaseAvailableThemeProvider"/>
      <call method="setName">
        <argument>theme:compile</argument>
      </call>
      <call method="setDescription">
        <argument>Compile the theme</argument>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Command\ThemeDumpCommand" class="Shopware\Storefront\Theme\Command\ThemeDumpCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeFileResolver"/>
      <argument type="service" id="theme.repository"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Shopware\Storefront\Theme\ConfigLoader\StaticFileConfigDumper"/>
      <call method="setName">
        <argument>theme:dump</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the theme configuration</argument>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Command\ThemeRefreshCommand" class="Shopware\Storefront\Theme\Command\ThemeRefreshCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeLifecycleService"/>
      <call method="setName">
        <argument>theme:refresh</argument>
      </call>
      <call method="setDescription">
        <argument>Refresh the theme configuration</argument>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Command\ThemePrepareIconsCommand" class="Shopware\Storefront\Theme\Command\ThemePrepareIconsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>theme:prepare-icons</argument>
      </call>
      <call method="setDescription">
        <argument>Prepare the theme icons</argument>
      </call>
    </service>
    <service id="Shopware\Storefront\Theme\Subscriber\PluginLifecycleSubscriber" class="Shopware\Storefront\Theme\Subscriber\PluginLifecycleSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginConfiguration\StorefrontPluginConfigurationFactory"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeLifecycleHandler"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeLifecycleService"/>
    </service>
    <service id="Shopware\Storefront\Theme\Twig\ThemeInheritanceBuilderInterface" class="Shopware\Storefront\Theme\Twig\ThemeInheritanceBuilder">
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
    </service>
    <service id="Shopware\Storefront\Theme\Subscriber\AppLifecycleSubscriber" class="Shopware\Storefront\Theme\Subscriber\AppLifecycleSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeLifecycleService"/>
      <argument type="service" id="app.repository"/>
    </service>
    <service id="Shopware\Storefront\Theme\Subscriber\ThemeCompilerEnrichScssVarSubscriber" class="Shopware\Storefront\Theme\Subscriber\ThemeCompilerEnrichScssVarSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\Service\ConfigurationService"/>
      <argument type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry"/>
    </service>
    <service id="Shopware\Storefront\Theme\Twig\ThemeNamespaceHierarchyBuilder" class="Shopware\Storefront\Theme\Twig\ThemeNamespaceHierarchyBuilder">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="shopware.twig.hierarchy_builder" priority="500"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Shopware\Storefront\Theme\Twig\ThemeInheritanceBuilderInterface"/>
      <argument type="service" id="Shopware\Storefront\Theme\SalesChannelThemeLoader"/>
    </service>
    <service id="Shopware\Storefront\Theme\Subscriber\FirstRunWizardSubscriber" class="Shopware\Storefront\Theme\Subscriber\FirstRunWizardSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeService"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeLifecycleService"/>
      <argument type="service" id="theme.repository"/>
      <argument type="service" id="theme_sales_channel.repository"/>
      <argument type="service" id="sales_channel.repository"/>
    </service>
    <service id="Shopware\Storefront\Theme\Subscriber\UpdateSubscriber" class="Shopware\Storefront\Theme\Subscriber\UpdateSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeService"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeLifecycleService"/>
      <argument type="service" id="sales_channel.repository"/>
    </service>
    <service id="Shopware\Storefront\Theme\Subscriber\UnusedMediaSubscriber" class="Shopware\Storefront\Theme\Subscriber\UnusedMediaSubscriber">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="theme.repository"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeService"/>
    </service>
    <service id="Shopware\Storefront\Theme\DataAbstractionLayer\ThemeIndexer" class="Shopware\Storefront\Theme\DataAbstractionLayer\ThemeIndexer">
      <tag name="shopware.entity_indexer"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Common\IteratorFactory"/>
      <argument type="service" id="theme.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="Shopware\Storefront\Theme\SalesChannelThemeLoader" class="Shopware\Storefront\Theme\SalesChannelThemeLoader" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Storefront\Theme\DataAbstractionLayer\ThemeExceptionHandler" class="Shopware\Storefront\Theme\DataAbstractionLayer\ThemeExceptionHandler">
      <tag name="shopware.dal.exception_handler"/>
    </service>
    <service id="kernel" class="Shopware\Core\Kernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="nyholm.psr7.psr17_factory" class="Nyholm\Psr7\Factory\Psr17Factory"/>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory"/>
    <service id="argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id="clock" on-invalid="null"/>
    </service>
    <service id="argument_resolver.request_payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" lazy="true">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver">controller.targeted_value_resolver</tag>
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator" on-invalid="null"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator" on-invalid="null"/>
    </service>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">
      <tag priority="100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">
      <tag priority="50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">
      <tag priority="-50" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver">controller.argument_value_resolver</tag>
      <argument type="service" id=".service_locator.4a.A3U6"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">
      <tag priority="-100" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">
      <tag priority="-150" name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver">controller.argument_value_resolver</tag>
    </service>
    <service id="argument_resolver.query_parameter_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">
      <tag name="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver">controller.targeted_value_resolver</tag>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
      <argument>false</argument>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en-GB</argument>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router" on-invalid="ignore"/>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="Symfony\Component\HttpKernel\Exception\NotFoundHttpException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Symfony\Component\Routing\Exception\MissingMandatoryParametersException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Symfony\Component\HttpKernel\Exception\BadRequestHttpException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Symfony\Component\HttpKernel\Exception\UnsupportedMediaTypeHttpException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Symfony\Component\HttpFoundation\Exception\SuspiciousOperationException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Product\Exception\ProductNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Category\Exception\CategoryNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Cms\Exception\PageNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Cart\Exception\CustomerNotLoggedInException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\AddressNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\BadCredentialsException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CannotDeleteDefaultAddressException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CustomerAlreadyConfirmedException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CustomerAuthThrottledException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CustomerNotFoundByHashException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CustomerNotFoundByIdException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CustomerNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CustomerOptinNotCompletedException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CustomerRecoveryHashExpiredException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CustomerWishlistNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\DuplicateWishlistProductException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CannotDeleteActiveAddressException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CustomerGroupRegistrationConfigurationNotFound" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\CustomerWishlistNotActivatedException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\InactiveCustomerException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\LegacyPasswordEncoderNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\NoHashProvidedException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\Exception\WishlistProductNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Payment\Exception\TokenInvalidatedException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Cart\Exception\InvalidCartException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Order\Exception\DeliveryWithoutAddressException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Order\Exception\EmptyCartException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Order\Exception\GuestNotAuthenticatedException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Order\Exception\LanguageOfOrderDeleteException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Order\Exception\PaymentMethodNotAvailableException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Order\Exception\PaymentMethodNotChangeableException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Order\Exception\WrongGuestCredentialsException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Cart\Exception\LineItemNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Promotion\Exception\PatternNotComplexEnoughException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Promotion\Exception\InvalidCodePatternException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\ProductExport\Exception\ExportNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Exception\AssociationNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Exception\VersionMergeAlreadyLockedException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Exception\FieldAccessorBuilderNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Exception\QueryLimitExceededException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Exception\InvalidLimitQueryException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Media\Exception\DuplicatedMediaFileNameException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\System\StateMachine\Exception\IllegalTransitionException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Api\Exception\MissingPrivilegeException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Validation\Exception\ConstraintViolationException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Validation\WriteConstraintViolationException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Uuid\Exception\InvalidUuidException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\System\StateMachine\Exception\StateMachineInvalidEntityIdException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Routing\Exception\MissingRequestParameterException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Write\WriteException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Store\Exception\ExtensionUpdateRequiresConsentAffirmationException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Script\Exception\ScriptExecutionFailedException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Exception\InvalidPriceFieldTypeException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Product\Exception\ReviewNotActiveExeption" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\App\Exception\ActionProcessException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Product\Exception\DuplicateProductNumberException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Exception\SearchRequestException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Api\Exception\ResourceNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Dbal\Exception\UnmappedFieldException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Exception\InvalidFilterQueryException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\RestrictDeleteViolationException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Media\Exception\MediaNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\LandingPage\Exception\LandingPageNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Product\SalesChannel\Exception\ProductSortingNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Api\Exception\InvalidSyncOperationException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Routing\Exception\SalesChannelNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\Exception\UnexpectedFileTypeException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\Exception\InvalidFileAccessTokenException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\App\Exception\AppAlreadyInstalledException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\App\Exception\AppRegistrationException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\System\CustomEntity\Exception\CustomEntityNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\System\SystemConfig\Exception\ConfigurationNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Media\Exception\MissingFileException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\ProductExport\Exception\RenderHeaderException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\ProductExport\Exception\RenderFooterException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\ProductExport\Exception\RenderProductException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\ProductExport\Exception\EmptyExportException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Media\Exception\UploadException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\System\Country\Exception\CountryStateNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\System\Country\Exception\CountryNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Seo\Exception\InvalidTemplateException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Document\Exception\InvalidDocumentGeneratorTypeException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Document\Exception\InvalidDocumentException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Document\Exception\DocumentGenerationException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Document\Exception\DocumentNumberAlreadyExistsException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Document\Exception\InvalidDocumentRendererException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Document\Exception\InvalidFileGeneratorTypeException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Content\Product\Exception\VariantNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Exception\EntityRepositoryNotFoundException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Storefront\Framework\Captcha\Exception\CaptchaInvalidException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Storefront\Theme\Exception\ThemeException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
        <argument key="Shopware\Storefront\Theme\Exception\ThemeAssignmentException" type="collection">
          <argument key="log_level">notice</argument>
          <argument key="status_code">null</argument>
        </argument>
      </argument>
    </service>
    <service id="controller.cache_attribute_listener" class="Symfony\Component\HttpKernel\EventListener\CacheAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\HttpKernelRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\Runner\Symfony\ResponseRunner"/>
      <tag name="container.preload" class="Symfony\Component\Runtime\SymfonyRuntime"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
      <argument>false</argument>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="http_cache" class="Symfony\Bundle\FrameworkBundle\HttpCache\HttpCache">
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="http_cache.store"/>
      <argument type="service" id="esi" on-invalid="null"/>
      <argument type="collection">
        <argument key="debug">true</argument>
      </argument>
      <argument type="service">
        <service class="void">
          <factory class="Symfony\Component\HttpFoundation\Request" method="enableHttpMethodParameterOverride"/>
        </service>
      </argument>
    </service>
    <service id="http_cache.store" class="Symfony\Component\HttpKernel\HttpCache\Store">
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/http_cache</argument>
    </service>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/Shopware_Core_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="Shopware\Core\Framework\Adapter\Twig\TemplateFinder" type="service" id="Shopware\Core\Framework\Adapter\Twig\TemplateFinder" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Framework\Adapter\Twig\EntityTemplateLoader" type="service" id="Shopware\Core\Framework\Adapter\Twig\EntityTemplateLoader" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Framework\App\ActiveAppsLoader" type="service" id="Shopware\Core\Framework\App\ActiveAppsLoader" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\System\CustomField\CustomFieldService" type="service" id="Shopware\Core\System\CustomField\CustomFieldService" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Framework\Script\Debugging\ScriptTraces" type="service" id="Shopware\Core\Framework\Script\Debugging\ScriptTraces" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Framework\Webhook\WebhookCacheClearer" type="service" id="Shopware\Core\Framework\Webhook\WebhookCacheClearer" on-invalid="ignore_uninitialized"/>
        <argument key="shopware.increment.gateway.array" type="service" id="shopware.increment.gateway.array" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\System\SalesChannel\StoreApiCustomFieldMapper" type="service" id="Shopware\Core\System\SalesChannel\StoreApiCustomFieldMapper" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\System\Currency\CurrencyFormatter" type="service" id="Shopware\Core\System\Currency\CurrencyFormatter" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\System\Locale\LanguageLocaleCodeProvider" type="service" id="Shopware\Core\System\Locale\LanguageLocaleCodeProvider" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\System\StateMachine\StateMachineRegistry" type="service" id="Shopware\Core\System\StateMachine\StateMachineRegistry" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\System\StateMachine\Loader\InitialStateIdLoader" type="service" id="Shopware\Core\System\StateMachine\Loader\InitialStateIdLoader" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\System\SystemConfig\SystemConfigService" type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\System\SystemConfig\Store\MemoizedSystemConfigStore" type="service" id="Shopware\Core\System\SystemConfig\Store\MemoizedSystemConfigStore" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\Media\Pathname\UrlGeneratorInterface" type="service" id="Shopware\Core\Content\Media\Pathname\UrlGeneratorInterface" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\Product\SalesChannel\Price\ProductPriceCalculator" type="service" id="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator" type="service" id="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\Product\DataAbstractionLayer\SearchKeywordUpdater" type="service" id="Shopware\Elasticsearch\Product\SearchKeywordReplacement" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Filter\TokenFilter" type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Filter\TokenFilter" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializer" type="service" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializer" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\SalutationSerializer" type="service" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\SalutationSerializer" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\CountrySerializer" type="service" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\CountrySerializer" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\LanguageSerializer" type="service" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\LanguageSerializer" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\CustomerSerializer" type="service" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\CustomerSerializer" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\PromotionIndividualCodeSerializer" type="service" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\PromotionIndividualCodeSerializer" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductCategoryPathsSubscriber" type="service" id="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductCategoryPathsSubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductVariantsSubscriber" type="service" id="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductVariantsSubscriber" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Content\Flow\Dispatching\CachedFlowLoader" type="service" id="Shopware\Core\Content\Flow\Dispatching\CachedFlowLoader" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Checkout\Cart\SalesChannel\CartService" type="service" id="Shopware\Core\Checkout\Cart\SalesChannel\CartService" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Checkout\Cart\Address\AddressValidator" type="service" id="Shopware\Core\Checkout\Cart\Address\AddressValidator" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Checkout\Cart\CartRuleLoader" type="service" id="Shopware\Core\Checkout\Cart\CartRuleLoader" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Core\Checkout\Cart\Facade\ScriptPriceStubs" type="service" id="Shopware\Core\Checkout\Cart\Facade\ScriptPriceStubs" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Storefront\Theme\StorefrontPluginRegistry" type="service" id="Shopware\Storefront\Theme\StorefrontPluginRegistry" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Storefront\Theme\Twig\ThemeNamespaceHierarchyBuilder" type="service" id="Shopware\Storefront\Theme\Twig\ThemeNamespaceHierarchyBuilder" on-invalid="ignore_uninitialized"/>
        <argument key="Shopware\Storefront\Theme\SalesChannelThemeLoader" type="service" id="Shopware\Storefront\Theme\SalesChannelThemeLoader" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="http_client.transport" type="service" id="http_client.transport" on-invalid="ignore_uninitialized"/>
        <argument key="mailer.message_logger_listener" type="service" id="mailer.message_logger_listener" on-invalid="ignore_uninitialized"/>
        <argument key="translation.locale_switcher" type="service" id="translation.locale_switcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="cache.rate_limiter" type="service" id="cache.rate_limiter" on-invalid="ignore_uninitialized"/>
        <argument key=".cache.object.inner" type="service" id=".cache.object.inner" on-invalid="ignore_uninitialized"/>
        <argument key=".cache.http.inner" type="service" id=".cache.http.inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.tags" type="service" id="cache.tags" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service" id="session_listener" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="messenger.transport.in_memory.factory" type="service" id="messenger.transport.in_memory.factory" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.business_event_handler_buffer" type="service" id="monolog.handler.business_event_handler_buffer" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.elasticsearch" type="service" id="monolog.handler.elasticsearch" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="Shopware\Core\Framework\Adapter\Twig\TemplateFinder" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Adapter\Twig\EntityTemplateLoader" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Framework\App\ActiveAppsLoader" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\System\CustomField\CustomFieldService" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Script\Debugging\ScriptTraces" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Framework\Webhook\WebhookCacheClearer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="shopware.increment.gateway.array" type="collection">
          <argument>resetAll</argument>
        </argument>
        <argument key="Shopware\Core\System\SalesChannel\StoreApiCustomFieldMapper" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\System\Currency\CurrencyFormatter" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\System\Locale\LanguageLocaleCodeProvider" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\System\StateMachine\StateMachineRegistry" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\System\StateMachine\Loader\InitialStateIdLoader" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\System\SystemConfig\SystemConfigService" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\System\SystemConfig\Store\MemoizedSystemConfigStore" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\Media\Pathname\UrlGeneratorInterface" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\Product\SalesChannel\Price\ProductPriceCalculator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\Product\DataAbstractionLayer\SearchKeywordUpdater" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\Filter\TokenFilter" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\SalutationSerializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\CountrySerializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\LanguageSerializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\CustomerSerializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\PromotionIndividualCodeSerializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductCategoryPathsSubscriber" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductVariantsSubscriber" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Content\Flow\Dispatching\CachedFlowLoader" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Cart\SalesChannel\CartService" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Cart\Address\AddressValidator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Cart\CartRuleLoader" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Core\Checkout\Cart\Facade\ScriptPriceStubs" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Storefront\Theme\StorefrontPluginRegistry" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Storefront\Theme\Twig\ThemeNamespaceHierarchyBuilder" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="Shopware\Storefront\Theme\SalesChannelThemeLoader" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.messenger.restart_workers_signal" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="http_client.transport" type="collection">
          <argument>?reset</argument>
        </argument>
        <argument key="mailer.message_logger_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="translation.locale_switcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.rate_limiter" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key=".cache.object.inner" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key=".cache.http.inner" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.tags" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="session_listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="messenger.transport.in_memory.factory" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.console" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.business_event_handler_buffer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.elasticsearch" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XXv1IfR"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
        <argument type="service" id="translation.locale_switcher"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger">
      <tag name="kernel.locale_aware"/>
      <argument>en-GB</argument>
    </service>
    <service id="container.getenv" class="Closure">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.get_routing_condition_service" class="Closure" public="true">
      <tag name="routing.expression_language_function" function="service"/>
      <argument type="collection">
        <argument type="service" id=".service_locator.Xbsa8iG"/>
        <argument>get</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" constructor="fromCallable" abstract="true">
      <argument type="service" id="container.getenv"/>
    </service>
    <service id="config_builder.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ConfigBuilderCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="clock" class="Symfony\Component\Clock\Clock"/>
    <service id="Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Request" class="Symfony\Component\HttpFoundation\Request" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Response" class="Symfony\Component\HttpFoundation\Response" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" class="Symfony\Component\HttpFoundation\Session\SessionInterface" abstract="true">
      <tag name="container.excluded"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id=".service_locator.wmwio2R"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.uri_generator" class="Symfony\Component\HttpKernel\Fragment\FragmentUriGenerator">
      <argument>/_fragment</argument>
      <argument type="service" id="uri_signer"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig" on-invalid="null"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument type="service" id="esi" on-invalid="null"/>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
        </service>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
      <call method="setDescription">
        <argument>Display information about the current project</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear the cache</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.rate_limiter</argument>
        <argument>cache.object</argument>
        <argument>cache.http</argument>
        <argument>cache.tags</argument>
        <argument>cache.validator_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
      <call method="setDescription">
        <argument>Clear cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
      <call method="setDescription">
        <argument>Prune cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_invalidate_tags" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolInvalidateTagsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.ndmwPHD"/>
      <call method="setName">
        <argument>cache:pool:invalidate-tags</argument>
      </call>
      <call method="setDescription">
        <argument>Invalidate cache tags for all or a specific pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.rate_limiter</argument>
        <argument>cache.object</argument>
        <argument>cache.http</argument>
        <argument>cache.tags</argument>
        <argument>cache.validator_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
      <call method="setDescription">
        <argument>Delete an item from a cache pool</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.messenger.restart_workers_signal</argument>
        <argument>cache.rate_limiter</argument>
        <argument>cache.object</argument>
        <argument>cache.http</argument>
        <argument>cache.tags</argument>
        <argument>cache.validator_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
      <call method="setDescription">
        <argument>List available cache pools</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
      <call method="setDescription">
        <argument>Warm up an empty cache</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the current configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
      <call method="setDescription">
        <argument>Dump the default configuration for an extension</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
      <call method="setDescription">
        <argument>Display current services for an application</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
      <call method="setDescription">
        <argument>Ensure that arguments injected into services match type declarations</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
      <call method="setDescription">
        <argument>List classes/interfaces you can use for autowiring</argument>
      </call>
    </service>
    <service id="console.command.dotenv_debug" class="Symfony\Component\Dotenv\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>dev</argument>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <call method="setName">
        <argument>debug:dotenv</argument>
      </call>
      <call method="setDescription">
        <argument>Lists all dotenv files with variables and values</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.9ETxUxh"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
      <call method="setDescription">
        <argument>Display configured listeners for an application</argument>
      </call>
    </service>
    <service id="console.command.messenger_consume_messages" class="Symfony\Component\Messenger\Command\ConsumeMessagesCommand">
      <tag name="console.command"/>
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.routable_message_bus"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="null"/>
      <argument type="collection">
        <argument>failed</argument>
        <argument>async</argument>
        <argument>low_priority</argument>
      </argument>
      <argument type="service" id="messenger.listener.reset_services" on-invalid="null"/>
      <argument type="collection">
        <argument>messenger.bus.default</argument>
      </argument>
      <argument>null</argument>
      <argument>null</argument>
      <call method="setName">
        <argument>messenger:consume</argument>
      </call>
      <call method="setDescription">
        <argument>Consume messages</argument>
      </call>
    </service>
    <service id="console.command.messenger_setup_transports" class="Symfony\Component\Messenger\Command\SetupTransportsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection">
        <argument>failed</argument>
        <argument>async</argument>
        <argument>low_priority</argument>
      </argument>
      <call method="setName">
        <argument>messenger:setup-transports</argument>
      </call>
      <call method="setDescription">
        <argument>Prepare the required infrastructure for the transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_debug" class="Symfony\Component\Messenger\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument key="messenger.bus.default" type="collection">
          <argument key="Shopware\Core\Framework\Log\ScheduledTask\LogCleanupTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Framework\Log\ScheduledTask\LogCleanupTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Framework\Adapter\Cache\InvalidateCacheTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Framework\Adapter\Cache\InvalidateCacheTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Framework\Adapter\Cache\Message\CleanupOldCacheFolders" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Framework\Adapter\Cache\Message\CleanupOldCacheFoldersHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Framework\App\ScheduledTask\UpdateAppsTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Framework\App\ScheduledTask\UpdateAppsHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Framework\App\ScheduledTask\DeleteCascadeAppsTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Framework\App\ScheduledTask\DeleteCascadeAppsHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexingMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Framework\DataAbstractionLayer\Indexing\MessageQueue\IterateEntityIndexerMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Framework\DataAbstractionLayer\Version\Cleanup\CleanupVersionTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Framework\DataAbstractionLayer\Version\Cleanup\CleanupVersionTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Framework\MessageQueue\ScheduledTask\MessageQueue\RegisterScheduledTaskMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Framework\MessageQueue\ScheduledTask\MessageQueue\RegisterScheduledTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Framework\Webhook\Message\WebhookEventMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Framework\Webhook\Handler\WebhookEventMessageHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Framework\Webhook\ScheduledTask\CleanupWebhookEventLogTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Framework\Webhook\ScheduledTask\CleanupWebhookEventLogTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\System\SalesChannel\Context\Cleanup\CleanupSalesChannelContextTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\System\SalesChannel\Context\Cleanup\CleanupSalesChannelContextTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\System\UsageData\EntitySync\IterateEntityMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\System\UsageData\EntitySync\IterateEntityMessageHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\System\UsageData\EntitySync\DispatchEntityMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\System\UsageData\EntitySync\DispatchEntityMessageHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\System\UsageData\EntitySync\CollectEntityDataMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\System\UsageData\EntitySync\CollectEntityDataMessageHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\System\UsageData\ScheduledTask\CollectEntityDataTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\System\UsageData\ScheduledTask\CollectEntityDataTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\System\UsageData\ScheduledTask\CheckIntegrationChangedTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\System\UsageData\ScheduledTask\CheckIntegrationChangedTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\Media\Message\GenerateThumbnailsMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\Media\Message\GenerateThumbnailsHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\Media\Message\UpdateThumbnailsMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\Media\Message\GenerateThumbnailsHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\Media\Message\DeleteFileMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\Media\Message\DeleteFileHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\Product\Cleanup\CleanupProductKeywordDictionaryTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\Product\Cleanup\CleanupProductKeywordDictionaryTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\Product\Cleanup\CleanupUnusedDownloadMediaTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\Product\Cleanup\CleanupUnusedDownloadMediaTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\Newsletter\ScheduledTask\NewsletterRecipientTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\Newsletter\ScheduledTask\NewsletterRecipientTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\ProductStream\ScheduledTask\UpdateProductStreamMappingTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\ProductStream\ScheduledTask\UpdateProductStreamMappingTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportGenerateTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportGenerateTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportPartialGeneration" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportPartialGenerationHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\ImportExport\Message\ImportExportMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\ImportExport\Message\ImportExportHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\ImportExport\Message\DeleteFileMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\ImportExport\Message\DeleteFileHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\ImportExport\ScheduledTask\CleanupImportExportFileTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\ImportExport\ScheduledTask\CleanupImportExportFileTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Content\Sitemap\ScheduledTask\SitemapMessageHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Checkout\Cart\Cleanup\CleanupCartTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Checkout\Cart\Cleanup\CleanupCartTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Core\Checkout\Customer\DeleteUnusedGuestCustomerTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Core\Checkout\Customer\DeleteUnusedGuestCustomerHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Elasticsearch\Framework\Indexing\CreateAliasTask" type="collection">
            <argument type="collection">
              <argument>Shopware\Elasticsearch\Framework\Indexing\CreateAliasTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Elasticsearch\Framework\Indexing\ElasticsearchIndexingMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Elasticsearch\Framework\Indexing\ElasticsearchIndexer</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Elasticsearch\Framework\Indexing\ElasticsearchLanguageIndexIteratorMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Elasticsearch\Framework\Indexing\ElasticsearchIndexer</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Elasticsearch\Admin\AdminSearchIndexingMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Elasticsearch\Admin\AdminSearchRegistry</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Storefront\Framework\Cache\CacheWarmer\WarmUpMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Storefront\Framework\Cache\CacheWarmer\CacheWarmerTaskHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Storefront\Theme\Message\DeleteThemeFilesMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Storefront\Theme\Message\DeleteThemeFilesHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Shopware\Storefront\Theme\Message\CompileThemeMessage" type="collection">
            <argument type="collection">
              <argument>Shopware\Storefront\Theme\Message\CompileThemeHandler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="collection">
            <argument type="collection">
              <argument>mailer.messenger.message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
          <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="collection">
            <argument type="collection">
              <argument>messenger.redispatch_message_handler</argument>
              <argument type="collection"/>
            </argument>
          </argument>
        </argument>
      </argument>
      <call method="setName">
        <argument>debug:messenger</argument>
      </call>
      <call method="setDescription">
        <argument>List messages you can dispatch using the message buses</argument>
      </call>
    </service>
    <service id="console.command.messenger_stop_workers" class="Symfony\Component\Messenger\Command\StopWorkersCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <call method="setName">
        <argument>messenger:stop-workers</argument>
      </call>
      <call method="setDescription">
        <argument>Stop workers after their current message</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_retry" class="Symfony\Component\Messenger\Command\FailedMessagesRetryCommand">
      <tag name="console.command"/>
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.routable_message_bus"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="null"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <argument>null</argument>
      <call method="setName">
        <argument>messenger:failed:retry</argument>
      </call>
      <call method="setDescription">
        <argument>Retry one or more messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_show" class="Symfony\Component\Messenger\Command\FailedMessagesShowCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <call method="setName">
        <argument>messenger:failed:show</argument>
      </call>
      <call method="setDescription">
        <argument>Show one or more messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_failed_messages_remove" class="Symfony\Component\Messenger\Command\FailedMessagesRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument>failed</argument>
      <argument type="service" id=".service_locator.Y4J.A.e"/>
      <argument type="service" id="messenger.transport.native_php_serializer" on-invalid="null"/>
      <call method="setName">
        <argument>messenger:failed:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove given messages from the failure transport</argument>
      </call>
    </service>
    <service id="console.command.messenger_stats" class="Symfony\Component\Messenger\Command\StatsCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="messenger.receiver_locator"/>
      <argument type="collection">
        <argument>failed</argument>
        <argument>async</argument>
        <argument>low_priority</argument>
      </argument>
      <call method="setName">
        <argument>messenger:stats</argument>
      </call>
      <call method="setDescription">
        <argument>Show the message count for one or more transports</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
      <call method="setDescription">
        <argument>Display current routes for an application</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
      <call method="setDescription">
        <argument>Help debug routes by simulating a path info match</argument>
      </call>
    </service>
    <service id="console.command.serializer_debug" class="Symfony\Component\Serializer\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <call method="setName">
        <argument>debug:serializer</argument>
      </call>
      <call method="setDescription">
        <argument>Display serialization information for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources/snippet</argument>
      <argument>/home/avinash/Desktop/work/Shopware/templates</argument>
      <argument type="collection">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations</argument>
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/twig-bridge/Resources/views/Email</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
      <call method="setDescription">
        <argument>Display translation messages information</argument>
      </call>
    </service>
    <service id="console.command.translation_extract" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en-GB</argument>
      <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources/snippet</argument>
      <argument>/home/avinash/Desktop/work/Shopware/templates</argument>
      <argument type="collection">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations</argument>
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/twig-bridge/Resources/views/Email</argument>
      </argument>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:extract</argument>
      </call>
      <call method="setDescription">
        <argument>Extract missing translations keys from code to translation files.</argument>
      </call>
    </service>
    <service id="console.command.validator_debug" class="Symfony\Component\Validator\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
      <call method="setName">
        <argument>debug:validator</argument>
      </call>
      <call method="setDescription">
        <argument>Display validation constraints for classes</argument>
      </call>
    </service>
    <service id="console.command.translation_pull" class="Symfony\Component\Translation\Command\TranslationPullCommand">
      <tag name="console.command" command="translation:pull"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument>en-GB</argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:pull</argument>
      </call>
      <call method="setDescription">
        <argument>Pull translations from a given provider.</argument>
      </call>
    </service>
    <service id="console.command.translation_push" class="Symfony\Component\Translation\Command\TranslationPushCommand">
      <tag name="console.command" command="translation:push"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.provider_collection"/>
      <argument type="service" id="translation.reader"/>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setName">
        <argument>translation:push</argument>
      </call>
      <call method="setDescription">
        <argument>Push translations to a given provider.</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Component\Translation\Command\XliffLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
      <call method="setDescription">
        <argument>Lint an XLIFF file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a YAML file and outputs encountered errors</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
      <call method="setDescription">
        <argument>Set a secret in the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="null"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
      <call method="setDescription">
        <argument>Remove a secret from the vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
      <call method="setDescription">
        <argument>Generate new encryption keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
      <call method="setDescription">
        <argument>List all secrets</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
      <call method="setDescription">
        <argument>Decrypt all secrets and stores them in the local vault</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
      <call method="setDescription">
        <argument>Encrypt all local secrets to the vault</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <tag name="cache.taggable" pool="cache.app"/>
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>VOZ9gyKDXg</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>qaf7jj8jYK</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>8Xw-jxP3f1</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>yb+B0tLBlk</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\AdapterInterface">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>vHgEIW6kbz</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.messenger.restart_workers_signal" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/pools/app</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument type="abstract">PSR-6 provider service</argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Shopware\Core\Framework\Adapter\Cache\ShopwareRedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <argument>%env(REDIS_PREFIX)%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.redis_tag_aware" class="Shopware\Core\Framework\Adapter\Cache\ShopwareRedisTagAwareAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Redis connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <argument>%env(REDIS_PREFIX)%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">Memcached connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine_dbal" class="Symfony\Component\Cache\Adapter\DoctrineDbalAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_dbal_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">DBAL connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="abstract">PDO connection service</argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller">
      <argument>null</argument>
      <argument>true</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.rate_limiter" type="service" id="cache.rate_limiter" on-invalid="ignore_uninitialized"/>
        <argument key="cache.object" type="service" id=".cache.object.inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.http" type="service" id=".cache.http.inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.tags" type="service" id="cache.tags" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.messenger.restart_workers_signal" type="service" id="cache.messenger.restart_workers_signal" on-invalid="ignore_uninitialized"/>
        <argument key="cache.rate_limiter" type="service" id="cache.rate_limiter" on-invalid="ignore_uninitialized"/>
        <argument key="cache.object" type="service" id=".cache.object.inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.http" type="service" id=".cache.http.inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.tags" type="service" id="cache.tags" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator_expression_language" type="service" id="cache.validator_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator"/>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="collection">
        <argument key="Framework">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework</argument>
        <argument key="System">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/System</argument>
        <argument key="Content">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Content</argument>
        <argument key="Checkout">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Checkout</argument>
        <argument key="Maintenance">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Maintenance</argument>
        <argument key="Profiling">/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Profiling</argument>
        <argument key="Administration">/home/avinash/Desktop/work/Shopware/vendor/shopware/administration</argument>
        <argument key="Elasticsearch">/home/avinash/Desktop/work/Shopware/vendor/shopware/elasticsearch</argument>
        <argument key="Storefront">/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront</argument>
      </argument>
      <argument type="service" id="shopware.asset.asset_without_versioning"/>
      <argument type="service" id="shopware.asset.asset.version_strategy"/>
      <argument type="service" id="assets._default_package"/>
      <argument type="tagged_iterator" tag="assets.package" index-by="package" default-index-method="getDefaultPackageName" default-priority-method="getDefaultPackagePriority"/>
      <call method="setDefaultPackage">
        <argument type="service" id="shopware.asset.asset"/>
      </call>
      <factory class="Shopware\Core\Framework\Adapter\Asset\AssetPackageService" method="create"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
      <argument type="service">
        <service class="string">
          <factory service="router.request_context" method="getBaseUrl"/>
        </service>
      </argument>
      <argument type="service">
        <service class="bool">
          <factory service="router.request_context" method="isSecure"/>
        </service>
      </argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument type="abstract">base path</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument type="abstract">base URLs</argument>
      <argument type="abstract">version strategy</argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument type="abstract">version</argument>
      <argument type="abstract">format</argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" abstract="true">
      <argument type="abstract">manifest path</argument>
      <argument type="service" id="http_client.uri_template" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="http_client.transport" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="kernel.reset" method="reset" on_invalid="ignore"/>
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.http_client" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="psr18.http_client" class="Symfony\Component\HttpClient\Psr18Client">
      <argument type="service" id="http_client.uri_template"/>
      <argument type="service" id="nyholm.psr7.psr17_factory" on-invalid="ignore"/>
      <argument type="service" id="nyholm.psr7.psr17_factory" on-invalid="ignore"/>
    </service>
    <service id="http_client.abstract_retry_strategy" class="Symfony\Component\HttpClient\Retry\GenericRetryStrategy" abstract="true">
      <argument type="abstract">http codes</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
      <argument type="abstract">jitter</argument>
    </service>
    <service id="http_client.uri_template" class="Symfony\Component\HttpClient\UriTemplateHttpClient">
      <tag name="http_client.client"/>
      <tag name="container.decorator" id="http_client" inner="http_client.uri_template.inner"/>
      <argument type="service" id="http_client.uri_template.inner"/>
      <argument type="service" id="http_client.uri_template_expander.rize" on-invalid="null"/>
      <argument type="collection"/>
    </service>
    <service id="http_client.uri_template_expander.guzzle" class="Closure">
      <argument type="collection">
        <argument>GuzzleHttp\UriTemplate\UriTemplate</argument>
        <argument>expand</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="http_client.uri_template_expander.rize" class="Closure">
      <argument type="collection">
        <argument type="service">
          <service class="Rize\UriTemplate"/>
        </argument>
        <argument>expand</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="mailer.mailer" class="Symfony\Component\Mailer\Mailer">
      <argument type="service" id="mailer.transports"/>
      <argument>null</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="mailer.transports" class="Symfony\Component\Mailer\Transport\Transports">
      <argument type="collection">
        <argument key="main">%env(MAILER_DSN)%</argument>
      </argument>
      <factory service="Shopware\Core\Content\Mail\Service\MailerTransportLoader" method="fromStrings"/>
    </service>
    <service id="mailer.transport_factory" class="Symfony\Component\Mailer\Transport">
      <argument type="tagged_iterator" tag="mailer.transport_factory"/>
    </service>
    <service id="mailer.default_transport" class="Symfony\Component\Mailer\Transport\TransportInterface">
      <argument>%env(MAILER_DSN)%</argument>
      <factory service="Shopware\Core\Content\Mail\Service\MailerTransportLoader" method="fromString"/>
    </service>
    <service id="mailer.messenger.message_handler" class="Symfony\Component\Mailer\Messenger\MessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="mailer.transports"/>
    </service>
    <service id="mailer.envelope_listener" class="Symfony\Component\Mailer\EventListener\EnvelopeListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="mailer.message_logger_listener" class="Symfony\Component\Mailer\EventListener\MessageLoggerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="mailer.messenger_transport_listener" class="Symfony\Component\Mailer\EventListener\MessengerTransportListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.mailer_test" class="Symfony\Component\Mailer\Command\MailerTestCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="mailer.transports"/>
      <call method="setName">
        <argument>mailer:test</argument>
      </call>
      <call method="setDescription">
        <argument>Test Mailer transports by sending an email</argument>
      </call>
    </service>
    <service id="mailer.transport_factory.abstract" class="Symfony\Component\Mailer\Transport\AbstractTransportFactory" abstract="true">
      <tag name="monolog.logger" channel="mailer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.null" class="Symfony\Component\Mailer\Transport\NullTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.sendmail" class="Symfony\Component\Mailer\Transport\SendmailTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.smtp" class="Symfony\Component\Mailer\Transport\Smtp\EsmtpTransportFactory">
      <tag name="mailer.transport_factory" priority="-100"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="mailer.transport_factory.native" class="Symfony\Component\Mailer\Transport\NativeTransportFactory">
      <tag name="mailer.transport_factory"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="http_client.uri_template" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.mailer" on-invalid="ignore"/>
    </service>
    <service id="esi" class="Symfony\Component\HttpKernel\HttpCache\Esi"/>
    <service id="esi_listener" class="Symfony\Component\HttpKernel\EventListener\SurrogateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="esi" on-invalid="ignore"/>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.yY.p4P7"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en-GB</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.af.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.az.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.be.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.bg.xlf</argument>
          </argument>
          <argument key="bs" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.bs.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.bs.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.cs.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.da.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.de.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.el.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.en.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.en.xlf</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.es.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.et.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.fa.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.fi.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.he.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.hu.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.id.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.it.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mk" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.mk.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.mk.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.mn.xlf</argument>
          </argument>
          <argument key="my" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.my.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.my.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.no.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.sl.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.sq.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.th.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.uk.xlf</argument>
          </argument>
          <argument key="ur" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.ur.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.ur.xlf</argument>
          </argument>
          <argument key="uz" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.uz.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.uz.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf</argument>
            <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations/security.zh_TW.xlf</argument>
          </argument>
          <argument key="de-DE" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources/snippet/de_DE/storefront.de-DE.json</argument>
          </argument>
          <argument key="en-GB" type="collection">
            <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources/snippet/en_GB/storefront.en-GB.json</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/validator/Resources/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/security-core/Resources/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources/snippet</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/framework-bundle/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/twig-bundle/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/monolog-bundle/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/debug-bundle/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/System/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Content/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Checkout/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Maintenance/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Profiling/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/administration/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/elasticsearch/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/translations</argument>
          <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework/Plugin/KernelPluginLoader/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>vendor/symfony/validator/Resources/translations</argument>
            <argument>vendor/symfony/security-core/Resources/translations</argument>
            <argument>vendor/shopware/storefront/Resources/snippet</argument>
            <argument>vendor/symfony/framework-bundle/translations</argument>
            <argument>vendor/symfony/twig-bundle/translations</argument>
            <argument>vendor/symfony/monolog-bundle/translations</argument>
            <argument>vendor/symfony/debug-bundle/translations</argument>
            <argument>vendor/shopware/core/Framework/translations</argument>
            <argument>vendor/shopware/core/System/translations</argument>
            <argument>vendor/shopware/core/Content/translations</argument>
            <argument>vendor/shopware/core/Checkout/translations</argument>
            <argument>vendor/shopware/core/Maintenance/translations</argument>
            <argument>vendor/shopware/core/Profiling/translations</argument>
            <argument>vendor/shopware/administration/translations</argument>
            <argument>vendor/shopware/elasticsearch/translations</argument>
            <argument>vendor/shopware/storefront/translations</argument>
            <argument>vendor/shopware/core/Framework/Plugin/KernelPluginLoader/translations</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en_GB</argument>
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yaml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.xliff.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xliff"/>
      <argument>xliff</argument>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
      <deprecated package="symfony/framework-bundle" version="6.2">The "%service_id%" service is deprecated, use "translation.extractor.php_ast" instead.</deprecated>
    </service>
    <service id="translation.extractor.visitor.trans_method" class="Symfony\Component\Translation\Extractor\Visitor\TransMethodVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.translatable_message" class="Symfony\Component\Translation\Extractor\Visitor\TranslatableMessageVisitor">
      <tag name="translation.extractor.visitor"/>
    </service>
    <service id="translation.extractor.visitor.constraint" class="Symfony\Component\Translation\Extractor\Visitor\ConstraintVisitor">
      <tag name="translation.extractor.visitor"/>
      <argument type="collection">
        <argument>EntityExists</argument>
        <argument>EntityNotExists</argument>
        <argument>CustomerEmailUnique</argument>
        <argument>CustomerPasswordMatches</argument>
        <argument>CustomerVatIdentification</argument>
        <argument>CustomerZipCode</argument>
        <argument>All</argument>
        <argument>AtLeastOneOf</argument>
        <argument>Bic</argument>
        <argument>Blank</argument>
        <argument>Callback</argument>
        <argument>CardScheme</argument>
        <argument>Choice</argument>
        <argument>Cidr</argument>
        <argument>Collection</argument>
        <argument>Compound</argument>
        <argument>Count</argument>
        <argument>Country</argument>
        <argument>CssColor</argument>
        <argument>Currency</argument>
        <argument>DateTime</argument>
        <argument>Date</argument>
        <argument>DivisibleBy</argument>
        <argument>Email</argument>
        <argument>EqualTo</argument>
        <argument>ExpressionSyntax</argument>
        <argument>Expression</argument>
        <argument>File</argument>
        <argument>GreaterThanOrEqual</argument>
        <argument>GreaterThan</argument>
        <argument>Hostname</argument>
        <argument>Iban</argument>
        <argument>IdenticalTo</argument>
        <argument>Image</argument>
        <argument>Ip</argument>
        <argument>IsFalse</argument>
        <argument>IsNull</argument>
        <argument>IsTrue</argument>
        <argument>Isbn</argument>
        <argument>Isin</argument>
        <argument>Issn</argument>
        <argument>Json</argument>
        <argument>Language</argument>
        <argument>Length</argument>
        <argument>LessThanOrEqual</argument>
        <argument>LessThan</argument>
        <argument>Locale</argument>
        <argument>Luhn</argument>
        <argument>NoSuspiciousCharacters</argument>
        <argument>NotBlank</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>NotEqualTo</argument>
        <argument>NotIdenticalTo</argument>
        <argument>NotNull</argument>
        <argument>PasswordStrength</argument>
        <argument>Range</argument>
        <argument>Regex</argument>
        <argument>Sequentially</argument>
        <argument>Time</argument>
        <argument>Timezone</argument>
        <argument>Type</argument>
        <argument>Ulid</argument>
        <argument>Unique</argument>
        <argument>Url</argument>
        <argument>Uuid</argument>
        <argument>Valid</argument>
        <argument>When</argument>
        <argument>Expression</argument>
        <argument>Email</argument>
        <argument>NotCompromisedPassword</argument>
        <argument>When</argument>
        <argument>NoSuspiciousCharacters</argument>
      </argument>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>xliff</argument>
        <argument type="service" id="translation.dumper.xliff.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.fuYM_Z..translation.warmer"/>
    </service>
    <service id="translation.locale_switcher" class="Symfony\Component\Translation\LocaleSwitcher">
      <tag name="kernel.reset" method="reset"/>
      <tag name="kernel.locale_aware"/>
      <argument>en-GB</argument>
      <argument type="tagged_iterator" tag="kernel.locale_aware" exclude="translation.locale_switcher"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="translation.provider_collection" class="Symfony\Component\Translation\Provider\TranslationProviderCollection">
      <argument type="collection"/>
      <factory service="translation.provider_collection_factory" method="fromConfig"/>
    </service>
    <service id="translation.provider_collection_factory" class="Symfony\Component\Translation\Provider\TranslationProviderCollectionFactory">
      <argument type="tagged_iterator" tag="translation.provider_factory"/>
      <argument type="collection"/>
    </service>
    <service id="translation.provider_factory.null" class="Symfony\Component\Translation\Provider\NullProviderFactory">
      <tag name="translation.provider_factory"/>
    </service>
    <service id="debug.error_handler_configurator" class="Symfony\Component\HttpKernel\Debug\ErrorHandlerConfigurator" public="true">
      <tag name="monolog.logger" channel="php"/>
      <argument type="service" id="monolog.logger.php"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter">
      <argument>%env(default::SYMFONY_IDE)%</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="container.hot_path"/>
      <tag name="event_dispatcher">event_dispatcher.dispatcher</tag>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.decorator" id="event_dispatcher" inner="Shopware\Core\Content\Flow\Dispatching\FlowDispatcher.inner"/>
      <argument type="service" id="Shopware\Core\Framework\Event\NestedEventDispatcher"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Routing\RouteParamsCleanupListener"/>
          <argument>__invoke</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Category\Event\CategoryIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateCategoryRouteByCategoryIds</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Category\Event\CategoryIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateListingRouteByCategoryIds</argument>
        </argument>
        <argument>2001</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\LandingPage\Event\LandingPageIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateIndexedLandingPages</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateSearch</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateListings</argument>
        </argument>
        <argument>2001</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateProductIds</argument>
        </argument>
        <argument>2002</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateDetailRoute</argument>
        </argument>
        <argument>2004</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateStreamsAfterIndexing</argument>
        </argument>
        <argument>2005</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateReviewRoute</argument>
        </argument>
        <argument>2006</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateSearch</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateListings</argument>
        </argument>
        <argument>2001</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateProductIds</argument>
        </argument>
        <argument>2002</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateDetailRoute</argument>
        </argument>
        <argument>2004</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateStreamsAfterIndexing</argument>
        </argument>
        <argument>2005</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductNoLongerAvailableEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateReviewRoute</argument>
        </argument>
        <argument>2006</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateCmsPageIds</argument>
        </argument>
        <argument>2001</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateCurrencyRoute</argument>
        </argument>
        <argument>2002</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateLanguageRoute</argument>
        </argument>
        <argument>2003</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateNavigationRoute</argument>
        </argument>
        <argument>2004</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidatePaymentMethodRoute</argument>
        </argument>
        <argument>2005</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateProductAssignment</argument>
        </argument>
        <argument>2006</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateManufacturerFilters</argument>
        </argument>
        <argument>2007</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidatePropertyFilters</argument>
        </argument>
        <argument>2008</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateCrossSellingRoute</argument>
        </argument>
        <argument>2009</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateContext</argument>
        </argument>
        <argument>2010</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateShippingMethodRoute</argument>
        </argument>
        <argument>2011</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateSnippets</argument>
        </argument>
        <argument>2012</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateStreamsBeforeIndexing</argument>
        </argument>
        <argument>2013</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateStreamIds</argument>
        </argument>
        <argument>2014</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateCountryRoute</argument>
        </argument>
        <argument>2015</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateSalutationRoute</argument>
        </argument>
        <argument>2016</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateInitialStateIdLoader</argument>
        </argument>
        <argument>2017</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateCountryStateRoute</argument>
        </argument>
        <argument>2018</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Seo\Event\SeoUrlUpdateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateSeoUrls</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Rule\Event\RuleIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateRules</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostInstallEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateRules</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostInstallEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateConfig</argument>
        </argument>
        <argument>2001</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostActivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateRules</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostActivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateConfig</argument>
        </argument>
        <argument>2001</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostUpdateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateRules</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostUpdateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateConfig</argument>
        </argument>
        <argument>2001</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostDeactivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateRules</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostDeactivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateConfig</argument>
        </argument>
        <argument>2001</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\System\SystemConfig\Event\SystemConfigChangedHook</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateConfigKey</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Sitemap\Event\SitemapGeneratedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateSitemap</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>product_search_config.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber"/>
          <argument>invalidateSearch</argument>
        </argument>
        <argument>2002</argument>
      </call>
      <call method="addListener">
        <argument>media.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Media\Subscriber\MediaLoadedSubscriber"/>
          <argument>unserialize</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>media.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Media\Core\Application\MediaUrlLoader"/>
          <argument>loaded</argument>
        </argument>
        <argument>20</argument>
      </call>
      <call method="addListener">
        <argument>partial.media.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Media\Core\Application\MediaUrlLoader"/>
          <argument>loaded</argument>
        </argument>
        <argument>19</argument>
      </call>
      <call method="addListener">
        <argument>media.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Media\Core\Application\MediaUrlLoader"/>
          <argument>legacyPath</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>media.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Media\Core\Application\MediaUrlLoader"/>
          <argument>legacy</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Media\Core\Event\UpdateMediaPathEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Media\Core\Application\MediaPathUpdater"/>
          <argument>updateMedia</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Media\Core\Event\UpdateThumbnailPathEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Media\Core\Application\MediaPathUpdater"/>
          <argument>updateThumbnails</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWriteEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\Stock\AvailableStockMirrorSubscriber"/>
          <argument>__invoke</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Update\Event\UpdatePostFinishEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Elasticsearch\Framework\SystemUpdateListener"/>
          <argument>__invoke</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Twig\TwigDateRequestListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Routing\ContextResolverListener"/>
          <argument>resolveContext</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Routing\CoreSubscriber"/>
          <argument>initializeCspNonce</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Routing\CoreSubscriber"/>
          <argument>setSecurityHeaders</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Routing\RouteScopeListener"/>
          <argument>checkScope</argument>
        </argument>
        <argument>-20</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Routing\RouteEventSubscriber"/>
          <argument>request</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Routing\RouteEventSubscriber"/>
          <argument>response</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Storefront\Event\StorefrontRenderEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Routing\RouteEventSubscriber"/>
          <argument>render</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>snippet.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Translation\TranslatorCacheInvalidate"/>
          <argument>invalidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>snippet.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Translation\TranslatorCacheInvalidate"/>
          <argument>invalidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>snippet_set.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Translation\TranslatorCacheInvalidate"/>
          <argument>invalidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app_template.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Twig\EntityTemplateLoader"/>
          <argument>reset</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>flow.log</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Log\LoggingService"/>
          <argument>logFlowEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\Acl\AclWriteValidator"/>
          <argument>preValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\Acl\AclAnnotationValidator"/>
          <argument>validate</argument>
        </argument>
        <argument>-20</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Api\Acl\Event\CommandAclValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\Acl\CreditOrderLineItemListener"/>
          <argument>validate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheStateSubscriber"/>
          <argument>setStates</argument>
        </argument>
        <argument>-21</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Customer\Event\CustomerLoginEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheStateSubscriber"/>
          <argument>login</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Cart\Event\CartChangedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheStateSubscriber"/>
          <argument>cartChanged</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\Script\ScriptCacheInvalidationSubscriber"/>
          <argument>executeCacheInvalidationHook</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\CorsListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>9999</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\CorsListener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>9999</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\ResponseExceptionListener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\ResponseHeaderListener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\JsonRequestTransformerListener"/>
          <argument>onRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\ExpectationSubscriber"/>
          <argument>checkExpectations</argument>
        </argument>
        <argument>-21</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\Authentication\SalesChannelAuthenticationListener"/>
          <argument>validateRequest</argument>
        </argument>
        <argument>-2</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\Authentication\ApiAuthenticationListener"/>
          <argument>setupOAuth</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\Authentication\ApiAuthenticationListener"/>
          <argument>validateRequest</argument>
        </argument>
        <argument>-2</argument>
      </call>
      <call method="addListener">
        <argument>user.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\Authentication\UserCredentialsChangedSubscriber"/>
          <argument>onUserWritten</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>user.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Api\EventListener\Authentication\UserCredentialsChangedSubscriber"/>
          <argument>onUserDeleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\App\Subscriber\AppLoadedSubscriber"/>
          <argument>unserialize</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\App\Subscriber\CustomFieldProtectionSubscriber"/>
          <argument>checkWrite</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app_script_condition.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\App\Subscriber\AppScriptConditionConstraintsSubscriber"/>
          <argument>unserialize</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app_flow_action.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\App\Flow\Action\AppFlowActionLoadedSubscriber"/>
          <argument>unserialize</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>custom_field.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\CustomField\CustomFieldService"/>
          <argument>reset</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>custom_field.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\CustomField\CustomFieldService"/>
          <argument>reset</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Event\ProgressStartedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand"/>
          <argument>startProgress</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Event\ProgressAdvancedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand"/>
          <argument>advanceProgress</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Event\ProgressFinishedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand"/>
          <argument>finishProgress</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Update\Event\UpdatePostFinishEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\Subscriber\RegisteredIndexerSubscriber"/>
          <argument>runRegisteredIndexers</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Store\Event\FirstRunWizardFinishedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\Subscriber\RegisteredIndexerSubscriber"/>
          <argument>runRegisteredIndexers</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\LockValidator"/>
          <argument>preValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\EntityProtection\EntityProtectionValidator"/>
          <argument>validateWriteCommands</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntitySearchedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\EntityProtection\EntityProtectionValidator"/>
          <argument>validateEntitySearch</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\Subscriber\EntityIndexingSubscriber"/>
          <argument>refreshIndex</argument>
        </argument>
        <argument>1000</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Subscriber\MessageQueueStatsSubscriber"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>99</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageHandledEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Subscriber\MessageQueueStatsSubscriber"/>
          <argument>onMessageHandled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\SendMessageToTransportsEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Subscriber\MessageQueueStatsSubscriber"/>
          <argument>onMessageSent</argument>
        </argument>
        <argument>99</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Subscriber\ConsumeMessagesSubscriber"/>
          <argument>onMessengerConsume</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>plugin.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Subscriber\PluginLoadedSubscriber"/>
          <argument>unserialize</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>acl_role.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Subscriber\PluginAclPrivilegesSubscriber"/>
          <argument>onAclRoleLoaded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostActivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Subscriber\PluginLifecycleSubscriber"/>
          <argument>afterPluginStateChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostDeactivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Subscriber\PluginLifecycleSubscriber"/>
          <argument>afterPluginStateChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostUpdateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Subscriber\PluginLifecycleSubscriber"/>
          <argument>afterPluginStateChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\ScheduledTask\Compatibility\ScheduledTaskCompatibilitySubscriber"/>
          <argument>addBackwardsCompatibility</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Update\Event\UpdatePostFinishEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Subscriber\UpdatePostFinishSubscriber"/>
          <argument>updatePostFinishEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\System\SystemConfig\Event\SystemConfigChangedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Store\Subscriber\LicenseHostChangedSubscriber"/>
          <argument>onLicenseHostChanged</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>script.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Script\Execution\ScriptLoader"/>
          <argument>invalidateCache</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\Language\LanguageValidator"/>
          <argument>preValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PostWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\Language\LanguageValidator"/>
          <argument>postValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>language.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\Language\CachedLanguageLoader"/>
          <argument>invalidateCache</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>language.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\Language\CachedLanguageLoader"/>
          <argument>invalidateCache</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\Language\TranslationValidator"/>
          <argument>preValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Update\Event\UpdatePostFinishEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Update\Services\UpdateHtaccess"/>
          <argument>update</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Update\Event\UpdatePostFinishEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Update\Services\CreateCustomAppsDir"/>
          <argument>onUpdate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Seo\SalesChannel\StoreApiSeoResolver"/>
          <argument>addSeoInformation</argument>
        </argument>
        <argument>10000</argument>
      </call>
      <call method="addListener">
        <argument>webhook.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Webhook\WebhookCacheClearer"/>
          <argument>clearWebhookCache</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>acl_role.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Webhook\WebhookCacheClearer"/>
          <argument>clearPrivilegesCache</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Framework\Webhook\Subscriber\RetryWebhookMessageFailedSubscriber"/>
          <argument>failed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\SalesChannel\Api\StoreApiResponseListener"/>
          <argument>encodeResponse</argument>
        </argument>
        <argument>10000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\SalesChannel\Validation\SalesChannelValidator"/>
          <argument>handleSalesChannelLanguageIds</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\SalesChannel\Subscriber\SalesChannelTypeValidator"/>
          <argument>preWriteValidateEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>currency.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\Currency\CurrencyLoadSubscriber"/>
          <argument>setDefault</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>currency.partial_loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\Currency\CurrencyLoadSubscriber"/>
          <argument>setDefault</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\Currency\CurrencyValidator"/>
          <argument>preValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\System\SystemConfig\Event\SystemConfigChangedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\UsageData\Subscriber\UsageDataApprovalSubscriber"/>
          <argument>onDataUsageApprovalChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityDeleteEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\UsageData\Subscriber\EntityDeleteSubscriber"/>
          <argument>handleEntityDeleteEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>custom_field.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\Snippet\Subscriber\CustomFieldSubscriber"/>
          <argument>customFieldIsWritten</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>custom_field.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\Snippet\Subscriber\CustomFieldSubscriber"/>
          <argument>customFieldIsDeleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\System\SystemConfig\Event\SystemConfigChangedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\System\SystemConfig\Store\MemoizedSystemConfigStore"/>
          <argument>onValueChanged</argument>
        </argument>
        <argument>1500</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PostWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Category\Validation\EntryPointValidator"/>
          <argument>postValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>category.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Category\Subscriber\CategorySubscriber"/>
          <argument>entityLoaded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>sales_channel.category.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Category\Subscriber\CategorySubscriber"/>
          <argument>entityLoaded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>media_folder_configuration.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Media\Subscriber\MediaFolderConfigLoadedSubscriber"/>
          <argument>unserialize</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityDeleteEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Media\Subscriber\MediaDeletionSubscriber"/>
          <argument>beforeDelete</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntitySearchedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Media\Subscriber\MediaDeletionSubscriber"/>
          <argument>securePrivateFolders</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Media\Event\UnusedMediaSearchEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Media\Subscriber\CustomFieldsUnusedMediaSubscriber"/>
          <argument>removeUsedMedia</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>product.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\Subscriber\ProductSubscriber"/>
          <argument>loaded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>product.partial_loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\Subscriber\ProductSubscriber"/>
          <argument>loaded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>sales_channel.product.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\Subscriber\ProductSubscriber"/>
          <argument>salesChannelLoaded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>sales_channel.product.partial_loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\Subscriber\ProductSubscriber"/>
          <argument>salesChannelLoaded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Cart\Event\CheckoutOrderPlacedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\DataAbstractionLayer\StockUpdater"/>
          <argument>orderPlaced</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\System\StateMachine\Event\StateMachineTransitionEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\DataAbstractionLayer\StockUpdater"/>
          <argument>stateChanged</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\DataAbstractionLayer\StockUpdater"/>
          <argument>triggerChangeSet</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>order_line_item.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\DataAbstractionLayer\StockUpdater"/>
          <argument>lineItemWritten</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>order_line_item.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\DataAbstractionLayer\StockUpdater"/>
          <argument>lineItemWritten</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\System\StateMachine\Event\StateMachineTransitionEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\Stock\OrderStockSubscriber"/>
          <argument>stateChanged</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWriteEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\Stock\OrderStockSubscriber"/>
          <argument>beforeWriteOrderItems</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>sales_channel.product.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\Stock\LoadProductStockSubscriber"/>
          <argument>salesChannelLoaded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>sales_channel.product.partial_loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\Stock\LoadProductStockSubscriber"/>
          <argument>salesChannelLoaded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductListingCriteriaEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingFeaturesSubscriber"/>
          <argument>prepare</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductSearchCriteriaEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingFeaturesSubscriber"/>
          <argument>prepare</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductSuggestCriteriaEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingFeaturesSubscriber"/>
          <argument>prepare</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductListingResultEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingFeaturesSubscriber"/>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductSearchResultEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingFeaturesSubscriber"/>
          <argument>process</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Product\Cart\ProductLineItemCommandValidator"/>
          <argument>preValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>newsletter_recipient.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Newsletter\Event\Subscriber\NewsletterRecipientDeletedSubscriber"/>
          <argument>onNewsletterRecipientDeleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>newsletter_recipient.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Newsletter\Subscriber\NewsletterRecipientSalutationSubscriber"/>
          <argument>setDefaultSalutation</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Rule\RuleValidator"/>
          <argument>preValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rule.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RulePayloadSubscriber"/>
          <argument>unserialize</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostInstallEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostActivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostUpdateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostDeactivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostUninstallEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>rule.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleIndexerSubscriber"/>
          <argument>onRuleWritten</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>app_script_condition.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RulePayloadUpdater"/>
          <argument>updatePayloads</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleAreaUpdater"/>
          <argument>triggerChangeSet</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Rule\DataAbstractionLayer\RuleAreaUpdater"/>
          <argument>onEntityWritten</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>product_export.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\ProductExport\EventListener\ProductExportEventListener"/>
          <argument>afterWrite</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\System\SystemConfig\Event\BeforeSystemConfigChangedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Cms\Subscriber\CmsPageDefaultChangeSubscriber"/>
          <argument>validateChangeOfDefaultCmsPage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityDeleteEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Cms\Subscriber\CmsPageDefaultChangeSubscriber"/>
          <argument>beforeDeletion</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Media\Event\UnusedMediaSearchEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Cms\Subscriber\UnusedMediaSubscriber"/>
          <argument>removeUsedMedia</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\SystemDefaultValidator"/>
          <argument>preValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>media.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\ImportExport\DataAbstractionLayer\Serializer\Entity\MediaSerializerSubscriber"/>
          <argument>forward</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>import_export_file.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\ImportExport\Event\Subscriber\FileDeletedSubscriber"/>
          <argument>onFileDeleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\ImportExport\Event\EnrichExportCriteriaEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\ImportExport\Event\Subscriber\CategoryCriteriaSubscriber"/>
          <argument>enrich</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\ImportExport\Event\ImportExportBeforeImportRecordEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductCategoryPathsSubscriber"/>
          <argument>categoryPathsToAssignment</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\ImportExport\Event\EnrichExportCriteriaEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductCriteriaSubscriber"/>
          <argument>enrich</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\ImportExport\Event\ImportExportAfterImportRecordEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\ImportExport\Event\Subscriber\ProductVariantsSubscriber"/>
          <argument>onAfterImportRecord</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PostWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\LandingPage\LandingPageValidator"/>
          <argument>preValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>flow.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Flow\Dispatching\CachedFlowLoader"/>
          <argument>invalidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostInstallEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostActivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostUpdateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostDeactivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostUninstallEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\App\Event\AppInstalledEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\App\Event\AppUpdatedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\App\Event\AppActivatedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\App\Event\AppDeletedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\App\Event\AppDeactivatedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Content\Flow\Indexing\FlowIndexerSubscriber"/>
          <argument>refreshPlugin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\System\StateMachine\Event\StateMachineTransitionEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerMetaFieldSubscriber"/>
          <argument>fillCustomerMetaDataFields</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerMetaFieldSubscriber"/>
          <argument>deleteOrder</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>product_review.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\ProductReviewSubscriber"/>
          <argument>createReview</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityDeleteEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\ProductReviewSubscriber"/>
          <argument>detectChangeset</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>product_review.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\ProductReviewSubscriber"/>
          <argument>onReviewDeleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Customer\Event\CustomerLoginEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerRemoteAddressSubscriber"/>
          <argument>updateRemoteAddressByLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>customer.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerTokenSubscriber"/>
          <argument>onCustomerWritten</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>customer.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerTokenSubscriber"/>
          <argument>onCustomerDeleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>customer_group_translation.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerGroupSubscriber"/>
          <argument>updatedCustomerGroup</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>customer_group_registration_sales_channels.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerGroupSubscriber"/>
          <argument>newSalesChannelAddedToCustomerGroup</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>customer_group_translation.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerGroupSubscriber"/>
          <argument>deleteCustomerGroup</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>customer.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerChangePasswordSubscriber"/>
          <argument>onCustomerWritten</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>customer.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerFlowEventsSubscriber"/>
          <argument>onCustomerWritten</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityDeleteEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerBeforeDeleteSubscriber"/>
          <argument>beforeDelete</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>customer.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerSalutationSubscriber"/>
          <argument>setDefaultSalutation</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>customer_address.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Subscriber\CustomerSalutationSubscriber"/>
          <argument>setDefaultSalutation</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>document_base_config.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Document\Service\DocumentConfigLoader"/>
          <argument>reset</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>state_machine.order.state_changed</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Order\Listener\OrderStateChangeEventListener"/>
          <argument>onOrderStateChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>state_machine.order_delivery.state_changed</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Order\Listener\OrderStateChangeEventListener"/>
          <argument>onOrderDeliveryStateChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>state_machine.order_transaction.state_changed</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Order\Listener\OrderStateChangeEventListener"/>
          <argument>onOrderTransactionStateChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>collect.business-events</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Order\Listener\OrderStateChangeEventListener"/>
          <argument>onAddStateEvents</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>order_address.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Order\Subscriber\OrderSalutationSubscriber"/>
          <argument>setDefaultSalutation</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>order_customer.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Order\Subscriber\OrderSalutationSubscriber"/>
          <argument>setDefaultSalutation</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentMethodValidator"/>
          <argument>validate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>payment_method.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentHandlerIdentifierSubscriber"/>
          <argument>formatHandlerIdentifier</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>payment_method.partial_loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentHandlerIdentifierSubscriber"/>
          <argument>formatHandlerIdentifier</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>payment_method.loaded</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Payment\DataAbstractionLayer\PaymentDistinguishableNameSubscriber"/>
          <argument>addDistinguishablePaymentName</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Promotion\Validator\PromotionValidator"/>
          <argument>preValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Cart\Event\BeforeLineItemAddedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Promotion\Subscriber\Storefront\StorefrontCartSubscriber"/>
          <argument>onLineItemAdded</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Cart\Event\BeforeLineItemRemovedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Promotion\Subscriber\Storefront\StorefrontCartSubscriber"/>
          <argument>onLineItemRemoved</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Cart\Event\CheckoutOrderPlacedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Promotion\Subscriber\Storefront\StorefrontCartSubscriber"/>
          <argument>resetCodes</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Cart\Event\CheckoutOrderPlacedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Promotion\Subscriber\PromotionIndividualCodeRedeemer"/>
          <argument>onOrderPlaced</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Cart\Event\CheckoutOrderPlacedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Promotion\DataAbstractionLayer\PromotionRedemptionUpdater"/>
          <argument>orderPlaced</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Write\Validation\PreWriteValidationEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Checkout\Shipping\Validator\ShippingMethodValidator"/>
          <argument>preValidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Routing\Event\SalesChannelContextResolvedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Core\Profiling\Subscriber\ActiveRulesDataCollectorSubscriber"/>
          <argument>onContextResolved</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Update\Event\UpdatePostFinishEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Administration\Notification\Subscriber\UpdateSubscriber"/>
          <argument>updateFinishedDone</argument>
        </argument>
        <argument>-9999</argument>
      </call>
      <call method="addListener">
        <argument>sales_channel.deleted</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Administration\System\SalesChannel\Subscriber\SalesChannelUserConfigSubscriber"/>
          <argument>onSalesChannelDeleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Elasticsearch\Product\ProductUpdater"/>
          <argument>update</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Elasticsearch\Product\CustomFieldUpdater"/>
          <argument>onNewCustomFieldCreated</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Event\ProgressStartedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminIndexingCommand"/>
          <argument>startProgress</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Event\ProgressAdvancedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminIndexingCommand"/>
          <argument>advanceProgress</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Event\ProgressFinishedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminIndexingCommand"/>
          <argument>finishProgress</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>sales_channel_language.written</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Elasticsearch\Product\LanguageSubscriber"/>
          <argument>onSalesChannelWritten</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\RefreshIndexEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Elasticsearch\Admin\Subscriber\RefreshIndexSubscriber"/>
          <argument>handled</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Elasticsearch\Admin\AdminSearchRegistry"/>
          <argument>refresh</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\CachedDomainLoaderInvalidator"/>
          <argument>invalidate</argument>
        </argument>
        <argument>2000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>startSession</argument>
        </argument>
        <argument>40</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>maintenanceResolver</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>customerNotLoggedInHandler</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>maintenanceResolver</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>preventPageLoadingFromXmlHttpRequest</argument>
        </argument>
        <argument>-20</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Customer\Event\CustomerLoginEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>updateSessionAfterLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Customer\Event\CustomerLogoutEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>updateSessionAfterLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Event\BeforeSendResponseEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>setCanonicalUrl</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Storefront\Event\StorefrontRenderEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>addHreflang</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Storefront\Event\StorefrontRenderEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>addShopIdParameter</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Storefront\Event\StorefrontRenderEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>addIconSetConfig</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Routing\Event\SalesChannelContextResolvedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\StorefrontSubscriber"/>
          <argument>replaceContextToken</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\NotFound\NotFoundSubscriber"/>
          <argument>onError</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\System\SystemConfig\Event\SystemConfigChangedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\NotFound\NotFoundSubscriber"/>
          <argument>onSystemConfigChanged</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\AffiliateTracking\AffiliateTrackingListener"/>
          <argument>checkAffiliateTracking</argument>
        </argument>
        <argument>-21</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Cache\CacheResponseSubscriber"/>
          <argument>addHttpCacheToCoreRoutes</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Cache\CacheResponseSubscriber"/>
          <argument>setResponseCache</argument>
        </argument>
        <argument>-1500</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Cache\CacheResponseSubscriber"/>
          <argument>setResponseCacheHeader</argument>
        </argument>
        <argument>1500</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Event\BeforeSendResponseEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Cache\CacheResponseSubscriber"/>
          <argument>updateCacheControlForBrowser</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Captcha\CaptchaRouteListener"/>
          <argument>validateCaptcha</argument>
        </argument>
        <argument>-20</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Routing\ResponseHeaderListener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Cart\Event\CartMergedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Event\CartMergedSubscriber"/>
          <argument>addCartMergedNoticeFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Product\Events\ProductIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Seo\SeoUrlRoute\SeoUrlUpdateListener"/>
          <argument>updateProductUrls</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Category\Event\CategoryIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Seo\SeoUrlRoute\SeoUrlUpdateListener"/>
          <argument>updateCategoryUrls</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\LandingPage\Event\LandingPageIndexerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Seo\SeoUrlRoute\SeoUrlUpdateListener"/>
          <argument>updateLandingPageUrls</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Framework\Seo\SeoUrlRoute\SeoUrlUpdateListener"/>
          <argument>detectSalesChannelEntryPoints</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Storefront\Theme\Event\ThemeConfigChangedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\CachedResolvedConfigLoaderInvalidator"/>
          <argument>invalidate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Storefront\Theme\Event\ThemeAssignedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\CachedResolvedConfigLoaderInvalidator"/>
          <argument>assigned</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Storefront\Theme\Event\ThemeConfigResetEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\CachedResolvedConfigLoaderInvalidator"/>
          <argument>reset</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\App\Event\AppUpdatedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\ThemeAppLifecycleHandler"/>
          <argument>handleAppActivationOrUpdate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\App\Event\AppActivatedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\ThemeAppLifecycleHandler"/>
          <argument>handleAppActivationOrUpdate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\App\Event\AppDeactivatedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\ThemeAppLifecycleHandler"/>
          <argument>handleUninstall</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Storefront\Theme\Event\ThemeConfigChangedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\ConfigLoader\StaticFileConfigDumper"/>
          <argument>dumpConfigFromEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Storefront\Theme\Event\ThemeAssignedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\ConfigLoader\StaticFileConfigDumper"/>
          <argument>dumpConfigFromEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Storefront\Theme\Event\ThemeConfigResetEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\ConfigLoader\StaticFileConfigDumper"/>
          <argument>dumpConfigFromEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostActivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Subscriber\PluginLifecycleSubscriber"/>
          <argument>pluginPostActivate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPreUpdateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Subscriber\PluginLifecycleSubscriber"/>
          <argument>pluginUpdate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPreDeactivateEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Subscriber\PluginLifecycleSubscriber"/>
          <argument>pluginDeactivateAndUninstall</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostDeactivationFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Subscriber\PluginLifecycleSubscriber"/>
          <argument>pluginPostDeactivateFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPreUninstallEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Subscriber\PluginLifecycleSubscriber"/>
          <argument>pluginDeactivateAndUninstall</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Plugin\Event\PluginPostUninstallEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Subscriber\PluginLifecycleSubscriber"/>
          <argument>pluginPostUninstall</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\App\Event\AppDeletedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Subscriber\AppLifecycleSubscriber"/>
          <argument>onAppDeleted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Storefront\Theme\Event\ThemeCompilerEnrichScssVariablesEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Subscriber\ThemeCompilerEnrichScssVarSubscriber"/>
          <argument>enrichExtensionVars</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Twig\ThemeNamespaceHierarchyBuilder"/>
          <argument>requestEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Twig\ThemeNamespaceHierarchyBuilder"/>
          <argument>requestEvent</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Checkout\Document\Event\DocumentTemplateRendererParameterEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Twig\ThemeNamespaceHierarchyBuilder"/>
          <argument>onDocumentRendering</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Store\Event\FirstRunWizardFinishedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Subscriber\FirstRunWizardSubscriber"/>
          <argument>frwFinished</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Framework\Update\Event\UpdatePostFinishEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Subscriber\UpdateSubscriber"/>
          <argument>updateFinished</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Shopware\Core\Content\Media\Event\UnusedMediaSearchEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="Shopware\Storefront\Theme\Subscriber\UnusedMediaSubscriber"/>
          <argument>removeUsedMedia</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="argument_resolver.request_payload"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.cache_attribute_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.envelope_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.message_logger_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="mailer.messenger_transport_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="esi_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="fragment.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>48</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.retry.send_failed_message_for_retry_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.failure.add_error_details_stamp_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.failure.send_failed_message_to_failure_transport_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.dispatch_pcntl_signal_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerStartedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerStarted</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_restart_signal_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerMessageFailedEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onMessageFailed</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Messenger\Event\WorkerRunningEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="messenger.listener.stop_worker_on_stop_exception_listener"/>
          <argument>onWorkerRunning</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="controller.template_attribute_listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Mailer\Event\MessageEvent</argument>
        <argument type="collection">
          <argument type="service_closure" id="twig.mailer.message_listener"/>
          <argument>onMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.decorator" id="controller_resolver" inner="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <tag name="container.decorator" id="argument_resolver" inner="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id=".service_locator.4a.A3U6"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver">
      <call method="addLoader">
        <argument type="service" id="Shopware\Core\Framework\Api\Route\ApiRouteLoader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.psr4"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.nHM1aAW"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
      <argument>dev</argument>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.psr4" class="Symfony\Component\Routing\Loader\Psr4DirectoryLoader">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.otfny_1.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en-GB</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" constructor="fromUri">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.cUcW89y.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpPort"/>
        </service>
      </argument>
      <argument type="service">
        <service class="int">
          <factory service="router.request_context" method="getHttpsPort"/>
        </service>
      </argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\PsrCachedReader">
      <tag name="annotations.cached_reader"/>
      <tag name="container.do_not_inline"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service">
        <service class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
      </argument>
      <argument>true</argument>
      <argument type="service_closure" id="annotations.cache_adapter"/>
    </service>
    <service id="annotations.filesystem_cache_adapter" class="Symfony\Component\Cache\Adapter\FilesystemAdapter">
      <argument></argument>
      <argument>0</argument>
      <argument type="abstract">Cache-Directory</argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache_adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" constructor="create">
      <tag name="container.hot_path"/>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>3</argument>
      <argument>2</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/home/avinash/Desktop/work/Shopware/config/secrets/%env(default:kernel.environment:APP_RUNTIME_ENV)%</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString" constructor="fromCallable">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/home/avinash/Desktop/work/Shopware/.env.dev.local</argument>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service" id="serializer.denormalizer.unwrapping"/>
        <argument type="service" id="Shopware\Core\Framework\Struct\Serializer\StructNormalizer"/>
        <argument type="service" id="Shopware\Core\Framework\MessageQueue\SendEmailMessageJsonSerializer"/>
        <argument type="service" id="serializer.normalizer.flatten_exception"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="serializer.normalizer.uid"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.mime_message"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.form_error"/>
        <argument type="service" id="serializer.normalizer.backed_enum"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="Shopware\Core\Framework\Api\Serializer\JsonApiDecoder"/>
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" autowire="true">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.mime_message" class="Symfony\Component\Serializer\Normalizer\MimeMessageNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="service" id="serializer.normalizer.property"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer">
      <tag name="serializer.normalizer" priority="-950"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument key="0">true</argument>
      <argument key="translator" type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator" on-invalid="null"/>
    </service>
    <service id="serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer">
      <tag name="serializer.normalizer" priority="1000"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="serializer.normalizer.uid" class="Symfony\Component\Serializer\Normalizer\UidNormalizer">
      <tag name="serializer.normalizer" priority="-890"/>
    </service>
    <service id="serializer.normalizer.form_error" class="Symfony\Component\Serializer\Normalizer\FormErrorNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="serializer.normalizer.property" class="Symfony\Component\Serializer\Normalizer\PropertyNormalizer">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader">
            <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader">
            <argument type="service" id="annotations.cached_reader" on-invalid="null"/>
          </service>
        </argument>
      </argument>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface">
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder">
      <tag name="serializer.encoder"/>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer">
      <argument type="service" id="serializer"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
        </service>
      </argument>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service">
        <service>
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="serializer.normalizer.backed_enum" class="Symfony\Component\Serializer\Normalizer\BackedEnumNormalizer">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator"/>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="lock.store.combined.abstract" class="Symfony\Component\Lock\Store\CombinedStore" abstract="true">
      <argument type="abstract">List of stores</argument>
      <argument type="service" id="lock.strategy.majority"/>
    </service>
    <service id="lock.strategy.majority" class="Symfony\Component\Lock\Strategy\ConsensusStrategy"/>
    <service id="lock.factory.abstract" class="Symfony\Component\Lock\LockFactory" abstract="true">
      <tag name="monolog.logger" channel="lock"/>
      <argument type="abstract">Store</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.lock" on-invalid="ignore"/>
      </call>
    </service>
    <service id=".lock.default.store.TTEh_gT" class="Symfony\Component\Lock\PersistingStoreInterface">
      <tag name="lock.store"/>
      <argument>%env(LOCK_DSN)%</argument>
      <factory class="Symfony\Component\Lock\Store\StoreFactory" method="createStore"/>
    </service>
    <service id="lock.default.factory" class="Symfony\Component\Lock\LockFactory">
      <argument type="service" id=".lock.default.store.TTEh_gT"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.lock" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.rate_limiter" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="limiter" class="Symfony\Component\RateLimiter\RateLimiterFactory" abstract="true">
      <argument type="abstract">config</argument>
      <argument type="abstract">storage</argument>
      <argument>null</argument>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" constructor="createConnection">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
    </service>
    <service id=".cache.object.inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag default_lifetime="172800" name="cache.object">cache.pool</tag>
      <tag name="kernel.reset" method="reset"/>
      <argument>172800</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.http" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <tag name="cache.taggable" pool="cache.http"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument type="service" id=".cache.http.inner"/>
      <argument type="service" id="cache.tags"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id=".cache.http.inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag default_lifetime="172800" name="cache.http">cache.pool</tag>
      <tag name="kernel.reset" method="reset"/>
      <argument>172800</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id=".cache.tags.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <tag name="cache.taggable" pool="cache.tags"/>
      <argument type="service" id="cache.tags"/>
    </service>
    <service id="cache.tags" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id=".cache.rate_limiter.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <tag name="cache.taggable" pool="cache.rate_limiter"/>
      <argument type="service" id="cache.rate_limiter"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="session.factory" class="Symfony\Component\HttpFoundation\Session\SessionFactory">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="session.storage.factory.native"/>
      <argument type="collection">
        <argument type="service" id="session_listener"/>
        <argument>onSessionUsage</argument>
      </argument>
    </service>
    <service id="session.storage.factory.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorageFactory">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorageFactory">
      <argument type="service" id="session.handler.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="session.storage.factory.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorageFactory">
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag">
          <argument>_sf2_meta</argument>
          <argument>0</argument>
        </service>
      </argument>
    </service>
    <service id="session.handler.native" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="SessionHandler"/>
      </argument>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler">
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler">
          <argument>null</argument>
        </service>
      </argument>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler">
      <argument type="abstract">A string or a connection object</argument>
      <argument type="collection"/>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.cXsfP3P"/>
      <argument>true</argument>
      <argument>%session.storage.options%</argument>
    </service>
    <service id="session.marshaller" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\IdentityMarshaller"/>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument>true</argument>
      </call>
      <call method="setDoctrineAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" constructor="create">
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory">
      <argument type="service" id=".service_locator.LZebv8u"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionLanguageSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionLanguageSyntaxValidator" abstract="true">
      <tag name="container.excluded" source="in &quot;config/validator.php&quot;"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AllValidator" class="Symfony\Component\Validator\Constraints\AllValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" class="Symfony\Component\Validator\Constraints\AtLeastOneOfValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BicValidator" class="Symfony\Component\Validator\Constraints\BicValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\BlankValidator" class="Symfony\Component\Validator\Constraints\BlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CallbackValidator" class="Symfony\Component\Validator\Constraints\CallbackValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CardSchemeValidator" class="Symfony\Component\Validator\Constraints\CardSchemeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ChoiceValidator" class="Symfony\Component\Validator\Constraints\ChoiceValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CidrValidator" class="Symfony\Component\Validator\Constraints\CidrValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CollectionValidator" class="Symfony\Component\Validator\Constraints\CollectionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CompoundValidator" class="Symfony\Component\Validator\Constraints\CompoundValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountValidator" class="Symfony\Component\Validator\Constraints\CountValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CountryValidator" class="Symfony\Component\Validator\Constraints\CountryValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CssColorValidator" class="Symfony\Component\Validator\Constraints\CssColorValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\CurrencyValidator" class="Symfony\Component\Validator\Constraints\CurrencyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateTimeValidator" class="Symfony\Component\Validator\Constraints\DateTimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DateValidator" class="Symfony\Component\Validator\Constraints\DateValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\DivisibleByValidator" class="Symfony\Component\Validator\Constraints\DivisibleByValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EmailValidator" class="Symfony\Component\Validator\Constraints\EmailValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\EqualToValidator" class="Symfony\Component\Validator\Constraints\EqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" class="Symfony\Component\Validator\Constraints\ExpressionSyntaxValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ExpressionValidator" class="Symfony\Component\Validator\Constraints\ExpressionValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\FileValidator" class="Symfony\Component\Validator\Constraints\FileValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\GreaterThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\GreaterThanValidator" class="Symfony\Component\Validator\Constraints\GreaterThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\HostnameValidator" class="Symfony\Component\Validator\Constraints\HostnameValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IbanValidator" class="Symfony\Component\Validator\Constraints\IbanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IdenticalToValidator" class="Symfony\Component\Validator\Constraints\IdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ImageValidator" class="Symfony\Component\Validator\Constraints\ImageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IpValidator" class="Symfony\Component\Validator\Constraints\IpValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsFalseValidator" class="Symfony\Component\Validator\Constraints\IsFalseValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsNullValidator" class="Symfony\Component\Validator\Constraints\IsNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsTrueValidator" class="Symfony\Component\Validator\Constraints\IsTrueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsbnValidator" class="Symfony\Component\Validator\Constraints\IsbnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IsinValidator" class="Symfony\Component\Validator\Constraints\IsinValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\IssnValidator" class="Symfony\Component\Validator\Constraints\IssnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\JsonValidator" class="Symfony\Component\Validator\Constraints\JsonValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LanguageValidator" class="Symfony\Component\Validator\Constraints\LanguageValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LengthValidator" class="Symfony\Component\Validator\Constraints\LengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" class="Symfony\Component\Validator\Constraints\LessThanOrEqualValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LessThanValidator" class="Symfony\Component\Validator\Constraints\LessThanValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LocaleValidator" class="Symfony\Component\Validator\Constraints\LocaleValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\LuhnValidator" class="Symfony\Component\Validator\Constraints\LuhnValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotBlankValidator" class="Symfony\Component\Validator\Constraints\NotBlankValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotEqualToValidator" class="Symfony\Component\Validator\Constraints\NotEqualToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" class="Symfony\Component\Validator\Constraints\NotIdenticalToValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\NotNullValidator" class="Symfony\Component\Validator\Constraints\NotNullValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" class="Symfony\Component\Validator\Constraints\PasswordStrengthValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RangeValidator" class="Symfony\Component\Validator\Constraints\RangeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\RegexValidator" class="Symfony\Component\Validator\Constraints\RegexValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\SequentiallyValidator" class="Symfony\Component\Validator\Constraints\SequentiallyValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimeValidator" class="Symfony\Component\Validator\Constraints\TimeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TimezoneValidator" class="Symfony\Component\Validator\Constraints\TimezoneValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\TypeValidator" class="Symfony\Component\Validator\Constraints\TypeValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UlidValidator" class="Symfony\Component\Validator\Constraints\UlidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UniqueValidator" class="Symfony\Component\Validator\Constraints\UniqueValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UrlValidator" class="Symfony\Component\Validator\Constraints\UrlValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\UuidValidator" class="Symfony\Component\Validator\Constraints\UuidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\ValidValidator" class="Symfony\Component\Validator\Constraints\ValidValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="Symfony\Component\Validator\Constraints\WhenValidator" class="Symfony\Component\Validator\Constraints\WhenValidator" abstract="true">
      <tag name="container.excluded"/>
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument>null</argument>
    </service>
    <service id="cache.validator_expression_language" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>dnBPp6qa5Q</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/pools/system</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator">
      <tag name="validator.constraint_validator"/>
      <argument type="service" id="http_client.uri_template" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.when" class="Symfony\Component\Validator\Constraints\WhenValidator">
      <tag name="validator.constraint_validator"/>
      <argument>null</argument>
    </service>
    <service id="validator.no_suspicious_characters" class="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator"/>
      <argument type="collection"/>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="messenger.senders_locator" class="Symfony\Component\Messenger\Transport\Sender\SendersLocator">
      <argument type="collection">
        <argument key="Shopware\Core\Framework\MessageQueue\AsyncMessageInterface" type="collection">
          <argument>async</argument>
        </argument>
        <argument key="Shopware\Core\Framework\MessageQueue\LowPriorityMessageInterface" type="collection">
          <argument>low_priority</argument>
        </argument>
        <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="collection">
          <argument>async</argument>
        </argument>
      </argument>
      <argument type="service" id=".service_locator._fH_3DO"/>
    </service>
    <service id="messenger.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.transport.symfony_serializer" class="Symfony\Component\Messenger\Transport\Serialization\Serializer">
      <argument type="service" id="serializer"/>
      <argument>json</argument>
      <argument type="collection">
        <argument key="default_constructor_arguments" type="collection">
          <argument key="Shopware\Elasticsearch\Framework\Indexing\IndexerOffset" type="collection">
            <argument key="mappingDefinitions" type="collection"/>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="serializer.normalizer.flatten_exception" class="Symfony\Component\Messenger\Transport\Serialization\Normalizer\FlattenExceptionNormalizer">
      <tag name="serializer.normalizer" priority="-880"/>
    </service>
    <service id="messenger.transport.native_php_serializer" class="Symfony\Component\Messenger\Transport\Serialization\PhpSerializer"/>
    <service id="messenger.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware" abstract="true">
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="abstract">bus handler resolver</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware" abstract="true"/>
    <service id="messenger.middleware.dispatch_after_current_bus" class="Symfony\Component\Messenger\Middleware\DispatchAfterCurrentBusMiddleware"/>
    <service id="messenger.middleware.validation" class="Symfony\Component\Messenger\Middleware\ValidationMiddleware">
      <argument type="service" id="Shopware\Core\Framework\Validation\HappyPathValidator"/>
    </service>
    <service id="messenger.middleware.reject_redelivered_message_middleware" class="Symfony\Component\Messenger\Middleware\RejectRedeliveredMessageMiddleware"/>
    <service id="messenger.middleware.failed_message_processing_middleware" class="Symfony\Component\Messenger\Middleware\FailedMessageProcessingMiddleware"/>
    <service id="messenger.middleware.traceable" class="Symfony\Component\Messenger\Middleware\TraceableMiddleware" abstract="true">
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="messenger.middleware.router_context" class="Symfony\Component\Messenger\Middleware\RouterContextMiddleware">
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
    </service>
    <service id="messenger.receiver_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.async"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="low_priority" type="service_closure" id="messenger.transport.low_priority"/>
        <argument key="messenger.transport.async" type="service_closure" id="messenger.transport.async"/>
        <argument key="messenger.transport.failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="messenger.transport.low_priority" type="service_closure" id="messenger.transport.low_priority"/>
      </argument>
    </service>
    <service id="messenger.transport_factory" class="Symfony\Component\Messenger\Transport\TransportFactory">
      <argument type="tagged_iterator" tag="messenger.transport_factory"/>
    </service>
    <service id="messenger.transport.amqp.factory" class="Symfony\Component\Messenger\Bridge\Amqp\Transport\AmqpTransportFactory"/>
    <service id="messenger.transport.redis.factory" class="Symfony\Component\Messenger\Bridge\Redis\Transport\RedisTransportFactory"/>
    <service id="messenger.transport.sync.factory" class="Symfony\Component\Messenger\Transport\Sync\SyncTransportFactory">
      <tag name="messenger.transport_factory"/>
      <argument type="service" id="messenger.routable_message_bus"/>
    </service>
    <service id="messenger.transport.in_memory.factory" class="Symfony\Component\Messenger\Transport\InMemory\InMemoryTransportFactory">
      <tag name="messenger.transport_factory"/>
      <tag name="kernel.reset" method="reset"/>
    </service>
    <service id="messenger.transport.sqs.factory" class="Symfony\Component\Messenger\Bridge\AmazonSqs\Transport\AmazonSqsTransportFactory">
      <tag name="monolog.logger" channel="messenger"/>
      <tag name="container.error" message="Invalid service &quot;messenger.transport.sqs.factory&quot;: class &quot;Symfony\Component\Messenger\Bridge\AmazonSqs\Transport\AmazonSqsTransportFactory&quot; does not exist."/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.transport.beanstalkd.factory" class="Symfony\Component\Messenger\Bridge\Beanstalkd\Transport\BeanstalkdTransportFactory"/>
    <service id="messenger.retry_strategy_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.retry.multiplier_retry_strategy.async"/>
        <argument key="failed" type="service_closure" id="messenger.retry.multiplier_retry_strategy.failed"/>
        <argument key="low_priority" type="service_closure" id="messenger.retry.multiplier_retry_strategy.low_priority"/>
      </argument>
    </service>
    <service id="messenger.retry.abstract_multiplier_retry_strategy" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy" abstract="true">
      <argument type="abstract">max retries</argument>
      <argument type="abstract">delay ms</argument>
      <argument type="abstract">multiplier</argument>
      <argument type="abstract">max delay ms</argument>
    </service>
    <service id="messenger.retry.send_failed_message_for_retry_listener" class="Symfony\Component\Messenger\EventListener\SendFailedMessageForRetryListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id=".service_locator._fH_3DO"/>
      <argument type="service" id="messenger.retry_strategy_locator"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="messenger.failure.add_error_details_stamp_listener" class="Symfony\Component\Messenger\EventListener\AddErrorDetailsStampListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.failure.send_failed_message_to_failure_transport_listener" class="Symfony\Component\Messenger\EventListener\SendFailedMessageToFailureTransportListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id=".service_locator.Y9V5V0n"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.dispatch_pcntl_signal_listener" class="Symfony\Component\Messenger\EventListener\DispatchPcntlSignalListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.stop_worker_on_restart_signal_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnRestartSignalListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="messenger"/>
      <argument type="service" id="cache.messenger.restart_workers_signal"/>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.stop_worker_signals_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnSignalsListener">
      <tag name="monolog.logger" channel="messenger"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
    </service>
    <service id="messenger.listener.stop_worker_on_stop_exception_listener" class="Symfony\Component\Messenger\EventListener\StopWorkerOnCustomStopExceptionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="messenger.listener.reset_services" class="Symfony\Component\Messenger\EventListener\ResetServicesListener">
      <argument type="service" id="services_resetter"/>
    </service>
    <service id="messenger.routable_message_bus" class="Symfony\Component\Messenger\RoutableMessageBus">
      <argument type="service" id=".service_locator.5cAhUFF"/>
      <argument type="service" id="messenger.bus.shopware"/>
    </service>
    <service id="messenger.redispatch_message_handler" class="Symfony\Component\Messenger\Handler\RedispatchMessageHandler">
      <tag name="messenger.message_handler"/>
      <argument type="service" id="messenger.bus.shopware"/>
    </service>
    <service id="messenger.bus.default" class="Symfony\Component\Messenger\MessageBus">
      <tag name="messenger.bus"/>
      <argument type="iterator">
        <argument type="service" id="messenger.bus.default.middleware.traceable"/>
        <argument type="service" id="messenger.bus.default.middleware.add_bus_name_stamp_middleware"/>
        <argument type="service" id="messenger.middleware.reject_redelivered_message_middleware"/>
        <argument type="service" id="messenger.middleware.dispatch_after_current_bus"/>
        <argument type="service" id="messenger.middleware.failed_message_processing_middleware"/>
        <argument type="service" id="messenger.bus.default.middleware.send_message"/>
        <argument type="service" id="messenger.bus.default.middleware.handle_message"/>
      </argument>
    </service>
    <service id="messenger.transport.failed" class="Symfony\Component\Messenger\Transport\TransportInterface">
      <tag name="messenger.receiver" alias="failed" is_failure_transport="1"/>
      <argument>%env(MESSENGER_TRANSPORT_FAILURE_DSN)%</argument>
      <argument type="collection">
        <argument key="transport_name">failed</argument>
      </argument>
      <argument type="service" id="messenger.transport.symfony_serializer"/>
      <factory service="messenger.transport_factory" method="createTransport"/>
    </service>
    <service id="messenger.retry.multiplier_retry_strategy.failed" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy">
      <argument>3</argument>
      <argument>1000</argument>
      <argument>2</argument>
      <argument>0</argument>
    </service>
    <service id="messenger.transport.async" class="Symfony\Component\Messenger\Transport\TransportInterface">
      <tag name="messenger.receiver" alias="async" is_failure_transport=""/>
      <argument>%env(MESSENGER_TRANSPORT_DSN)%</argument>
      <argument type="collection">
        <argument key="transport_name">async</argument>
      </argument>
      <argument type="service" id="messenger.transport.symfony_serializer"/>
      <factory service="messenger.transport_factory" method="createTransport"/>
    </service>
    <service id="messenger.retry.multiplier_retry_strategy.async" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy">
      <argument>3</argument>
      <argument>1000</argument>
      <argument>2</argument>
      <argument>0</argument>
    </service>
    <service id="messenger.transport.low_priority" class="Symfony\Component\Messenger\Transport\TransportInterface">
      <tag name="messenger.receiver" alias="low_priority" is_failure_transport=""/>
      <argument>%env(MESSENGER_TRANSPORT_LOW_PRIORITY_DSN)%</argument>
      <argument type="collection">
        <argument key="transport_name">low_priority</argument>
      </argument>
      <argument type="service" id="messenger.transport.symfony_serializer"/>
      <factory service="messenger.transport_factory" method="createTransport"/>
    </service>
    <service id="messenger.retry.multiplier_retry_strategy.low_priority" class="Symfony\Component\Messenger\Retry\MultiplierRetryStrategy">
      <argument>3</argument>
      <argument>1000</argument>
      <argument>2</argument>
      <argument>0</argument>
    </service>
    <service id=".service_locator._fH_3DO" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.async"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="low_priority" type="service_closure" id="messenger.transport.low_priority"/>
        <argument key="messenger.transport.async" type="service_closure" id="messenger.transport.async"/>
        <argument key="messenger.transport.failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="messenger.transport.low_priority" type="service_closure" id="messenger.transport.low_priority"/>
      </argument>
    </service>
    <service id=".service_locator.Y9V5V0n" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="async" type="service_closure" id="messenger.transport.failed"/>
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
        <argument key="low_priority" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="twig" class="Shopware\Core\Framework\Adapter\Twig\TwigEnvironment" public="true">
      <tag name="container.preload" class="Twig\Cache\FilesystemCache"/>
      <tag name="container.preload" class="Twig\Extension\CoreExtension"/>
      <tag name="container.preload" class="Twig\Extension\EscaperExtension"/>
      <tag name="container.preload" class="Twig\Extension\OptimizerExtension"/>
      <tag name="container.preload" class="Twig\Extension\StagingExtension"/>
      <tag name="container.preload" class="Twig\ExtensionSet"/>
      <tag name="container.preload" class="Twig\Template"/>
      <tag name="container.preload" class="Twig\TemplateWrapper"/>
      <argument type="service" id="twig.loader.chain"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">false</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/home/avinash/Desktop/work/Shopware/var/cache/dev_h7290e2c16fdac46b1cf04202326f2e4f/twig</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Extension\NodeExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Extension\PhpSyntaxExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Extension\FeatureFlagExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.intl"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.string"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Extension\PcreExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Extension\InstanceOfExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Filter\CurrencyFilter"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Cocur\Slugify\Bridge\Twig\SlugifyExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Filter\ReplaceRecursiveFilter"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\SecurityExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Extension\SeoUrlFunctionExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Extension\CategoryUrlExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Extension\MediaExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Extension\RawUrlFunctionExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Extension\SwSanitizeTwigFilter"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\Extension\BuildBreadcrumbExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Core\Profiling\Twig\DoctrineExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Storefront\Framework\Twig\TemplateDataExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Storefront\Framework\Twig\Extension\ConfigExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Storefront\Framework\Twig\IconExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Storefront\Framework\Twig\ThumbnailExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Storefront\Framework\Twig\Extension\UrlEncodingTwigFilter"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Shopware\Storefront\Framework\Twig\Extension\IconCacheTwigFilter"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="Shopware\Storefront\Framework\Twig\TwigAppVariable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Profiling/Resources/views</argument>
        <argument>Profiling</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Profiling/Resources/views</argument>
        <argument>!Profiling</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/administration/Resources/views</argument>
        <argument>Administration</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/administration/Resources/views</argument>
        <argument>!Administration</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/elasticsearch/Resources/views</argument>
        <argument>Elasticsearch</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/elasticsearch/Resources/views</argument>
        <argument>!Elasticsearch</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources/views</argument>
        <argument>Storefront</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources/views</argument>
        <argument>!Storefront</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/framework-bundle/Resources</argument>
        <argument>FrameworkBundle</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/twig-bundle/Resources</argument>
        <argument>TwigBundle</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/monolog-bundle/Resources</argument>
        <argument>MonologBundle</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/debug-bundle/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>DebugBundle</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/symfony/debug-bundle/Resources</argument>
        <argument>DebugBundle</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Framework/Resources</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/System/Resources</argument>
        <argument>System</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Content/Resources</argument>
        <argument>Content</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Checkout/Resources</argument>
        <argument>Checkout</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Profiling/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Profiling/Resources/views</argument>
        <argument>Profiling</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/core/Profiling/Resources</argument>
        <argument>Profiling</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/administration/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/administration/Resources/views</argument>
        <argument>Administration</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/administration/Resources</argument>
        <argument>Administration</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/elasticsearch/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/elasticsearch/Resources/views</argument>
        <argument>Elasticsearch</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/elasticsearch/Resources</argument>
        <argument>Elasticsearch</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources/views</argument>
        <argument>Storefront</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources/views/../app/storefront/dist</argument>
        <argument>Storefront</argument>
      </call>
      <call method="addPath">
        <argument>/home/avinash/Desktop/work/Shopware/vendor/shopware/storefront/Resources</argument>
        <argument>Storefront</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader">
      <call method="addLoader">
        <argument type="service" id="Shopware\Core\Framework\Adapter\Twig\EntityTemplateLoader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="twig.loader.native_filesystem"/>
      </call>
    </service>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="Shopware\Storefront\Framework\Routing\Router"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.htmlsanitizer" class="Symfony\Bridge\Twig\Extension\HtmlSanitizerExtension">
      <argument type="service" id=".service_locator.Xbsa8iG"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
      <argument type="service" id="fragment.uri_generator" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension"/>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader">
      <argument type="service" id=".service_locator.m_eDlXT"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service">
        <service class="bool">
          <argument type="service" id="request_stack"/>
          <argument>true</argument>
          <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
        </service>
      </argument>
    </service>
    <service id="twig.runtime.serializer" class="Symfony\Bridge\Twig\Extension\SerializerRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="serializer"/>
    </service>
    <service id="twig.extension.serializer" class="Symfony\Bridge\Twig\Extension\SerializerExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="controller.template_attribute_listener" class="Symfony\Bridge\Twig\EventListener\TemplateAttributeListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument>/home/avinash/Desktop/work/Shopware</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/home/avinash/Desktop/work/Shopware/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Show a list of twig functions, filters, globals and tests</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument>*.twig</argument>
      </argument>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
      <call method="setDescription">
        <argument>Lint a Twig template and outputs encountered errors</argument>
      </call>
    </service>
    <service id="twig.mailer.message_listener" class="Symfony\Component\Mailer\EventListener\MessageListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service" id="twig.mime_body_renderer"/>
    </service>
    <service id="twig.mime_body_renderer" class="Symfony\Bridge\Twig\Mime\BodyRenderer">
      <argument type="service" id="twig"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter">
      <argument>app</argument>
    </service>
    <service id="monolog.http_client" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor"/>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="monolog.handler.business_event_handler_buffer" class="Monolog\Handler\BufferHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="Shopware\Core\Framework\Log\Monolog\DoctrineSQLHandler"/>
      <argument>0</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="monolog.handler.elasticsearch" class="Monolog\Handler\RotatingFileHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/home/avinash/Desktop/work/Shopware/var/log/elasticsearch_dev.log</argument>
      <argument>90</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
      <call method="setFilenameFormat">
        <argument>{filename}-{date}</argument>
        <argument>Y-m-d</argument>
      </call>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument>null</argument>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.contextualized_cli_dumper"/>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
      <call method="addCasters">
        <argument type="collection">
          <argument key="Closure">Symfony\Component\VarDumper\Caster\ReflectionCaster::unsetClosureFileInfo</argument>
        </argument>
      </call>
    </service>
    <service id="var_dumper.contextualized_cli_dumper" class="Symfony\Component\VarDumper\Dumper\ContextualizedDumper">
      <tag name="container.decorator" id="var_dumper.cli_dumper" inner="var_dumper.contextualized_cli_dumper.inner"/>
      <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
      <argument type="collection">
        <argument key="source" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider">
            <argument>UTF-8</argument>
            <argument>/home/avinash/Desktop/work/Shopware</argument>
            <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="var_dumper.server_connection" class="Symfony\Component\VarDumper\Server\Connection">
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="collection">
        <argument key="source" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider">
            <argument>UTF-8</argument>
            <argument>/home/avinash/Desktop/work/Shopware</argument>
            <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
          </service>
        </argument>
        <argument key="request" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\RequestContextProvider">
            <argument type="service" id="request_stack"/>
          </service>
        </argument>
        <argument key="cli" type="service">
          <service class="Symfony\Component\VarDumper\Dumper\ContextProvider\CliContextProvider"/>
        </argument>
      </argument>
    </service>
    <service id="var_dumper.dump_server" class="Symfony\Component\VarDumper\Server\DumpServer">
      <tag name="monolog.logger" channel="debug"/>
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="service" id="monolog.logger.debug" on-invalid="null"/>
    </service>
    <service id="var_dumper.command.server_dump" class="Symfony\Component\VarDumper\Command\ServerDumpCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.dump_server"/>
      <argument type="collection">
        <argument key="cli" type="service">
          <service class="Symfony\Component\VarDumper\Command\Descriptor\CliDescriptor">
            <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
          </service>
        </argument>
        <argument key="html" type="service">
          <service class="Symfony\Component\VarDumper\Command\Descriptor\HtmlDescriptor">
            <argument type="service" id="var_dumper.html_dumper"/>
          </service>
        </argument>
      </argument>
      <call method="setName">
        <argument>server:dump</argument>
      </call>
      <call method="setDescription">
        <argument>Start a dump server that collects and displays dumps in a single place</argument>
      </call>
    </service>
    <service id="monolog.command.server_log" class="Symfony\Bridge\Monolog\Command\ServerLogCommand">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
      <call method="setDescription">
        <argument>Start a log server that displays logs in real time</argument>
      </call>
    </service>
    <service id="shopware.es.profiled.client" class="Shopware\Elasticsearch\Profiler\ClientProfiler">
      <tag name="container.decorator" id="OpenSearch\Client" inner="shopware.es.profiled.client.inner"/>
      <argument type="service" id="shopware.es.profiled.client.inner"/>
    </service>
    <service id="shopware.es.profiled.adminClient" class="Shopware\Elasticsearch\Profiler\ClientProfiler">
      <tag name="container.decorator" id="admin.openSearch.client" inner="shopware.es.profiled.adminClient.inner"/>
      <argument type="service" id="shopware.es.profiled.adminClient.inner"/>
    </service>
    <service id=".instanceof.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\AbstractListingFilterHandler.0.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ManufacturerListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ManufacturerListingFilterHandler" abstract="true"/>
    <service id=".abstract.instanceof.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ManufacturerListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ManufacturerListingFilterHandler" abstract="true"/>
    <service id=".instanceof.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\AbstractListingFilterHandler.0.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PriceListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PriceListingFilterHandler" abstract="true"/>
    <service id=".abstract.instanceof.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PriceListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PriceListingFilterHandler" abstract="true"/>
    <service id=".instanceof.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\AbstractListingFilterHandler.0.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\RatingListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\RatingListingFilterHandler" abstract="true"/>
    <service id=".abstract.instanceof.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\RatingListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\RatingListingFilterHandler" abstract="true"/>
    <service id=".instanceof.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\AbstractListingFilterHandler.0.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ShippingFreeListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ShippingFreeListingFilterHandler" abstract="true"/>
    <service id=".abstract.instanceof.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ShippingFreeListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\ShippingFreeListingFilterHandler" abstract="true"/>
    <service id=".instanceof.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\AbstractListingFilterHandler.0.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PropertyListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PropertyListingFilterHandler" abstract="true"/>
    <service id=".abstract.instanceof.Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PropertyListingFilterHandler" class="Shopware\Core\Content\Product\SalesChannel\Listing\Filter\PropertyListingFilterHandler" abstract="true"/>
    <service id=".service_locator.7nzbL4K" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service_closure" id="container.env_var_processor"/>
        <argument key="bool" type="service_closure" id="container.env_var_processor"/>
        <argument key="const" type="service_closure" id="container.env_var_processor"/>
        <argument key="csv" type="service_closure" id="container.env_var_processor"/>
        <argument key="default" type="service_closure" id="container.env_var_processor"/>
        <argument key="enum" type="service_closure" id="container.env_var_processor"/>
        <argument key="file" type="service_closure" id="container.env_var_processor"/>
        <argument key="float" type="service_closure" id="container.env_var_processor"/>
        <argument key="int" type="service_closure" id="container.env_var_processor"/>
        <argument key="json" type="service_closure" id="container.env_var_processor"/>
        <argument key="key" type="service_closure" id="container.env_var_processor"/>
        <argument key="not" type="service_closure" id="container.env_var_processor"/>
        <argument key="query_string" type="service_closure" id="container.env_var_processor"/>
        <argument key="require" type="service_closure" id="container.env_var_processor"/>
        <argument key="resolve" type="service_closure" id="container.env_var_processor"/>
        <argument key="shuffle" type="service_closure" id="container.env_var_processor"/>
        <argument key="string" type="service_closure" id="container.env_var_processor"/>
        <argument key="trim" type="service_closure" id="container.env_var_processor"/>
        <argument key="url" type="service_closure" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id=".service_locator.mAMut9a" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="dataBag" type="service_closure" id=".errored..service_locator.mAMut9a.Shopware\Core\Framework\Validation\DataBag\RequestDataBag"/>
      </argument>
    </service>
    <service id=".service_locator.zA3uUCZ" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="pluginLoader" type="service_closure" id="Shopware\Core\Framework\Plugin\KernelPluginLoader\KernelPluginLoader" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.y4_Zrx." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service_closure" id=".errored..service_locator.y4_Zrx..Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.4a.A3U6" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Shopware\Core\Framework\Api\Controller\CacheController::index" type="service_closure" id=".service_locator.mAMut9a"/>
        <argument key="kernel::loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel::reboot" type="service_closure" id=".service_locator.zA3uUCZ"/>
        <argument key="kernel::registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="Shopware\Core\Framework\Api\Controller\CacheController:index" type="service_closure" id=".service_locator.mAMut9a"/>
        <argument key="kernel:loadRoutes" type="service_closure" id=".service_locator.y4_Zrx."/>
        <argument key="kernel:reboot" type="service_closure" id=".service_locator.zA3uUCZ"/>
        <argument key="kernel:registerContainerConfiguration" type="service_closure" id=".service_locator.y4_Zrx."/>
      </argument>
    </service>
    <service id=".service_locator.LZebv8u" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerEmailUniqueValidator" type="service_closure" id="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerEmailUniqueValidator"/>
        <argument key="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerPasswordMatchesValidator" type="service_closure" id="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerPasswordMatchesValidator"/>
        <argument key="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerVatIdentificationValidator" type="service_closure" id="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerVatIdentificationValidator"/>
        <argument key="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerZipCodeValidator" type="service_closure" id="Shopware\Core\Checkout\Customer\Validation\Constraint\CustomerZipCodeValidator"/>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityExistsValidator" type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityExistsValidator"/>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityNotExistsValidator" type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Validation\EntityNotExistsValidator"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service_closure" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NoSuspiciousCharactersValidator" type="service_closure" id="validator.no_suspicious_characters"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service_closure" id="validator.not_compromised_password"/>
        <argument key="Symfony\Component\Validator\Constraints\WhenValidator" type="service_closure" id="validator.when"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.wmwio2R" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="esi" type="service_closure" id="fragment.renderer.esi"/>
        <argument key="hinclude" type="service_closure" id="fragment.renderer.hinclude"/>
        <argument key="inline" type="service_closure" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id=".debug.value_resolver.Shopware\Core\Checkout\Customer\CustomerValueResolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="Shopware\Core\Checkout\Customer\CustomerValueResolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.Shopware\Core\Checkout\Cart\CartValueResolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="Shopware\Core\Checkout\Cart\CartValueResolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.Shopware\Core\Framework\Routing\QueryDataBagResolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="Shopware\Core\Framework\Routing\QueryDataBagResolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.Shopware\Core\Framework\Routing\RequestDataBagResolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="Shopware\Core\Framework\Routing\RequestDataBagResolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.Shopware\Core\Framework\Api\Context\ContextValueResolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="Shopware\Core\Framework\Api\Context\ContextValueResolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.Shopware\Core\System\SalesChannel\Context\SalesChannelContextValueResolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextValueResolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.backed_enum_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.backed_enum_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.datetime" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.datetime"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request_attribute"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.Shopware\Core\Framework\Api\Response\ResponseFactoryInterfaceValueResolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="Shopware\Core\Framework\Api\Response\ResponseFactoryInterfaceValueResolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.session"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.Shopware\Core\Framework\Routing\Annotation\CriteriaValueResolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="Shopware\Core\Framework\Routing\Annotation\CriteriaValueResolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.service"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.default"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.variadic"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.not_tagged_controller"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.request_payload" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.request_payload"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".debug.value_resolver.argument_resolver.query_parameter_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <argument type="service" id="argument_resolver.query_parameter_value_resolver"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="messenger.bus.default.middleware.traceable" class="Symfony\Component\Messenger\Middleware\TraceableMiddleware">
      <argument type="service" id="debug.stopwatch"/>
      <argument>messenger.bus.default</argument>
    </service>
    <service id="messenger.bus.default.middleware.add_bus_name_stamp_middleware" class="Symfony\Component\Messenger\Middleware\AddBusNameStampMiddleware">
      <argument>messenger.bus.default</argument>
    </service>
    <service id="messenger.bus.default.middleware.send_message" class="Symfony\Component\Messenger\Middleware\SendMessageMiddleware">
      <argument type="service" id="messenger.senders_locator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>true</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="messenger.bus.default.middleware.handle_message" class="Symfony\Component\Messenger\Middleware\HandleMessageMiddleware">
      <argument type="service" id="messenger.bus.default.messenger.handlers_locator"/>
      <argument>false</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.messenger" on-invalid="ignore"/>
      </call>
    </service>
    <service id=".service_locator.5cAhUFF" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="messenger.bus.default" type="service_closure" id="messenger.bus.default"/>
      </argument>
    </service>
    <service id=".service_locator.Y4J.A.e" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="failed" type="service_closure" id="messenger.transport.failed"/>
      </argument>
    </service>
    <service id=".messenger.handler_descriptor.FcGBy7g" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Framework\Log\ScheduledTask\LogCleanupTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.mbQVMyz" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\InvalidateCacheTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.k4V9sF7" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\Message\CleanupOldCacheFoldersHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.62A1Dlr" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Framework\App\ScheduledTask\UpdateAppsHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.ye4GMEz" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Framework\App\ScheduledTask\DeleteCascadeAppsHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.DNvu0vs" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.tdN_hNC" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.aJipXF5" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Version\Cleanup\CleanupVersionTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.oJwqZvo" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\ScheduledTask\MessageQueue\RegisterScheduledTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.BmgkEFy" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Framework\Webhook\Handler\WebhookEventMessageHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.Bh6eehT" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Framework\Webhook\ScheduledTask\CleanupWebhookEventLogTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.0T1MkE4" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\Cleanup\CleanupSalesChannelContextTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.kTWICXA" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\System\UsageData\EntitySync\IterateEntityMessageHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.LKzyvxp" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\System\UsageData\EntitySync\DispatchEntityMessageHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.JchS1sa" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\System\UsageData\EntitySync\CollectEntityDataMessageHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.3rmmvFz" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\System\UsageData\ScheduledTask\CollectEntityDataTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.n3ExUjN" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\System\UsageData\ScheduledTask\CheckIntegrationChangedTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.Qj5SaZv" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\Media\Message\GenerateThumbnailsHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.YVK9Q8a" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\Media\Message\GenerateThumbnailsHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.Xr0g_CJ" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\Media\Message\DeleteFileHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.xFii1hV" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\Product\Cleanup\CleanupProductKeywordDictionaryTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.0X1Et5p" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\Product\Cleanup\CleanupUnusedDownloadMediaTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.av_HoGc" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\Newsletter\ScheduledTask\NewsletterRecipientTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.2tLbzh6" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\ProductStream\ScheduledTask\UpdateProductStreamMappingTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.xzp5ujR" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportGenerateTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.q2GexvY" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportPartialGenerationHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.u.9fsNR" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\ImportExport\Message\ImportExportHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.jh4u3Y6" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\ImportExport\Message\DeleteFileHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.vx8qyVl" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\ImportExport\ScheduledTask\CleanupImportExportFileTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.1okQVwW" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.42IpoeP" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapMessageHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.C9PIk8B" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Checkout\Cart\Cleanup\CleanupCartTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.2k7ZOfR" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Core\Checkout\Customer\DeleteUnusedGuestCustomerHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.1jGnvaX" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\CreateAliasTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.RfCy4k0" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\ElasticsearchIndexer"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.QCu4JIo" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Elasticsearch\Framework\Indexing\ElasticsearchIndexer"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.yaSsnDY" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Elasticsearch\Admin\AdminSearchRegistry"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.7nlC8Ye" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Storefront\Framework\Cache\CacheWarmer\CacheWarmerTaskHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.Ikh07rr" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Storefront\Theme\Message\DeleteThemeFilesHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.XeKBdg4" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="Shopware\Storefront\Theme\Message\CompileThemeHandler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.tGvt0LH" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="mailer.messenger.message_handler"/>
      <argument type="collection"/>
    </service>
    <service id=".messenger.handler_descriptor.p4Qvabm" class="Symfony\Component\Messenger\Handler\HandlerDescriptor">
      <argument type="service" id="messenger.redispatch_message_handler"/>
      <argument type="collection"/>
    </service>
    <service id="messenger.bus.default.messenger.handlers_locator" class="Symfony\Component\Messenger\Handler\HandlersLocator">
      <argument type="collection">
        <argument key="Shopware\Core\Framework\Log\ScheduledTask\LogCleanupTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.FcGBy7g"/>
        </argument>
        <argument key="Shopware\Core\Framework\Adapter\Cache\InvalidateCacheTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.mbQVMyz"/>
        </argument>
        <argument key="Shopware\Core\Framework\Adapter\Cache\Message\CleanupOldCacheFolders" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.k4V9sF7"/>
        </argument>
        <argument key="Shopware\Core\Framework\App\ScheduledTask\UpdateAppsTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.62A1Dlr"/>
        </argument>
        <argument key="Shopware\Core\Framework\App\ScheduledTask\DeleteCascadeAppsTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.ye4GMEz"/>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexingMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.DNvu0vs"/>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Indexing\MessageQueue\IterateEntityIndexerMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.tdN_hNC"/>
        </argument>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Version\Cleanup\CleanupVersionTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.aJipXF5"/>
        </argument>
        <argument key="Shopware\Core\Framework\MessageQueue\ScheduledTask\MessageQueue\RegisterScheduledTaskMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.oJwqZvo"/>
        </argument>
        <argument key="Shopware\Core\Framework\Webhook\Message\WebhookEventMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.BmgkEFy"/>
        </argument>
        <argument key="Shopware\Core\Framework\Webhook\ScheduledTask\CleanupWebhookEventLogTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.Bh6eehT"/>
        </argument>
        <argument key="Shopware\Core\System\SalesChannel\Context\Cleanup\CleanupSalesChannelContextTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.0T1MkE4"/>
        </argument>
        <argument key="Shopware\Core\System\UsageData\EntitySync\IterateEntityMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.kTWICXA"/>
        </argument>
        <argument key="Shopware\Core\System\UsageData\EntitySync\DispatchEntityMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.LKzyvxp"/>
        </argument>
        <argument key="Shopware\Core\System\UsageData\EntitySync\CollectEntityDataMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.JchS1sa"/>
        </argument>
        <argument key="Shopware\Core\System\UsageData\ScheduledTask\CollectEntityDataTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.3rmmvFz"/>
        </argument>
        <argument key="Shopware\Core\System\UsageData\ScheduledTask\CheckIntegrationChangedTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.n3ExUjN"/>
        </argument>
        <argument key="Shopware\Core\Content\Media\Message\GenerateThumbnailsMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.Qj5SaZv"/>
        </argument>
        <argument key="Shopware\Core\Content\Media\Message\UpdateThumbnailsMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.YVK9Q8a"/>
        </argument>
        <argument key="Shopware\Core\Content\Media\Message\DeleteFileMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.Xr0g_CJ"/>
        </argument>
        <argument key="Shopware\Core\Content\Product\Cleanup\CleanupProductKeywordDictionaryTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.xFii1hV"/>
        </argument>
        <argument key="Shopware\Core\Content\Product\Cleanup\CleanupUnusedDownloadMediaTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.0X1Et5p"/>
        </argument>
        <argument key="Shopware\Core\Content\Newsletter\ScheduledTask\NewsletterRecipientTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.av_HoGc"/>
        </argument>
        <argument key="Shopware\Core\Content\ProductStream\ScheduledTask\UpdateProductStreamMappingTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.2tLbzh6"/>
        </argument>
        <argument key="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportGenerateTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.xzp5ujR"/>
        </argument>
        <argument key="Shopware\Core\Content\ProductExport\ScheduledTask\ProductExportPartialGeneration" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.q2GexvY"/>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\Message\ImportExportMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.u.9fsNR"/>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\Message\DeleteFileMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.jh4u3Y6"/>
        </argument>
        <argument key="Shopware\Core\Content\ImportExport\ScheduledTask\CleanupImportExportFileTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.vx8qyVl"/>
        </argument>
        <argument key="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapGenerateTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.1okQVwW"/>
        </argument>
        <argument key="Shopware\Core\Content\Sitemap\ScheduledTask\SitemapMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.42IpoeP"/>
        </argument>
        <argument key="Shopware\Core\Checkout\Cart\Cleanup\CleanupCartTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.C9PIk8B"/>
        </argument>
        <argument key="Shopware\Core\Checkout\Customer\DeleteUnusedGuestCustomerTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.2k7ZOfR"/>
        </argument>
        <argument key="Shopware\Elasticsearch\Framework\Indexing\CreateAliasTask" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.1jGnvaX"/>
        </argument>
        <argument key="Shopware\Elasticsearch\Framework\Indexing\ElasticsearchIndexingMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.RfCy4k0"/>
        </argument>
        <argument key="Shopware\Elasticsearch\Framework\Indexing\ElasticsearchLanguageIndexIteratorMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.QCu4JIo"/>
        </argument>
        <argument key="Shopware\Elasticsearch\Admin\AdminSearchIndexingMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.yaSsnDY"/>
        </argument>
        <argument key="Shopware\Storefront\Framework\Cache\CacheWarmer\WarmUpMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.7nlC8Ye"/>
        </argument>
        <argument key="Shopware\Storefront\Theme\Message\DeleteThemeFilesMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.Ikh07rr"/>
        </argument>
        <argument key="Shopware\Storefront\Theme\Message\CompileThemeMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.XeKBdg4"/>
        </argument>
        <argument key="Symfony\Component\Mailer\Messenger\SendEmailMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.tGvt0LH"/>
        </argument>
        <argument key="Symfony\Component\Messenger\Message\RedispatchMessage" type="iterator">
          <argument type="service" id=".messenger.handler_descriptor.p4Qvabm"/>
        </argument>
      </argument>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.messenger" class="Symfony\Bridge\Monolog\Logger">
      <argument>messenger</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.http_client" class="Symfony\Bridge\Monolog\Logger">
      <argument>http_client</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.mailer" class="Symfony\Bridge\Monolog\Logger">
      <argument>mailer</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.lock" class="Symfony\Bridge\Monolog\Logger">
      <argument>lock</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.debug" class="Symfony\Bridge\Monolog\Logger">
      <argument>debug</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.business_events" class="Symfony\Bridge\Monolog\Logger" public="true">
      <argument>business_events</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.business_event_handler_buffer"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.logger.elasticsearch" class="Symfony\Bridge\Monolog\Logger" public="true">
      <argument>elasticsearch</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.elasticsearch"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="log_entry.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\Log\LogEntryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="acl_role.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="acl_user_role.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\AppDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\AppTranslation\AppTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_action_button.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\ActionButton\ActionButtonDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_action_button_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\ActionButtonTranslation\ActionButtonTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_template.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Template\TemplateDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_payment_method.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\AppPaymentMethod\AppPaymentMethodDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_script_condition.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\AppScriptCondition\AppScriptConditionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_script_condition_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\AppScriptConditionTranslation\AppScriptConditionTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_cms_block.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\CmsBlock\AppCmsBlockDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_cms_block_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\CmsBlockTranslation\AppCmsBlockTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_flow_action.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\FlowAction\AppFlowActionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_flow_action_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\FlowActionTranslation\AppFlowActionTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_flow_event.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\FlowEvent\AppFlowEventDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_shipping_method.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\App\Aggregate\AppShippingMethod\AppShippingMethodDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="custom_field.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\CustomField\CustomFieldDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="custom_field_set.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="custom_field_set_relation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="version.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="version_commit.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="version_commit_data.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="plugin.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\Plugin\PluginDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="plugin_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="scheduled_task.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="script.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\Script\ScriptDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="language.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Language\LanguageDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="seo_url.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrl\SeoUrlDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="seo_url_template.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="main_category.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Seo\MainCategory\MainCategoryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="webhook.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\Webhook\WebhookDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="webhook_event_log.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Framework\Webhook\EventLog\WebhookEventLogDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\SalesChannelDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel_country.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel_currency.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel_domain.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel_language.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel_payment_method.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel_shipping_method.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel_type.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel_type_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel_analytics.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelAnalytics\SalesChannelAnalyticsDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="country.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Country\CountryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="country_state.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Country\Aggregate\CountryState\CountryStateDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="country_state_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="country_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="currency.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Currency\CurrencyDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="currency_country_rounding.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Currency\Aggregate\CurrencyCountryRounding\CurrencyCountryRoundingDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="currency_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="custom_entity.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\CustomEntity\CustomEntityDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="locale.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Locale\LocaleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="locale_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="snippet_set.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="snippet.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Snippet\SnippetDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="salutation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Salutation\SalutationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="salutation_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="tax.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Tax\TaxDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="tax_rule.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="tax_rule_type.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="tax_rule_type_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="tax_provider.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\TaxProvider\TaxProviderDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="tax_provider_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\TaxProvider\Aggregate\TaxProviderTranslation\TaxProviderTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="unit.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Unit\UnitDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="unit_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="user.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\User\UserDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="user_config.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\User\Aggregate\UserConfig\UserConfigDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="user_access_key.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="user_recovery.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="integration.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Integration\IntegrationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="integration_role.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Integration\Aggregate\IntegrationRole\IntegrationRoleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="state_machine.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="state_machine_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\StateMachine\StateMachineTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="state_machine_state.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="state_machine_state_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="state_machine_transition.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="state_machine_history.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="system_config.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="number_range.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\NumberRange\NumberRangeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="number_range_sales_channel.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="number_range_state.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="number_range_type.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="number_range_type_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="number_range_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="tag.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Tag\TagDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="category.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Category\CategoryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="category_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="category_tag.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="media.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\MediaDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="media_default_folder.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="media_thumbnail.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="media_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="media_folder.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="media_thumbnail_size.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="media_folder_configuration.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="media_folder_configuration_media_thumbnail_size.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="media_tag.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\ProductDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_stream_mapping.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductStreamMapping\ProductStreamMappingDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_category.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_custom_field_set.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductCustomFieldSet\ProductCustomFieldSetDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_tag.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_configurator_setting.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_price.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_property.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_search_keyword.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_keyword_dictionary.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_review.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_manufacturer.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_manufacturer_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_media.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_download.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductDownload\ProductDownloadDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_option.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_category_tree.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_cross_selling.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_cross_selling_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_cross_selling_assigned_products.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductCrossSellingAssignedProducts\ProductCrossSellingAssignedProductsDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_feature_set.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductFeatureSet\ProductFeatureSetDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_feature_set_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductFeatureSetTranslation\ProductFeatureSetTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_sorting.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_sorting_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_search_config.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductSearchConfig\ProductSearchConfigDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_search_config_field.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductSearchConfigField\ProductSearchConfigFieldDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_visibility.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="delivery_time.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="newsletter_recipient.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipient\NewsletterRecipientDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="newsletter_recipient_tag.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="rule.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Rule\RuleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="rule_condition.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="rule_tag.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Rule\Aggregate\RuleTag\RuleTagDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_stream.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\ProductStream\ProductStreamDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_stream_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_stream_filter.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="product_export.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\ProductExport\ProductExportDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="property_group.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Property\PropertyGroupDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="property_group_option.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="property_group_option_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="property_group_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="cms_page.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Cms\CmsPageDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="cms_page_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="cms_section.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="cms_block.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="cms_slot.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="cms_slot_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="mail_template.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\MailTemplate\MailTemplateDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="mail_template_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="mail_template_type.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="mail_template_type_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="mail_template_media.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="mail_header_footer.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="mail_header_footer_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="delivery_time_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="import_export_profile.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\ImportExport\ImportExportProfileDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="import_export_log.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="import_export_file.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="import_export_profile_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\ImportExport\ImportExportProfileTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="landing_page.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\LandingPage\LandingPageDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="landing_page_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\LandingPage\Aggregate\LandingPageTranslation\LandingPageTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="landing_page_tag.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\LandingPage\Aggregate\LandingPageTag\LandingPageTagDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="landing_page_sales_channel.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\LandingPage\Aggregate\LandingPageSalesChannel\LandingPageSalesChannelDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="flow.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Flow\FlowDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="flow_sequence.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Flow\Aggregate\FlowSequence\FlowSequenceDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="flow_template.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Flow\Aggregate\FlowTemplate\FlowTemplateDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="customer.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Customer\CustomerDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="customer_group_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="customer_address.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="customer_recovery.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="customer_group.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="customer_group_registration_sales_channels.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupRegistrationSalesChannel\CustomerGroupRegistrationSalesChannelDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="customer_tag.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="customer_wishlist.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlist\CustomerWishlistDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="customer_wishlist_product.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlistProduct\CustomerWishlistProductDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="document.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Document\DocumentDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="document_type.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="document_type_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="document_base_config.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="document_base_config_sales_channel.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\OrderDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order_address.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order_customer.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order_delivery.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order_delivery_position.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order_line_item.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order_line_item_download.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderLineItemDownload\OrderLineItemDownloadDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order_tag.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order_transaction.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order_transaction_capture.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCapture\OrderTransactionCaptureDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order_transaction_capture_refund.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="order_transaction_capture_refund_position.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefundPosition\OrderTransactionCaptureRefundPositionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="payment_method.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Payment\PaymentMethodDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="payment_method_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\PromotionDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_sales_channel.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_individual_code.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_discount.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_discount_rule.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_setgroup.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_setgroup_rule.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_order_rule.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_persona_customer.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_persona_rule.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_cart_rule.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="promotion_discount_prices.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="shipping_method.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Shipping\ShippingMethodDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="shipping_method_tag.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="shipping_method_price.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="shipping_method_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="app_administration_snippet.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Administration\Snippet\AppAdministrationSnippetDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="notification.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Administration\Notification\NotificationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="theme.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Storefront\Theme\ThemeDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="theme_translation.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="theme_sales_channel.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="theme_media.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="theme_child.repository" class="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository" public="true">
      <argument type="service" id="Shopware\Storefront\Theme\Aggregate\ThemeChildDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\VersionManager"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="shopware.rate_limiter" class="Shopware\Core\Framework\RateLimiter\RateLimiter">
      <call method="registerLimiterFactory">
        <argument>login</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">10 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">15</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">20</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">login</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>guest_login</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">10 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">15</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">20</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">guest_login</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>oauth</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">10 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">15</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">20</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">oauth</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>reset_password</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">3</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">5</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">90 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">reset_password</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>user_recovery</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">3</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">5</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">90 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">user_recovery</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>contact_form</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">3</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">5</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">90 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">contact_form</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>notification</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">10 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">15</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">20</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">notification</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>newsletter_form</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">time_backoff</argument>
              <argument key="reset">24 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="limit">3</argument>
                  <argument key="interval">30 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">5</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
                <argument type="collection">
                  <argument key="limit">10</argument>
                  <argument key="interval">90 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">newsletter_form</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
      <call method="registerLimiterFactory">
        <argument>cart_add_line_item</argument>
        <argument type="service">
          <service class="Shopware\Core\Framework\RateLimiter\RateLimiterFactory">
            <argument type="collection">
              <argument key="enabled">true</argument>
              <argument key="policy">system_config</argument>
              <argument key="reset">1 hours</argument>
              <argument key="limits" type="collection">
                <argument type="collection">
                  <argument key="domain">core.cart.lineItemAddLimit</argument>
                  <argument key="interval">60 seconds</argument>
                </argument>
              </argument>
              <argument key="lock_factory">lock.factory</argument>
              <argument key="cache_pool">cache.rate_limiter</argument>
              <argument key="id">cart_add_line_item</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\RateLimiter\Storage\CacheStorage">
                <argument type="service" id="cache.rate_limiter"/>
              </service>
            </argument>
            <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="lock.default.factory"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="shopware.increment.user_activity.gateway.mysql" class="Shopware\Core\Framework\Increment\MySQLIncrementer">
      <tag name="shopware.increment.gateway"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <call method="setPool">
        <argument>user_activity</argument>
      </call>
      <call method="setConfig">
        <argument type="collection"/>
      </call>
    </service>
    <service id="shopware.increment.message_queue.gateway.mysql" class="Shopware\Core\Framework\Increment\MySQLIncrementer">
      <tag name="shopware.increment.gateway"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <call method="setPool">
        <argument>message_queue</argument>
      </call>
      <call method="setConfig">
        <argument type="collection"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\Log\LogEntryDefinition" class="Shopware\Core\Framework\Log\LogEntryDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition" class="Shopware\Core\Framework\Api\Acl\Role\AclRoleDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition" class="Shopware\Core\Framework\Api\Acl\Role\AclUserRoleDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\AppDefinition" class="Shopware\Core\Framework\App\AppDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\AppTranslation\AppTranslationDefinition" class="Shopware\Core\Framework\App\Aggregate\AppTranslation\AppTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\ActionButton\ActionButtonDefinition" class="Shopware\Core\Framework\App\Aggregate\ActionButton\ActionButtonDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\ActionButtonTranslation\ActionButtonTranslationDefinition" class="Shopware\Core\Framework\App\Aggregate\ActionButtonTranslation\ActionButtonTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Template\TemplateDefinition" class="Shopware\Core\Framework\App\Template\TemplateDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\AppPaymentMethod\AppPaymentMethodDefinition" class="Shopware\Core\Framework\App\Aggregate\AppPaymentMethod\AppPaymentMethodDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\AppScriptCondition\AppScriptConditionDefinition" class="Shopware\Core\Framework\App\Aggregate\AppScriptCondition\AppScriptConditionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\AppScriptConditionTranslation\AppScriptConditionTranslationDefinition" class="Shopware\Core\Framework\App\Aggregate\AppScriptConditionTranslation\AppScriptConditionTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\CmsBlock\AppCmsBlockDefinition" class="Shopware\Core\Framework\App\Aggregate\CmsBlock\AppCmsBlockDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\CmsBlockTranslation\AppCmsBlockTranslationDefinition" class="Shopware\Core\Framework\App\Aggregate\CmsBlockTranslation\AppCmsBlockTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\FlowAction\AppFlowActionDefinition" class="Shopware\Core\Framework\App\Aggregate\FlowAction\AppFlowActionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\FlowActionTranslation\AppFlowActionTranslationDefinition" class="Shopware\Core\Framework\App\Aggregate\FlowActionTranslation\AppFlowActionTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\FlowEvent\AppFlowEventDefinition" class="Shopware\Core\Framework\App\Aggregate\FlowEvent\AppFlowEventDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\App\Aggregate\AppShippingMethod\AppShippingMethodDefinition" class="Shopware\Core\Framework\App\Aggregate\AppShippingMethod\AppShippingMethodDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\CustomField\CustomFieldDefinition" class="Shopware\Core\System\CustomField\CustomFieldDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition" class="Shopware\Core\System\CustomField\Aggregate\CustomFieldSet\CustomFieldSetDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition" class="Shopware\Core\System\CustomField\Aggregate\CustomFieldSetRelation\CustomFieldSetRelationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition" class="Shopware\Core\Framework\DataAbstractionLayer\Version\VersionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition" class="Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommit\VersionCommitDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition" class="Shopware\Core\Framework\DataAbstractionLayer\Version\Aggregate\VersionCommitData\VersionCommitDataDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\Plugin\PluginDefinition" class="Shopware\Core\Framework\Plugin\PluginDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition" class="Shopware\Core\Framework\Plugin\Aggregate\PluginTranslation\PluginTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition" class="Shopware\Core\Framework\MessageQueue\ScheduledTask\ScheduledTaskDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\Script\ScriptDefinition" class="Shopware\Core\Framework\Script\ScriptDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition" class="Shopware\Core\Content\Seo\SeoUrlTemplate\SeoUrlTemplateDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\Webhook\WebhookDefinition" class="Shopware\Core\Framework\Webhook\WebhookDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Framework\Webhook\EventLog\WebhookEventLogDefinition" class="Shopware\Core\Framework\Webhook\EventLog\WebhookEventLogDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SalesChannel\SalesChannelDefinition" class="Shopware\Core\System\SalesChannel\SalesChannelDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTranslation\SalesChannelTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCountry\SalesChannelCountryDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelCurrency\SalesChannelCurrencyDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelDomain\SalesChannelDomainDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelLanguage\SalesChannelLanguageDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelPaymentMethod\SalesChannelPaymentMethodDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelShippingMethod\SalesChannelShippingMethodDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelType\SalesChannelTypeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelTypeTranslation\SalesChannelTypeTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SalesChannel\Aggregate\SalesChannelAnalytics\SalesChannelAnalyticsDefinition" class="Shopware\Core\System\SalesChannel\Aggregate\SalesChannelAnalytics\SalesChannelAnalyticsDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition" class="Shopware\Core\System\Country\Aggregate\CountryStateTranslation\CountryStateTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition" class="Shopware\Core\System\Country\Aggregate\CountryTranslation\CountryTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Currency\Aggregate\CurrencyCountryRounding\CurrencyCountryRoundingDefinition" class="Shopware\Core\System\Currency\Aggregate\CurrencyCountryRounding\CurrencyCountryRoundingDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition" class="Shopware\Core\System\Currency\Aggregate\CurrencyTranslation\CurrencyTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\CustomEntity\CustomEntityDefinition" class="Shopware\Core\System\CustomEntity\CustomEntityDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Locale\LocaleDefinition" class="Shopware\Core\System\Locale\LocaleDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition" class="Shopware\Core\System\Locale\Aggregate\LocaleTranslation\LocaleTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition" class="Shopware\Core\System\Snippet\Aggregate\SnippetSet\SnippetSetDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Snippet\SnippetDefinition" class="Shopware\Core\System\Snippet\SnippetDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition" class="Shopware\Core\System\Salutation\Aggregate\SalutationTranslation\SalutationTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Tax\TaxDefinition" class="Shopware\Core\System\Tax\TaxDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition" class="Shopware\Core\System\Tax\Aggregate\TaxRule\TaxRuleDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition" class="Shopware\Core\System\Tax\Aggregate\TaxRuleType\TaxRuleTypeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition" class="Shopware\Core\System\Tax\Aggregate\TaxRuleTypeTranslation\TaxRuleTypeTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\TaxProvider\TaxProviderDefinition" class="Shopware\Core\System\TaxProvider\TaxProviderDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\TaxProvider\Aggregate\TaxProviderTranslation\TaxProviderTranslationDefinition" class="Shopware\Core\System\TaxProvider\Aggregate\TaxProviderTranslation\TaxProviderTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Unit\UnitDefinition" class="Shopware\Core\System\Unit\UnitDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition" class="Shopware\Core\System\Unit\Aggregate\UnitTranslation\UnitTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\User\UserDefinition" class="Shopware\Core\System\User\UserDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\User\Aggregate\UserConfig\UserConfigDefinition" class="Shopware\Core\System\User\Aggregate\UserConfig\UserConfigDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition" class="Shopware\Core\System\User\Aggregate\UserAccessKey\UserAccessKeyDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition" class="Shopware\Core\System\User\Aggregate\UserRecovery\UserRecoveryDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Integration\IntegrationDefinition" class="Shopware\Core\System\Integration\IntegrationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Integration\Aggregate\IntegrationRole\IntegrationRoleDefinition" class="Shopware\Core\System\Integration\Aggregate\IntegrationRole\IntegrationRoleDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\StateMachine\StateMachineDefinition" class="Shopware\Core\System\StateMachine\StateMachineDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\StateMachine\StateMachineTranslationDefinition" class="Shopware\Core\System\StateMachine\StateMachineTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition" class="Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition" class="Shopware\Core\System\StateMachine\Aggregation\StateMachineState\StateMachineStateTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition" class="Shopware\Core\System\StateMachine\Aggregation\StateMachineTransition\StateMachineTransitionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition" class="Shopware\Core\System\StateMachine\Aggregation\StateMachineHistory\StateMachineHistoryDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\SystemConfig\SystemConfigDefinition" class="Shopware\Core\System\SystemConfig\SystemConfigDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\NumberRange\NumberRangeDefinition" class="Shopware\Core\System\NumberRange\NumberRangeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition" class="Shopware\Core\System\NumberRange\Aggregate\NumberRangeSalesChannel\NumberRangeSalesChannelDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition" class="Shopware\Core\System\NumberRange\Aggregate\NumberRangeState\NumberRangeStateDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition" class="Shopware\Core\System\NumberRange\Aggregate\NumberRangeType\NumberRangeTypeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition" class="Shopware\Core\System\NumberRange\Aggregate\NumberRangeTypeTranslation\NumberRangeTypeTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition" class="Shopware\Core\System\NumberRange\Aggregate\NumberRangeTranslation\NumberRangeTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\Tag\TagDefinition" class="Shopware\Core\System\Tag\TagDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition" class="Shopware\Core\Content\Category\Aggregate\CategoryTranslation\CategoryTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition" class="Shopware\Core\Content\Category\Aggregate\CategoryTag\CategoryTagDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Media\MediaDefinition" class="Shopware\Core\Content\Media\MediaDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaDefaultFolder\MediaDefaultFolderDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaThumbnail\MediaThumbnailDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaTranslation\MediaTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaFolder\MediaFolderDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaThumbnailSize\MediaThumbnailSizeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaFolderConfiguration\MediaFolderConfigurationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaFolderConfigurationMediaThumbnailSize\MediaFolderConfigurationMediaThumbnailSizeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition" class="Shopware\Core\Content\Media\Aggregate\MediaTag\MediaTagDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductStreamMapping\ProductStreamMappingDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductStreamMapping\ProductStreamMappingDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCategory\ProductCategoryDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductCustomFieldSet\ProductCustomFieldSetDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCustomFieldSet\ProductCustomFieldSetDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductTag\ProductTagDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductConfiguratorSetting\ProductConfiguratorSettingDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductPrice\ProductPriceDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductProperty\ProductPropertyDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductSearchKeyword\ProductSearchKeywordDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductKeywordDictionary\ProductKeywordDictionaryDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductReview\ProductReviewDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductManufacturer\ProductManufacturerDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductManufacturerTranslation\ProductManufacturerTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductMedia\ProductMediaDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductDownload\ProductDownloadDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductDownload\ProductDownloadDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductTranslation\ProductTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductOption\ProductOptionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCategoryTree\ProductCategoryTreeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCrossSelling\ProductCrossSellingDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCrossSellingTranslation\ProductCrossSellingTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductCrossSellingAssignedProducts\ProductCrossSellingAssignedProductsDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductCrossSellingAssignedProducts\ProductCrossSellingAssignedProductsDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductFeatureSet\ProductFeatureSetDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductFeatureSet\ProductFeatureSetDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductFeatureSetTranslation\ProductFeatureSetTranslationDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductFeatureSetTranslation\ProductFeatureSetTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingDefinition" class="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingTranslationDefinition" class="Shopware\Core\Content\Product\SalesChannel\Sorting\ProductSortingTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductSearchConfig\ProductSearchConfigDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductSearchConfig\ProductSearchConfigDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductSearchConfigField\ProductSearchConfigFieldDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductSearchConfigField\ProductSearchConfigFieldDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition" class="Shopware\Core\Content\Product\Aggregate\ProductVisibility\ProductVisibilityDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition" class="Shopware\Core\System\DeliveryTime\DeliveryTimeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition" class="Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipientTag\NewsletterRecipientTagDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Rule\RuleDefinition" class="Shopware\Core\Content\Rule\RuleDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition" class="Shopware\Core\Content\Rule\Aggregate\RuleCondition\RuleConditionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Rule\Aggregate\RuleTag\RuleTagDefinition" class="Shopware\Core\Content\Rule\Aggregate\RuleTag\RuleTagDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\ProductStream\ProductStreamDefinition" class="Shopware\Core\Content\ProductStream\ProductStreamDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition" class="Shopware\Core\Content\ProductStream\Aggregate\ProductStreamTranslation\ProductStreamTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition" class="Shopware\Core\Content\ProductStream\Aggregate\ProductStreamFilter\ProductStreamFilterDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\ProductExport\ProductExportDefinition" class="Shopware\Core\Content\ProductExport\ProductExportDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Property\PropertyGroupDefinition" class="Shopware\Core\Content\Property\PropertyGroupDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition" class="Shopware\Core\Content\Property\Aggregate\PropertyGroupOption\PropertyGroupOptionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition" class="Shopware\Core\Content\Property\Aggregate\PropertyGroupOptionTranslation\PropertyGroupOptionTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition" class="Shopware\Core\Content\Property\Aggregate\PropertyGroupTranslation\PropertyGroupTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Cms\CmsPageDefinition" class="Shopware\Core\Content\Cms\CmsPageDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition" class="Shopware\Core\Content\Cms\Aggregate\CmsPageTranslation\CmsPageTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition" class="Shopware\Core\Content\Cms\Aggregate\CmsSection\CmsSectionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition" class="Shopware\Core\Content\Cms\Aggregate\CmsBlock\CmsBlockDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition" class="Shopware\Core\Content\Cms\Aggregate\CmsSlot\CmsSlotDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition" class="Shopware\Core\Content\Cms\Aggregate\CmsSlotTranslation\CmsSlotTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\MailTemplate\MailTemplateDefinition" class="Shopware\Core\Content\MailTemplate\MailTemplateDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTranslation\MailTemplateTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateType\MailTemplateTypeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateTypeTranslation\MailTemplateTypeTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailTemplateMedia\MailTemplateMediaDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooter\MailHeaderFooterDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition" class="Shopware\Core\Content\MailTemplate\Aggregate\MailHeaderFooterTranslation\MailHeaderFooterTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition" class="Shopware\Core\System\DeliveryTime\Aggregate\DeliveryTimeTranslation\DeliveryTimeTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\ImportExport\ImportExportProfileDefinition" class="Shopware\Core\Content\ImportExport\ImportExportProfileDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition" class="Shopware\Core\Content\ImportExport\Aggregate\ImportExportLog\ImportExportLogDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition" class="Shopware\Core\Content\ImportExport\Aggregate\ImportExportFile\ImportExportFileDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\ImportExport\ImportExportProfileTranslationDefinition" class="Shopware\Core\Content\ImportExport\ImportExportProfileTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\LandingPage\Aggregate\LandingPageTranslation\LandingPageTranslationDefinition" class="Shopware\Core\Content\LandingPage\Aggregate\LandingPageTranslation\LandingPageTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\LandingPage\Aggregate\LandingPageTag\LandingPageTagDefinition" class="Shopware\Core\Content\LandingPage\Aggregate\LandingPageTag\LandingPageTagDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\LandingPage\Aggregate\LandingPageSalesChannel\LandingPageSalesChannelDefinition" class="Shopware\Core\Content\LandingPage\Aggregate\LandingPageSalesChannel\LandingPageSalesChannelDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Flow\FlowDefinition" class="Shopware\Core\Content\Flow\FlowDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Flow\Aggregate\FlowSequence\FlowSequenceDefinition" class="Shopware\Core\Content\Flow\Aggregate\FlowSequence\FlowSequenceDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Content\Flow\Aggregate\FlowTemplate\FlowTemplateDefinition" class="Shopware\Core\Content\Flow\Aggregate\FlowTemplate\FlowTemplateDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Customer\CustomerDefinition" class="Shopware\Core\Checkout\Customer\CustomerDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupTranslation\CustomerGroupTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerAddress\CustomerAddressDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerRecovery\CustomerRecoveryDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroup\CustomerGroupDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupRegistrationSalesChannel\CustomerGroupRegistrationSalesChannelDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerGroupRegistrationSalesChannel\CustomerGroupRegistrationSalesChannelDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerTag\CustomerTagDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlist\CustomerWishlistDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlist\CustomerWishlistDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlistProduct\CustomerWishlistProductDefinition" class="Shopware\Core\Checkout\Customer\Aggregate\CustomerWishlistProduct\CustomerWishlistProductDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Document\DocumentDefinition" class="Shopware\Core\Checkout\Document\DocumentDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition" class="Shopware\Core\Checkout\Document\Aggregate\DocumentType\DocumentTypeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition" class="Shopware\Core\Checkout\Document\Aggregate\DocumentTypeTranslation\DocumentTypeTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition" class="Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfig\DocumentBaseConfigDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition" class="Shopware\Core\Checkout\Document\Aggregate\DocumentBaseConfigSalesChannel\DocumentBaseConfigSalesChannelDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\OrderDefinition" class="Shopware\Core\Checkout\Order\OrderDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderAddress\OrderAddressDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderCustomer\OrderCustomerDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderDelivery\OrderDeliveryDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderDeliveryPosition\OrderDeliveryPositionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderLineItem\OrderLineItemDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderLineItemDownload\OrderLineItemDownloadDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderLineItemDownload\OrderLineItemDownloadDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderTag\OrderTagDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderTransaction\OrderTransactionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCapture\OrderTransactionCaptureDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCapture\OrderTransactionCaptureDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefund\OrderTransactionCaptureRefundDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefundPosition\OrderTransactionCaptureRefundPositionDefinition" class="Shopware\Core\Checkout\Order\Aggregate\OrderTransactionCaptureRefundPosition\OrderTransactionCaptureRefundPositionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition" class="Shopware\Core\Checkout\Payment\Aggregate\PaymentMethodTranslation\PaymentMethodTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\PromotionDefinition" class="Shopware\Core\Checkout\Promotion\PromotionDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSalesChannel\PromotionSalesChannelDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionIndividualCode\PromotionIndividualCodeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscount\PromotionDiscountDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountRule\PromotionDiscountRuleDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroup\PromotionSetGroupDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionSetGroupRule\PromotionSetGroupRuleDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionOrderRule\PromotionOrderRuleDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaCustomer\PromotionPersonaCustomerDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionPersonaRule\PromotionPersonaRuleDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionCartRule\PromotionCartRuleDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionTranslation\PromotionTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition" class="Shopware\Core\Checkout\Promotion\Aggregate\PromotionDiscountPrice\PromotionDiscountPriceDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition" class="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTag\ShippingMethodTagDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition" class="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodPrice\ShippingMethodPriceDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition" class="Shopware\Core\Checkout\Shipping\Aggregate\ShippingMethodTranslation\ShippingMethodTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Administration\Snippet\AppAdministrationSnippetDefinition" class="Shopware\Administration\Snippet\AppAdministrationSnippetDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Administration\Notification\NotificationDefinition" class="Shopware\Administration\Notification\NotificationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Storefront\Theme\ThemeDefinition" class="Shopware\Storefront\Theme\ThemeDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition" class="Shopware\Storefront\Theme\Aggregate\ThemeTranslationDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition" class="Shopware\Storefront\Theme\Aggregate\ThemeSalesChannelDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition" class="Shopware\Storefront\Theme\Aggregate\ThemeMediaDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel_definition.Shopware\Storefront\Theme\Aggregate\ThemeChildDefinition" class="Shopware\Storefront\Theme\Aggregate\ThemeChildDefinition" public="true">
      <call method="compile">
        <argument type="service" id="Shopware\Core\System\SalesChannel\Entity\SalesChannelDefinitionInstanceRegistry"/>
      </call>
    </service>
    <service id="sales_channel.language.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Language\SalesChannel\SalesChannelLanguageDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.seo_url.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Seo\SeoUrl\SalesChannel\SalesChannelSeoUrlDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.main_category.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Seo\MainCategory\SalesChannel\SalesChannelMainCategoryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.country.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Country\SalesChannel\SalesChannelCountryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.country_state.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Country\Aggregate\CountryState\SalesChannel\SalesChannelCountryStateDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.currency.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Currency\SalesChannel\SalesChannelCurrencyDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.salutation.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\System\Salutation\SalesChannel\SalesChannelSalutationDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.category.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Category\SalesChannel\SalesChannelCategoryDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.product.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\SalesChannelProductDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.newsletter_recipient.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\Newsletter\SalesChannel\SalesChannelNewsletterRecipientDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.landing_page.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\Content\LandingPage\SalesChannel\SalesChannelLandingPageDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.payment_method.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Payment\SalesChannel\SalesChannelPaymentMethodDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id="sales_channel.shipping_method.repository" class="Shopware\Core\System\SalesChannel\Entity\SalesChannelRepository" public="true">
      <argument type="service" id="Shopware\Core\Checkout\Shipping\SalesChannel\SalesChannelShippingMethodDefinition"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Read\EntityReaderInterface"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher"/>
      <argument type="service" id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Event\EntityLoadedEventFactory"/>
    </service>
    <service id=".service_locator.yY.p4P7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.O2p6Lk7" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="Shopware\Storefront\Framework\Routing\Router" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.O2p6Lk7.Shopware\Core\Framework\Api\Controller\CacheController" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="Shopware\Core\Framework\Api\Controller\CacheController"/>
      <argument>Shopware\Core\Framework\Api\Controller\CacheController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.O2p6Lk7" method="withContext"/>
    </service>
    <service id=".service_locator.fuYM_Z." class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service_closure" id="Shopware\Core\Framework\Adapter\Translation\Translator"/>
      </argument>
    </service>
    <service id=".service_locator.fuYM_Z..translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.fuYM_Z." method="withContext"/>
    </service>
    <service id=".service_locator.otfny_1" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service_closure" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.otfny_1.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.otfny_1" method="withContext"/>
    </service>
    <service id=".service_locator.cUcW89y" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="Shopware\Storefront\Framework\Routing\Router"/>
      </argument>
    </service>
    <service id=".service_locator.cUcW89y.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.cUcW89y" method="withContext"/>
    </service>
    <service id=".service_locator..PvrcqP" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cache" type="service_closure" id="shopware.cache.invalidator.storage.cache"/>
        <argument key="redis" type="service_closure" id="shopware.cache.invalidator.storage.redis"/>
      </argument>
    </service>
    <service id=".service_locator.iAsjxbi" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\CashPayment" type="service_closure" id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\CashPayment"/>
        <argument key="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DebitPayment" type="service_closure" id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DebitPayment"/>
        <argument key="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DefaultPayment" type="service_closure" id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\DefaultPayment"/>
        <argument key="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\InvoicePayment" type="service_closure" id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\InvoicePayment"/>
        <argument key="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PrePayment" type="service_closure" id="Shopware\Core\Checkout\Payment\Cart\PaymentHandler\PrePayment"/>
        <argument key="Shopware\Core\Framework\App\Payment\Handler\AppSyncPaymentHandler" type="service_closure" id="Shopware\Core\Framework\App\Payment\Handler\AppSyncPaymentHandler"/>
      </argument>
    </service>
    <service id=".service_locator.tTw6vfd" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Shopware\Core\Framework\App\Payment\Handler\AppAsyncPaymentHandler" type="service_closure" id="Shopware\Core\Framework\App\Payment\Handler\AppAsyncPaymentHandler"/>
      </argument>
    </service>
    <service id=".service_locator.VZ0.H1C" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Shopware\Core\Framework\App\Payment\Handler\AppPaymentHandler" type="service_closure" id="Shopware\Core\Framework\App\Payment\Handler\AppPaymentHandler"/>
      </argument>
    </service>
    <service id=".service_locator.Xbsa8iG" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.uSDOPcE" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Shopware\Core\Checkout\Cart\CartValueResolver" type="service_closure" id=".debug.value_resolver.Shopware\Core\Checkout\Cart\CartValueResolver"/>
        <argument key="Shopware\Core\Checkout\Customer\CustomerValueResolver" type="service_closure" id=".debug.value_resolver.Shopware\Core\Checkout\Customer\CustomerValueResolver"/>
        <argument key="Shopware\Core\Framework\Api\Context\ContextValueResolver" type="service_closure" id=".debug.value_resolver.Shopware\Core\Framework\Api\Context\ContextValueResolver"/>
        <argument key="Shopware\Core\Framework\Api\Response\ResponseFactoryInterfaceValueResolver" type="service_closure" id=".debug.value_resolver.Shopware\Core\Framework\Api\Response\ResponseFactoryInterfaceValueResolver"/>
        <argument key="Shopware\Core\Framework\Routing\Annotation\CriteriaValueResolver" type="service_closure" id=".debug.value_resolver.Shopware\Core\Framework\Routing\Annotation\CriteriaValueResolver"/>
        <argument key="Shopware\Core\Framework\Routing\QueryDataBagResolver" type="service_closure" id=".debug.value_resolver.Shopware\Core\Framework\Routing\QueryDataBagResolver"/>
        <argument key="Shopware\Core\Framework\Routing\RequestDataBagResolver" type="service_closure" id=".debug.value_resolver.Shopware\Core\Framework\Routing\RequestDataBagResolver"/>
        <argument key="Shopware\Core\System\SalesChannel\Context\SalesChannelContextValueResolver" type="service_closure" id=".debug.value_resolver.Shopware\Core\System\SalesChannel\Context\SalesChannelContextValueResolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\BackedEnumValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.backed_enum_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DateTimeValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.datetime"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.default"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\QueryParameterValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.query_parameter_value_resolver"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request_attribute"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestPayloadValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request_payload"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.request"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.service"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.session"/>
        <argument key="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" type="service_closure" id=".debug.value_resolver.argument_resolver.variadic"/>
        <argument key="argument_resolver.not_tagged_controller" type="service_closure" id=".debug.value_resolver.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id=".service_locator.XXv1IfR" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.ndmwPHD" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="cache.app" type="service_closure" id="cache.app.taggable"/>
        <argument key="cache.http" type="service_closure" id="cache.http"/>
        <argument key="cache.object" type="service_closure" id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
        <argument key="cache.rate_limiter" type="service_closure" id=".cache.rate_limiter.taggable"/>
        <argument key="cache.tags" type="service_closure" id=".cache.tags.taggable"/>
      </argument>
    </service>
    <service id=".service_locator.9ETxUxh" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="event_dispatcher" type="service_closure" id="debug.event_dispatcher"/>
      </argument>
    </service>
    <service id=".service_locator.nHM1aAW" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.cXsfP3P" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="logger" type="service_closure" id="monolog.logger" on-invalid="ignore"/>
        <argument key="session_factory" type="service_closure" id="session.factory" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\FlowDispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher"/>
    <service id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher.inner" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntitySearcher">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\CriteriaQueryBuilder"/>
    </service>
    <service id="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator.inner" class="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityAggregator">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\EntityDefinitionQueryHelper"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Dbal\CriteriaQueryBuilder"/>
      <argument>%env(bool:SHOPWARE_DBAL_TIMEZONE_SUPPORT_ENABLED)%</argument>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\SearchTermInterpreter"/>
      <argument type="service" id="Shopware\Core\Framework\DataAbstractionLayer\Search\Term\EntityScoreQueryBuilder"/>
    </service>
    <service id="http_client.uri_template.inner" class="Symfony\Contracts\HttpClient\HttpClientInterface">
      <argument type="collection">
        <argument type="service" id="http_client.transport"/>
      </argument>
      <factory function="current"/>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Twig\TemplateIterator.inner" class="Symfony\Bundle\TwigBundle\TemplateIterator">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="/home/avinash/Desktop/work/Shopware/vendor/symfony/twig-bridge/Resources/views/Email">email</argument>
      </argument>
      <argument>/home/avinash/Desktop/work/Shopware/templates</argument>
      <argument type="collection"/>
    </service>
    <service id="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver.inner" class="Shopware\Core\Framework\Routing\ApiRequestContextResolver">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="Shopware\Core\Framework\Routing\RouteScopeRegistry"/>
    </service>
    <service id="Shopware\Core\Framework\Log\Monolog\ExcludeExceptionHandler.inner" class="Monolog\Handler\StreamHandler">
      <argument>/home/avinash/Desktop/work/Shopware/var/log/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Adapter\Cache\CacheDecorator.inner" class="Symfony\Component\Cache\Adapter\TagAwareAdapter">
      <argument type="service" id=".cache.object.inner"/>
      <argument type="service" id="cache.tags"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Api\ApiDefinition\Generator\CachedEntitySchemaGenerator.inner" class="Shopware\Core\Framework\Api\ApiDefinition\Generator\EntitySchemaGenerator"/>
    <service id="Shopware\Core\Framework\Api\OAuth\BearerTokenValidator.inner" class="League\OAuth2\Server\AuthorizationValidators\BearerTokenValidator">
      <argument type="service" id="Shopware\Core\Framework\Api\OAuth\AccessTokenRepository"/>
      <call method="setPublicKey">
        <argument type="service" id="shopware.public_key"/>
      </call>
    </service>
    <service id="Shopware\Core\Framework\Validation\HappyPathValidator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="Shopware\Core\System\Language\CachedLanguageLoader.inner" class="Shopware\Core\System\Language\LanguageLoader">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Context\CachedBaseContextFactory.inner" class="Shopware\Core\System\SalesChannel\Context\BaseContextFactory">
      <argument type="service" id="sales_channel.repository"/>
      <argument type="service" id="currency.repository"/>
      <argument type="service" id="customer_group.repository"/>
      <argument type="service" id="country.repository"/>
      <argument type="service" id="tax.repository"/>
      <argument type="service" id="payment_method.repository"/>
      <argument type="service" id="shipping_method.repository"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="country_state.repository"/>
      <argument type="service" id="currency_country_rounding.repository"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator.inner" class="Shopware\Core\Content\Product\SalesChannel\Price\ProductPriceCalculator">
      <argument type="service" id="unit.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Price\QuantityPriceCalculator"/>
    </service>
    <service id="Shopware\Administration\Snippet\CachedSnippetFinder.inner" class="Shopware\Administration\Snippet\SnippetFinder">
      <argument type="service" id="kernel"/>
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Storefront\Framework\Routing\RequestTransformer.inner" class="Shopware\Core\Framework\Routing\RequestTransformer"/>
    <service id="Shopware\Storefront\Page\Product\Configurator\ProductPageConfiguratorLoader.inner" class="Shopware\Core\Content\Product\SalesChannel\Detail\ProductConfiguratorLoader">
      <argument type="service" id="product_configurator_setting.repository"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Detail\AvailableCombinationLoader"/>
    </service>
    <service id="Shopware\Storefront\Page\Cms\DefaultMediaResolver.inner" class="Shopware\Core\Content\Media\Cms\DefaultMediaResolver">
      <argument type="service" id="shopware.filesystem.public"/>
    </service>
    <service id="Shopware\Storefront\Framework\Cache\CacheTracer.inner" class="Shopware\Core\Framework\Adapter\Cache\CacheTracer">
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Translation\Translator"/>
      <argument type="service" id="Shopware\Core\Framework\Adapter\Cache\CacheTagCollection"/>
    </service>
    <service id="Shopware\Storefront\Framework\Cookie\AppCookieProvider.inner" class="Shopware\Storefront\Framework\Cookie\CookieProvider" autowire="true"/>
    <service id="Shopware\Storefront\Framework\App\Template\IconTemplateLoader.inner" class="Shopware\Core\Framework\App\Template\TemplateLoader">
      <argument type="service" id="Shopware\Core\Framework\App\Lifecycle\AppLoader"/>
    </service>
    <service id="Shopware\Storefront\Framework\Twig\TwigAppVariable.inner" class="Symfony\Bridge\Twig\AppVariable">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
      <call method="setLocaleSwitcher">
        <argument type="service" id="translation.locale_switcher" on-invalid="ignore"/>
      </call>
    </service>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id=".debug.value_resolver.Shopware\Core\Checkout\Customer\CustomerValueResolver"/>
        <argument type="service" id=".debug.value_resolver.Shopware\Core\Checkout\Cart\CartValueResolver"/>
        <argument type="service" id=".debug.value_resolver.Shopware\Core\Framework\Routing\QueryDataBagResolver"/>
        <argument type="service" id=".debug.value_resolver.Shopware\Core\Framework\Routing\RequestDataBagResolver"/>
        <argument type="service" id=".debug.value_resolver.Shopware\Core\Framework\Api\Context\ContextValueResolver"/>
        <argument type="service" id=".debug.value_resolver.Shopware\Core\System\SalesChannel\Context\SalesChannelContextValueResolver"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.backed_enum_resolver"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.datetime"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.request_attribute"/>
        <argument type="service" id=".debug.value_resolver.Shopware\Core\Framework\Api\Response\ResponseFactoryInterfaceValueResolver"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.request"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.session"/>
        <argument type="service" id=".debug.value_resolver.Shopware\Core\Framework\Routing\Annotation\CriteriaValueResolver"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.service"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.default"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.variadic"/>
        <argument type="service" id=".debug.value_resolver.argument_resolver.not_tagged_controller"/>
      </argument>
      <argument type="service" id=".service_locator.uSDOPcE"/>
    </service>
    <service id="var_dumper.contextualized_cli_dumper.inner" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="shopware.es.profiled.client.inner" class="OpenSearch\Client" lazy="true">
      <argument>%env(string:OPENSEARCH_URL)%</argument>
      <argument type="service" id="monolog.logger.elasticsearch"/>
      <argument>true</argument>
      <argument>%elasticsearch.ssl%</argument>
      <factory class="Shopware\Elasticsearch\Framework\ClientFactory" method="createClient"/>
    </service>
    <service id="shopware.es.profiled.adminClient.inner" class="OpenSearch\Client" lazy="true">
      <argument>%env(string:ADMIN_OPENSEARCH_URL)%</argument>
      <argument type="service" id="monolog.logger.elasticsearch"/>
      <argument>true</argument>
      <argument>%elasticsearch.ssl%</argument>
      <factory class="Shopware\Elasticsearch\Framework\ClientFactory" method="createClient"/>
    </service>
    <service id="Shopware\Core\System\Language\SalesChannel\CachedLanguageRoute.inner" class="Shopware\Core\System\Language\SalesChannel\LanguageRoute">
      <argument type="service" id="sales_channel.language.repository"/>
    </service>
    <service id="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory.inner" class="Shopware\Core\System\SalesChannel\Context\SalesChannelContextFactory">
      <argument type="service" id="customer.repository"/>
      <argument type="service" id="customer_group.repository"/>
      <argument type="service" id="customer_address.repository"/>
      <argument type="service" id="payment_method.repository"/>
      <argument type="service" id="Shopware\Core\Checkout\Cart\Tax\TaxDetector"/>
      <argument type="tagged_iterator" tag="tax.rule_type_filter"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="currency_country_rounding.repository"/>
      <argument type="service" id="Shopware\Core\System\SalesChannel\Context\CachedBaseContextFactory"/>
    </service>
    <service id="Shopware\Core\System\Country\SalesChannel\CachedCountryRoute.inner" class="Shopware\Core\System\Country\SalesChannel\CountryRoute">
      <argument type="service" id="sales_channel.country.repository"/>
    </service>
    <service id="Shopware\Core\System\Country\SalesChannel\CachedCountryStateRoute.inner" class="Shopware\Core\System\Country\SalesChannel\CountryStateRoute">
      <argument type="service" id="country_state.repository"/>
    </service>
    <service id="Shopware\Core\System\Currency\SalesChannel\CachedCurrencyRoute.inner" class="Shopware\Core\System\Currency\SalesChannel\CurrencyRoute">
      <argument type="service" id="sales_channel.currency.repository"/>
    </service>
    <service id="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute.inner" class="Shopware\Core\System\Salutation\SalesChannel\SalutationRoute">
      <argument type="service" id="sales_channel.salutation.repository"/>
    </service>
    <service id="Shopware\Core\System\SystemConfig\CachedSystemConfigLoader.inner" class="Shopware\Core\System\SystemConfig\SystemConfigLoader">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="Shopware\Core\Content\Category\SalesChannel\CachedNavigationRoute.inner" class="Shopware\Core\Content\Category\SalesChannel\NavigationRoute">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="sales_channel.category.repository"/>
    </service>
    <service id="Shopware\Core\Content\Category\SalesChannel\CachedCategoryRoute.inner" class="Shopware\Core\Content\Category\SalesChannel\CategoryRoute">
      <argument type="service" id="sales_channel.category.repository"/>
      <argument type="service" id="Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageLoader"/>
      <argument type="service" id="Shopware\Core\Content\Category\SalesChannel\SalesChannelCategoryDefinition"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Suggest\CachedProductSuggestRoute.inner" class="Shopware\Core\Content\Product\SalesChannel\Suggest\ProductSuggestRoute">
      <argument type="service" id="Shopware\Elasticsearch\Product\ProductSearchBuilder"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingLoader"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\Processor\CompositeListingProcessor"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Search\CachedProductSearchRoute.inner" class="Shopware\Core\Content\Product\SalesChannel\Search\ProductSearchRoute">
      <argument type="service" id="Shopware\Elasticsearch\Product\ProductSearchBuilder"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingLoader"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\CachedProductListingRoute.inner" class="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingRoute">
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingLoader"/>
      <argument type="service" id="category.repository"/>
      <argument type="service" id="Shopware\Core\Content\ProductStream\Service\ProductStreamBuilder"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Detail\CachedProductDetailRoute.inner" class="Shopware\Core\Content\Product\SalesChannel\Detail\ProductDetailRoute">
      <argument type="service" id="sales_channel.product.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Storefront\Page\Product\Configurator\ProductPageConfiguratorLoader"/>
      <argument type="service" id="Shopware\Core\Content\Category\Service\CategoryBreadcrumbBuilder"/>
      <argument type="service" id="Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageLoader"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\SalesChannelProductDefinition"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\ProductCloseoutFilterFactory"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\Review\CachedProductReviewRoute.inner" class="Shopware\Core\Content\Product\SalesChannel\Review\ProductReviewRoute">
      <argument type="service" id="product_review.repository"/>
    </service>
    <service id="Shopware\Core\Content\Product\SalesChannel\CrossSelling\CachedProductCrossSellingRoute.inner" class="Shopware\Core\Content\Product\SalesChannel\CrossSelling\ProductCrossSellingRoute">
      <argument type="service" id="product_cross_selling.repository"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="Shopware\Core\Content\ProductStream\Service\ProductStreamBuilder"/>
      <argument type="service" id="sales_channel.product.repository"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingLoader"/>
      <argument type="service" id="Shopware\Core\Content\Product\SalesChannel\ProductCloseoutFilterFactory"/>
    </service>
    <service id="Shopware\Core\Content\Sitemap\SalesChannel\CachedSitemapRoute.inner" class="Shopware\Core\Content\Sitemap\SalesChannel\SitemapRoute">
      <argument type="service" id="Shopware\Core\Content\Sitemap\Service\SitemapLister"/>
      <argument type="service" id="Shopware\Core\System\SystemConfig\SystemConfigService"/>
      <argument type="service" id="Shopware\Core\Content\Sitemap\Service\SitemapExporter"/>
    </service>
    <service id="Shopware\Core\Content\LandingPage\SalesChannel\CachedLandingPageRoute.inner" class="Shopware\Core\Content\LandingPage\SalesChannel\LandingPageRoute">
      <argument type="service" id="sales_channel.landing_page.repository"/>
      <argument type="service" id="Shopware\Core\Content\Cms\SalesChannel\SalesChannelCmsPageLoader"/>
      <argument type="service" id="Shopware\Core\Content\LandingPage\SalesChannel\SalesChannelLandingPageDefinition"/>
    </service>
    <service id="Shopware\Core\Content\Flow\Dispatching\CachedFlowLoader.inner" class="Shopware\Core\Content\Flow\Dispatching\FlowLoader">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="Shopware\Core\Checkout\Cart\CachedRuleLoader.inner" class="Shopware\Core\Checkout\Cart\RuleLoader">
      <argument type="service" id="rule.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Payment\SalesChannel\CachedPaymentMethodRoute.inner" class="Shopware\Core\Checkout\Payment\SalesChannel\PaymentMethodRoute">
      <argument type="service" id="sales_channel.payment_method.repository"/>
    </service>
    <service id="Shopware\Core\Checkout\Shipping\SalesChannel\CachedShippingMethodRoute.inner" class="Shopware\Core\Checkout\Shipping\SalesChannel\ShippingMethodRoute">
      <argument type="service" id="sales_channel.shipping_method.repository"/>
    </service>
    <service id="Shopware\Storefront\Framework\Routing\CachedDomainLoader.inner" class="Shopware\Storefront\Framework\Routing\DomainLoader" autowire="true">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Storefront\Theme\CachedResolvedConfigLoader.inner" class="Shopware\Storefront\Theme\ResolvedConfigLoader" lazy="true">
      <argument type="service" id="media.repository"/>
      <argument type="service" id="Shopware\Storefront\Theme\ThemeService"/>
    </service>
    <service id="Shopware\Core\Content\Seo\EmptyPathInfoResolver.inner" class="Shopware\Core\Content\Seo\SeoResolver">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
    </service>
    <service id="Shopware\Elasticsearch\Product\SearchKeywordReplacement.inner" class="Shopware\Core\Content\Product\DataAbstractionLayer\SearchKeywordUpdater">
      <argument type="service" id="Doctrine\DBAL\Connection"/>
      <argument type="service" id="language.repository"/>
      <argument type="service" id="product.repository"/>
      <argument type="service" id="Shopware\Core\Content\Product\SearchKeyword\ProductSearchKeywordAnalyzer"/>
    </service>
    <service id="Shopware\Elasticsearch\Product\ProductSearchBuilder.inner" class="Shopware\Core\Content\Product\SearchKeyword\ProductSearchBuilder">
      <argument type="service" id="Shopware\Core\Content\Product\SearchKeyword\ProductSearchTermInterpreter"/>
    </service>
    <service id=".errored..service_locator.mAMut9a.Shopware\Core\Framework\Validation\DataBag\RequestDataBag" class="Shopware\Core\Framework\Validation\DataBag\RequestDataBag">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.mAMut9a&quot;: it references class &quot;Shopware\Core\Framework\Validation\DataBag\RequestDataBag&quot; but no such service exists."/>
    </service>
    <service id=".errored..service_locator.y4_Zrx..Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface">
      <tag name="container.error" message="Cannot autowire service &quot;.service_locator.y4_Zrx.&quot;: it needs an instance of &quot;Symfony\Component\Config\Loader\LoaderInterface&quot; but this type has been excluded from autowiring."/>
    </service>
    <service id=".Shopware\Core\Framework\Migration\Command\CreateMigrationCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>database:create-migration</argument>
      <argument type="collection"/>
      <argument>Creates a new migration file</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Migration\Command\CreateMigrationCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Migration\Command\RefreshMigrationCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>database:refresh-migration</argument>
      <argument type="collection"/>
      <argument>Refreshes the migration state</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Migration\Command\RefreshMigrationCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Migration\Command\MigrationCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>database:migrate</argument>
      <argument type="collection"/>
      <argument>Executes all migrations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Migration\Command\MigrationCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Demodata\PersonalData\CleanPersonalDataCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>database:clean-personal-data</argument>
      <argument type="collection"/>
      <argument>Cleans personal data from the database</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Demodata\PersonalData\CleanPersonalDataCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Migration\Command\MigrationDestructiveCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>database:migrate-destructive</argument>
      <argument type="collection"/>
      <argument>Executes all migrations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Migration\Command\MigrationDestructiveCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Changelog\Command\ChangelogCreateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>changelog:create</argument>
      <argument type="collection"/>
      <argument>Creates a changelog file</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Changelog\Command\ChangelogCreateCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Changelog\Command\ChangelogReleaseCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>changelog:release</argument>
      <argument type="collection"/>
      <argument>Creates a new changelog release</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Changelog\Command\ChangelogReleaseCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Changelog\Command\ChangelogChangeCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>changelog:change</argument>
      <argument type="collection"/>
      <argument>Changes the changelog of a release</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Changelog\Command\ChangelogChangeCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Changelog\Command\ChangelogCheckCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>changelog:check</argument>
      <argument type="collection"/>
      <argument>Checks the changelog for errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Changelog\Command\ChangelogCheckCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Feature\Command\FeatureDumpCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>feature:dump</argument>
      <argument type="collection">
        <argument>administration:dump:features</argument>
        <argument>administration:dump:features</argument>
      </argument>
      <argument>Dumps all features</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Feature\Command\FeatureDumpCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Adapter\Command\S3FilesystemVisibilityCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>s3:set-visibility</argument>
      <argument type="collection"/>
      <argument>Sets the visibility of all files in the s3 filesystem to public</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Adapter\Command\S3FilesystemVisibilityCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Api\Command\DumpSchemaCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>framework:schema</argument>
      <argument type="collection"/>
      <argument>Dumps the schema of the given entity</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Api\Command\DumpSchemaCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Api\Command\DumpClassSchemaCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>framework:dump:class:schema</argument>
      <argument type="collection"/>
      <argument>Dumps the schema of the given entity</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Api\Command\DumpClassSchemaCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\App\Command\RefreshAppCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:refresh</argument>
      <argument type="collection">
        <argument>app:update</argument>
      </argument>
      <argument>Refreshes an app</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\App\Command\RefreshAppCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\App\Command\InstallAppCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:install</argument>
      <argument type="collection"/>
      <argument>Installs an app</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\App\Command\InstallAppCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\App\Command\UninstallAppCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:uninstall</argument>
      <argument type="collection"/>
      <argument>Uninstalls an app</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\App\Command\UninstallAppCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\App\Command\ActivateAppCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:activate</argument>
      <argument type="collection"/>
      <argument>Activates an app</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\App\Command\ActivateAppCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\App\Command\DeactivateAppCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:deactivate</argument>
      <argument type="collection"/>
      <argument>Deactivates an app</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\App\Command\DeactivateAppCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\App\Command\CreateAppCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:create</argument>
      <argument type="collection"/>
      <argument>Creates an app skeleton</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\App\Command\CreateAppCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\App\Command\ValidateAppCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:validate</argument>
      <argument type="collection"/>
      <argument>Validates an app</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\App\Command\ValidateAppCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\App\Command\ResolveAppUrlChangeCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>app:url-change:resolve</argument>
      <argument type="collection"/>
      <argument>Resolves app url changes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\App\Command\ResolveAppUrlChangeCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\DataAbstractionLayer\Command\CreateSchemaCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>dal:create:schema</argument>
      <argument type="collection"/>
      <argument>Creates the database schema</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateSchemaCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\DataAbstractionLayer\Command\CreateEntitiesCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>dal:create:entities</argument>
      <argument type="collection"/>
      <argument>Creates the entity classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateEntitiesCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\DataAbstractionLayer\Command\CreateHydratorCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>dal:create:hydrators</argument>
      <argument type="collection"/>
      <argument>Creates the hydrator classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateHydratorCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>dal:refresh:index</argument>
      <argument type="collection"/>
      <argument>Refreshes the index for a given entity</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\DataAbstractionLayer\Command\DataAbstractionLayerValidateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>dal:validate</argument>
      <argument type="collection"/>
      <argument>Validates the DAL definitions</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\DataAbstractionLayer\Command\DataAbstractionLayerValidateCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Demodata\Command\DemodataCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>framework:demodata</argument>
      <argument type="collection"/>
      <argument>Generates demo data</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Demodata\Command\DemodataCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Event\Command\DebugDumpBusinessEventsCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:business-events</argument>
      <argument type="collection"/>
      <argument>Dumps all business events</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Event\Command\DebugDumpBusinessEventsCommand"/>
    </service>
    <service id=".console.command.assets_install.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>assets:install</argument>
      <argument type="collection"/>
      <argument>Installs bundles web assets under a public web directory</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.assets_install"/>
    </service>
    <service id=".Shopware\Core\Framework\Plugin\Command\BundleDumpCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>bundle:dump</argument>
      <argument type="collection">
        <argument>administration:dump:plugins</argument>
        <argument>administration:dump:bundles</argument>
      </argument>
      <argument>Dumps the bundle configuration for a plugin</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Command\BundleDumpCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Plugin\Command\PluginRefreshCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>plugin:refresh</argument>
      <argument type="collection"/>
      <argument>Refreshes the plugin list</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Command\PluginRefreshCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Plugin\Command\PluginListCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>plugin:list</argument>
      <argument type="collection"/>
      <argument>Lists all plugins</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Command\PluginListCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Plugin\Command\PluginZipImportCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>plugin:zip-import</argument>
      <argument type="collection"/>
      <argument>Imports a plugin from a zip file</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Command\PluginZipImportCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginInstallCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>plugin:install</argument>
      <argument type="collection"/>
      <argument>Installs a plugin</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginInstallCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginActivateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>plugin:activate</argument>
      <argument type="collection"/>
      <argument>Activate a plugin</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginActivateCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>plugin:update</argument>
      <argument type="collection"/>
      <argument>Updates a plugin</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginDeactivateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>plugin:deactivate</argument>
      <argument type="collection"/>
      <argument>Deactivates a plugin</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginDeactivateCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUninstallCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>plugin:uninstall</argument>
      <argument type="collection"/>
      <argument>Uninstall a plugin</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUninstallCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateAllCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>plugin:update:all</argument>
      <argument type="collection"/>
      <argument>Install all available plugin updates</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateAllCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Plugin\Command\PluginCreateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>plugin:create</argument>
      <argument type="collection"/>
      <argument>Creates a new plugin</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Plugin\Command\PluginCreateCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\MessageQueue\Command\RegisterScheduledTasksCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>scheduled-task:register</argument>
      <argument type="collection"/>
      <argument>Registers all scheduled tasks</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Command\RegisterScheduledTasksCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\MessageQueue\Command\ScheduledTaskRunner.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>scheduled-task:run</argument>
      <argument type="collection"/>
      <argument>Runs scheduled tasks</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Command\ScheduledTaskRunner"/>
    </service>
    <service id=".Shopware\Core\Framework\MessageQueue\Command\ListScheduledTaskCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>scheduled-task:list</argument>
      <argument type="collection"/>
      <argument>List all scheduled tasks</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Command\ListScheduledTaskCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\MessageQueue\Command\RunSingleScheduledTaskCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>scheduled-task:run-single</argument>
      <argument type="collection"/>
      <argument>Allows to run one single scheduled task regardless of its schedule.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\MessageQueue\Command\RunSingleScheduledTaskCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Store\Command\StoreDownloadCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>store:download</argument>
      <argument type="collection"/>
      <argument>Downloads a plugin from the store</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Store\Command\StoreDownloadCommand"/>
    </service>
    <service id=".Shopware\Core\Framework\Store\Command\StoreLoginCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>store:login</argument>
      <argument type="collection"/>
      <argument>Login to the store</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Framework\Store\Command\StoreLoginCommand"/>
    </service>
    <service id=".Shopware\Core\System\Snippet\Command\ValidateSnippetsCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>snippets:validate</argument>
      <argument type="collection"/>
      <argument>Validates snippets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\System\Snippet\Command\ValidateSnippetsCommand"/>
    </service>
    <service id=".Shopware\Core\System\StateMachine\Command\WorkflowDumpCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>state-machine:dump</argument>
      <argument type="collection"/>
      <argument>Dumps a state machine to a graphviz file</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\System\StateMachine\Command\WorkflowDumpCommand"/>
    </service>
    <service id=".Shopware\Core\System\SystemConfig\Command\ConfigGet.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>system:config:get</argument>
      <argument type="collection"/>
      <argument>Get a config value</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\System\SystemConfig\Command\ConfigGet"/>
    </service>
    <service id=".Shopware\Core\System\SystemConfig\Command\ConfigSet.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>system:config:set</argument>
      <argument type="collection"/>
      <argument>Get a config value</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\System\SystemConfig\Command\ConfigSet"/>
    </service>
    <service id=".Shopware\Core\System\NumberRange\Command\MigrateIncrementStorageCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>number-range:migrate</argument>
      <argument type="collection"/>
      <argument>Migrate the increment storage of a number range</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\System\NumberRange\Command\MigrateIncrementStorageCommand"/>
    </service>
    <service id=".Shopware\Core\Content\Media\Commands\GenerateThumbnailsCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>media:generate-thumbnails</argument>
      <argument type="collection"/>
      <argument>Generates thumbnails for all media files</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Content\Media\Commands\GenerateThumbnailsCommand"/>
    </service>
    <service id=".Shopware\Core\Content\Media\Commands\GenerateMediaTypesCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>media:generate-media-types</argument>
      <argument type="collection"/>
      <argument>Generates media types for all media files</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Content\Media\Commands\GenerateMediaTypesCommand"/>
    </service>
    <service id=".Shopware\Core\Content\Media\Commands\DeleteNotUsedMediaCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>media:delete-unused</argument>
      <argument type="collection"/>
      <argument>Deletes all media files which are not used in any entity</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Content\Media\Commands\DeleteNotUsedMediaCommand"/>
    </service>
    <service id=".Shopware\Core\Content\Media\Infrastructure\Command\UpdatePathCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>media:update-path</argument>
      <argument type="collection"/>
      <argument>Iterates over the media and updates the path column.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Content\Media\Infrastructure\Command\UpdatePathCommand"/>
    </service>
    <service id=".Shopware\Core\Content\ProductExport\Command\ProductExportGenerateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>product-export:generate</argument>
      <argument type="collection"/>
      <argument>Generates a product export file</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Content\ProductExport\Command\ProductExportGenerateCommand"/>
    </service>
    <service id=".Shopware\Core\Content\ImportExport\Command\DeleteExpiredFilesCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>import-export:delete-expired</argument>
      <argument type="collection"/>
      <argument>Deletes expired files</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Content\ImportExport\Command\DeleteExpiredFilesCommand"/>
    </service>
    <service id=".Shopware\Core\Content\ImportExport\Command\ImportEntityCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>import:entity</argument>
      <argument type="collection"/>
      <argument>Import entities from a csv file</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Content\ImportExport\Command\ImportEntityCommand"/>
    </service>
    <service id=".Shopware\Core\Content\Sitemap\Commands\SitemapGenerateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>sitemap:generate</argument>
      <argument type="collection"/>
      <argument>Generates sitemap files</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Content\Sitemap\Commands\SitemapGenerateCommand"/>
    </service>
    <service id=".Shopware\Core\Checkout\Cart\Command\CartMigrateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cart:migrate</argument>
      <argument type="collection"/>
      <argument>Migrate carts from redis to database</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Checkout\Cart\Command\CartMigrateCommand"/>
    </service>
    <service id=".Shopware\Core\Checkout\Customer\Command\DeleteUnusedGuestCustomersCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>customer:delete-unused-guests</argument>
      <argument type="collection"/>
      <argument>Delete unused guest customers</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Checkout\Customer\Command\DeleteUnusedGuestCustomersCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\System\Command\SystemInstallCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>system:install</argument>
      <argument type="collection"/>
      <argument>Installs the Shopware 6 system</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\System\Command\SystemInstallCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\System\Command\SystemIsInstalledCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>system:is-installed</argument>
      <argument type="collection"/>
      <argument>Checks if the system is installed and returns exit code 0 if Shopware is installed</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\System\Command\SystemIsInstalledCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\System\Command\SystemGenerateJwtSecretCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>system:generate-jwt-secret</argument>
      <argument type="collection"/>
      <argument>Generates a new JWT secret</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\System\Command\SystemGenerateJwtSecretCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\System\Command\SystemGenerateAppSecretCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>system:generate-app-secret</argument>
      <argument type="collection"/>
      <argument>Generates a new app secret</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\System\Command\SystemGenerateAppSecretCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\System\Command\SystemSetupCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>system:setup</argument>
      <argument type="collection"/>
      <argument>Setup the system</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\System\Command\SystemSetupCommand"/>
    </service>
    <service id=".Symfony\Component\Dotenv\Command\DotenvDumpCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>dotenv:dump</argument>
      <argument type="collection"/>
      <argument>Compiles .env files to .env.local.php</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Symfony\Component\Dotenv\Command\DotenvDumpCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\System\Command\SystemUpdatePrepareCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>system:update:prepare</argument>
      <argument type="collection"/>
      <argument>Prepares the update process</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\System\Command\SystemUpdatePrepareCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\System\Command\SystemUpdateFinishCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>system:update:finish</argument>
      <argument type="collection"/>
      <argument>Finishes the update process</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\System\Command\SystemUpdateFinishCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelUpdateDomainCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>sales-channel:update:domain</argument>
      <argument type="collection"/>
      <argument>Updates a sales channel domain</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelUpdateDomainCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\System\Command\SystemConfigureShopCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>system:configure-shop</argument>
      <argument type="collection"/>
      <argument>Configure shop</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\System\Command\SystemConfigureShopCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelCreateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>sales-channel:create</argument>
      <argument type="collection"/>
      <argument>Creates a new sales channel</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelCreateCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelListCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>sales-channel:list</argument>
      <argument type="collection"/>
      <argument>Lists all sales channels</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelListCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceEnableCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>sales-channel:maintenance:enable</argument>
      <argument type="collection"/>
      <argument>Enable maintenance mode for a sales channel</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceEnableCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceDisableCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>sales-channel:maintenance:disable</argument>
      <argument type="collection"/>
      <argument>Disable maintenance mode for a sales channel</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceDisableCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\User\Command\UserCreateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>user:create</argument>
      <argument type="collection"/>
      <argument>Creates a new user</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\User\Command\UserCreateCommand"/>
    </service>
    <service id=".Shopware\Core\Maintenance\User\Command\UserChangePasswordCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>user:change-password</argument>
      <argument type="collection"/>
      <argument>Change the password of a user</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Core\Maintenance\User\Command\UserChangePasswordCommand"/>
    </service>
    <service id=".Shopware\Administration\Command\DeleteAdminFilesAfterBuildCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>administration:delete-files-after-build</argument>
      <argument type="collection"/>
      <argument>Deletes all unnecessary files of the administration after the build process.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Administration\Command\DeleteAdminFilesAfterBuildCommand"/>
    </service>
    <service id=".Shopware\Administration\Command\DeleteExtensionLocalPublicFilesCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>administration:delete-extension-local-public-files</argument>
      <argument type="collection"/>
      <argument>Deletes all files in the local public folder of the extension. This command should run after assets:install so the assets are available in the public folder.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Administration\Command\DeleteExtensionLocalPublicFilesCommand"/>
    </service>
    <service id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchIndexingCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>es:index</argument>
      <argument type="collection"/>
      <argument>Index all entities into elasticsearch</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchIndexingCommand"/>
    </service>
    <service id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchTestAnalyzerCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>es:test:analyzer</argument>
      <argument type="collection"/>
      <argument>Test the elasticsearch analyzer</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchTestAnalyzerCommand"/>
    </service>
    <service id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchStatusCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>es:status</argument>
      <argument type="collection"/>
      <argument>Show the status of the elasticsearch index</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchStatusCommand"/>
    </service>
    <service id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchResetCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>es:reset</argument>
      <argument type="collection"/>
      <argument>Reset the elasticsearch index</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchResetCommand"/>
    </service>
    <service id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchUpdateMappingCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>es:mapping:update</argument>
      <argument type="collection"/>
      <argument>Update the Elasticsearch indices mapping</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchUpdateMappingCommand"/>
    </service>
    <service id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchCreateAliasCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>es:create:alias</argument>
      <argument type="collection"/>
      <argument>Create the elasticsearch alias</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchCreateAliasCommand"/>
    </service>
    <service id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchCleanIndicesCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>es:index:cleanup</argument>
      <argument type="collection"/>
      <argument>Clean outdated indices</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchCleanIndicesCommand"/>
    </service>
    <service id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminIndexingCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>es:admin:index</argument>
      <argument type="collection"/>
      <argument>Index the elasticsearch for the admin search</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminIndexingCommand"/>
    </service>
    <service id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminResetCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>es:admin:reset</argument>
      <argument type="collection"/>
      <argument>Reset Admin Elasticsearch indexing</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminResetCommand"/>
    </service>
    <service id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminTestCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>es:admin:test</argument>
      <argument type="collection"/>
      <argument>Allows you to test the admin search index</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminTestCommand"/>
    </service>
    <service id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminUpdateMappingCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>es:admin:mapping:update</argument>
      <argument type="collection"/>
      <argument>Update the Elasticsearch indices mapping</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminUpdateMappingCommand"/>
    </service>
    <service id=".Shopware\Storefront\Framework\Command\HttpCacheWarmUpCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>http:cache:warm:up</argument>
      <argument type="collection"/>
      <argument>Warm up the http cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Storefront\Framework\Command\HttpCacheWarmUpCommand"/>
    </service>
    <service id=".Shopware\Storefront\Framework\Command\SalesChannelCreateStorefrontCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>sales-channel:create:storefront</argument>
      <argument type="collection"/>
      <argument>Creates a new storefront sales channel</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Storefront\Framework\Command\SalesChannelCreateStorefrontCommand"/>
    </service>
    <service id=".Shopware\Storefront\Theme\Command\ThemeCreateCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>theme:create</argument>
      <argument type="collection"/>
      <argument>Create a new theme</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Storefront\Theme\Command\ThemeCreateCommand"/>
    </service>
    <service id=".Shopware\Storefront\Theme\Command\ThemeChangeCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>theme:change</argument>
      <argument type="collection"/>
      <argument>Change the active theme for a sales channel</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Storefront\Theme\Command\ThemeChangeCommand"/>
    </service>
    <service id=".Shopware\Storefront\Theme\Command\ThemeCompileCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>theme:compile</argument>
      <argument type="collection"/>
      <argument>Compile the theme</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Storefront\Theme\Command\ThemeCompileCommand"/>
    </service>
    <service id=".Shopware\Storefront\Theme\Command\ThemeDumpCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>theme:dump</argument>
      <argument type="collection"/>
      <argument>Dump the theme configuration</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Storefront\Theme\Command\ThemeDumpCommand"/>
    </service>
    <service id=".Shopware\Storefront\Theme\Command\ThemeRefreshCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>theme:refresh</argument>
      <argument type="collection"/>
      <argument>Refresh the theme configuration</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Storefront\Theme\Command\ThemeRefreshCommand"/>
    </service>
    <service id=".Shopware\Storefront\Theme\Command\ThemePrepareIconsCommand.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>theme:prepare-icons</argument>
      <argument type="collection"/>
      <argument>Prepare the theme icons</argument>
      <argument>false</argument>
      <argument type="service_closure" id="Shopware\Storefront\Theme\Command\ThemePrepareIconsCommand"/>
    </service>
    <service id=".console.command.about.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>about</argument>
      <argument type="collection"/>
      <argument>Display information about the current project</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.about"/>
    </service>
    <service id=".console.command.cache_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:clear</argument>
      <argument type="collection"/>
      <argument>Clear the cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_clear"/>
    </service>
    <service id=".console.command.cache_pool_clear.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:clear</argument>
      <argument type="collection"/>
      <argument>Clear cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_clear"/>
    </service>
    <service id=".console.command.cache_pool_prune.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:prune</argument>
      <argument type="collection"/>
      <argument>Prune cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_prune"/>
    </service>
    <service id=".console.command.cache_pool_invalidate_tags.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:invalidate-tags</argument>
      <argument type="collection"/>
      <argument>Invalidate cache tags for all or a specific pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_invalidate_tags"/>
    </service>
    <service id=".console.command.cache_pool_delete.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:delete</argument>
      <argument type="collection"/>
      <argument>Delete an item from a cache pool</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_delete"/>
    </service>
    <service id=".console.command.cache_pool_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:pool:list</argument>
      <argument type="collection"/>
      <argument>List available cache pools</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_pool_list"/>
    </service>
    <service id=".console.command.cache_warmup.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>cache:warmup</argument>
      <argument type="collection"/>
      <argument>Warm up an empty cache</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.cache_warmup"/>
    </service>
    <service id=".console.command.config_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:config</argument>
      <argument type="collection"/>
      <argument>Dump the current configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_debug"/>
    </service>
    <service id=".console.command.config_dump_reference.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>config:dump-reference</argument>
      <argument type="collection"/>
      <argument>Dump the default configuration for an extension</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.config_dump_reference"/>
    </service>
    <service id=".console.command.container_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:container</argument>
      <argument type="collection"/>
      <argument>Display current services for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_debug"/>
    </service>
    <service id=".console.command.container_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:container</argument>
      <argument type="collection"/>
      <argument>Ensure that arguments injected into services match type declarations</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.container_lint"/>
    </service>
    <service id=".console.command.debug_autowiring.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:autowiring</argument>
      <argument type="collection"/>
      <argument>List classes/interfaces you can use for autowiring</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.debug_autowiring"/>
    </service>
    <service id=".console.command.dotenv_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:dotenv</argument>
      <argument type="collection"/>
      <argument>Lists all dotenv files with variables and values</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.dotenv_debug"/>
    </service>
    <service id=".console.command.event_dispatcher_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:event-dispatcher</argument>
      <argument type="collection"/>
      <argument>Display configured listeners for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.event_dispatcher_debug"/>
    </service>
    <service id=".console.command.messenger_consume_messages.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:consume</argument>
      <argument type="collection"/>
      <argument>Consume messages</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_consume_messages"/>
    </service>
    <service id=".console.command.messenger_setup_transports.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:setup-transports</argument>
      <argument type="collection"/>
      <argument>Prepare the required infrastructure for the transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_setup_transports"/>
    </service>
    <service id=".console.command.messenger_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:messenger</argument>
      <argument type="collection"/>
      <argument>List messages you can dispatch using the message buses</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_debug"/>
    </service>
    <service id=".console.command.messenger_stop_workers.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stop-workers</argument>
      <argument type="collection"/>
      <argument>Stop workers after their current message</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stop_workers"/>
    </service>
    <service id=".console.command.messenger_failed_messages_retry.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:retry</argument>
      <argument type="collection"/>
      <argument>Retry one or more messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_retry"/>
    </service>
    <service id=".console.command.messenger_failed_messages_show.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:show</argument>
      <argument type="collection"/>
      <argument>Show one or more messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_show"/>
    </service>
    <service id=".console.command.messenger_failed_messages_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:failed:remove</argument>
      <argument type="collection"/>
      <argument>Remove given messages from the failure transport</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_failed_messages_remove"/>
    </service>
    <service id=".console.command.messenger_stats.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>messenger:stats</argument>
      <argument type="collection"/>
      <argument>Show the message count for one or more transports</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.messenger_stats"/>
    </service>
    <service id=".console.command.router_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:router</argument>
      <argument type="collection"/>
      <argument>Display current routes for an application</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_debug"/>
    </service>
    <service id=".console.command.router_match.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>router:match</argument>
      <argument type="collection"/>
      <argument>Help debug routes by simulating a path info match</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.router_match"/>
    </service>
    <service id=".console.command.serializer_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:serializer</argument>
      <argument type="collection"/>
      <argument>Display serialization information for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.serializer_debug"/>
    </service>
    <service id=".console.command.translation_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:translation</argument>
      <argument type="collection"/>
      <argument>Display translation messages information</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_debug"/>
    </service>
    <service id=".console.command.translation_extract.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:extract</argument>
      <argument type="collection"/>
      <argument>Extract missing translations keys from code to translation files.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_extract"/>
    </service>
    <service id=".console.command.validator_debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:validator</argument>
      <argument type="collection"/>
      <argument>Display validation constraints for classes</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.validator_debug"/>
    </service>
    <service id=".console.command.translation_pull.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:pull</argument>
      <argument type="collection"/>
      <argument>Pull translations from a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_pull"/>
    </service>
    <service id=".console.command.translation_push.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>translation:push</argument>
      <argument type="collection"/>
      <argument>Push translations to a given provider.</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.translation_push"/>
    </service>
    <service id=".console.command.xliff_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:xliff</argument>
      <argument type="collection"/>
      <argument>Lint an XLIFF file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.xliff_lint"/>
    </service>
    <service id=".console.command.yaml_lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:yaml</argument>
      <argument type="collection"/>
      <argument>Lint a YAML file and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.yaml_lint"/>
    </service>
    <service id=".console.command.secrets_set.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:set</argument>
      <argument type="collection"/>
      <argument>Set a secret in the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_set"/>
    </service>
    <service id=".console.command.secrets_remove.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:remove</argument>
      <argument type="collection"/>
      <argument>Remove a secret from the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_remove"/>
    </service>
    <service id=".console.command.secrets_generate_key.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:generate-keys</argument>
      <argument type="collection"/>
      <argument>Generate new encryption keys</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_generate_key"/>
    </service>
    <service id=".console.command.secrets_list.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:list</argument>
      <argument type="collection"/>
      <argument>List all secrets</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_list"/>
    </service>
    <service id=".console.command.secrets_decrypt_to_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:decrypt-to-local</argument>
      <argument type="collection"/>
      <argument>Decrypt all secrets and stores them in the local vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_decrypt_to_local"/>
    </service>
    <service id=".console.command.secrets_encrypt_from_local.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>secrets:encrypt-from-local</argument>
      <argument type="collection"/>
      <argument>Encrypt all local secrets to the vault</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.secrets_encrypt_from_local"/>
    </service>
    <service id=".console.command.mailer_test.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>mailer:test</argument>
      <argument type="collection"/>
      <argument>Test Mailer transports by sending an email</argument>
      <argument>false</argument>
      <argument type="service_closure" id="console.command.mailer_test"/>
    </service>
    <service id=".twig.command.debug.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>debug:twig</argument>
      <argument type="collection"/>
      <argument>Show a list of twig functions, filters, globals and tests</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.debug"/>
    </service>
    <service id=".twig.command.lint.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>lint:twig</argument>
      <argument type="collection"/>
      <argument>Lint a Twig template and outputs encountered errors</argument>
      <argument>false</argument>
      <argument type="service_closure" id="twig.command.lint"/>
    </service>
    <service id=".var_dumper.command.server_dump.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>server:dump</argument>
      <argument type="collection"/>
      <argument>Start a dump server that collects and displays dumps in a single place</argument>
      <argument>false</argument>
      <argument type="service_closure" id="var_dumper.command.server_dump"/>
    </service>
    <service id=".monolog.command.server_log.lazy" class="Symfony\Component\Console\Command\LazyCommand">
      <argument>server:log</argument>
      <argument type="collection"/>
      <argument>Start a log server that displays logs in real time</argument>
      <argument>false</argument>
      <argument type="service_closure" id="monolog.command.server_log"/>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.MFSiPub"/>
      <argument type="collection">
        <argument key="database:create-migration">Shopware\Core\Framework\Migration\Command\CreateMigrationCommand</argument>
        <argument key="database:refresh-migration">Shopware\Core\Framework\Migration\Command\RefreshMigrationCommand</argument>
        <argument key="database:migrate">Shopware\Core\Framework\Migration\Command\MigrationCommand</argument>
        <argument key="database:clean-personal-data">Shopware\Core\Framework\Demodata\PersonalData\CleanPersonalDataCommand</argument>
        <argument key="database:migrate-destructive">Shopware\Core\Framework\Migration\Command\MigrationDestructiveCommand</argument>
        <argument key="changelog:create">Shopware\Core\Framework\Changelog\Command\ChangelogCreateCommand</argument>
        <argument key="changelog:release">Shopware\Core\Framework\Changelog\Command\ChangelogReleaseCommand</argument>
        <argument key="changelog:change">Shopware\Core\Framework\Changelog\Command\ChangelogChangeCommand</argument>
        <argument key="changelog:check">Shopware\Core\Framework\Changelog\Command\ChangelogCheckCommand</argument>
        <argument key="feature:dump">Shopware\Core\Framework\Feature\Command\FeatureDumpCommand</argument>
        <argument key="administration:dump:features">Shopware\Core\Framework\Feature\Command\FeatureDumpCommand</argument>
        <argument key="s3:set-visibility">Shopware\Core\Framework\Adapter\Command\S3FilesystemVisibilityCommand</argument>
        <argument key="framework:schema">Shopware\Core\Framework\Api\Command\DumpSchemaCommand</argument>
        <argument key="framework:dump:class:schema">Shopware\Core\Framework\Api\Command\DumpClassSchemaCommand</argument>
        <argument key="app:refresh">Shopware\Core\Framework\App\Command\RefreshAppCommand</argument>
        <argument key="app:update">Shopware\Core\Framework\App\Command\RefreshAppCommand</argument>
        <argument key="app:install">Shopware\Core\Framework\App\Command\InstallAppCommand</argument>
        <argument key="app:uninstall">Shopware\Core\Framework\App\Command\UninstallAppCommand</argument>
        <argument key="app:activate">Shopware\Core\Framework\App\Command\ActivateAppCommand</argument>
        <argument key="app:deactivate">Shopware\Core\Framework\App\Command\DeactivateAppCommand</argument>
        <argument key="app:create">Shopware\Core\Framework\App\Command\CreateAppCommand</argument>
        <argument key="app:validate">Shopware\Core\Framework\App\Command\ValidateAppCommand</argument>
        <argument key="app:url-change:resolve">Shopware\Core\Framework\App\Command\ResolveAppUrlChangeCommand</argument>
        <argument key="dal:create:schema">Shopware\Core\Framework\DataAbstractionLayer\Command\CreateSchemaCommand</argument>
        <argument key="dal:create:entities">Shopware\Core\Framework\DataAbstractionLayer\Command\CreateEntitiesCommand</argument>
        <argument key="dal:create:hydrators">Shopware\Core\Framework\DataAbstractionLayer\Command\CreateHydratorCommand</argument>
        <argument key="dal:refresh:index">Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand</argument>
        <argument key="dal:validate">Shopware\Core\Framework\DataAbstractionLayer\Command\DataAbstractionLayerValidateCommand</argument>
        <argument key="framework:demodata">Shopware\Core\Framework\Demodata\Command\DemodataCommand</argument>
        <argument key="debug:business-events">Shopware\Core\Framework\Event\Command\DebugDumpBusinessEventsCommand</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="bundle:dump">Shopware\Core\Framework\Plugin\Command\BundleDumpCommand</argument>
        <argument key="administration:dump:plugins">Shopware\Core\Framework\Plugin\Command\BundleDumpCommand</argument>
        <argument key="administration:dump:bundles">Shopware\Core\Framework\Plugin\Command\BundleDumpCommand</argument>
        <argument key="plugin:refresh">Shopware\Core\Framework\Plugin\Command\PluginRefreshCommand</argument>
        <argument key="plugin:list">Shopware\Core\Framework\Plugin\Command\PluginListCommand</argument>
        <argument key="plugin:zip-import">Shopware\Core\Framework\Plugin\Command\PluginZipImportCommand</argument>
        <argument key="plugin:install">Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginInstallCommand</argument>
        <argument key="plugin:activate">Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginActivateCommand</argument>
        <argument key="plugin:update">Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateCommand</argument>
        <argument key="plugin:deactivate">Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginDeactivateCommand</argument>
        <argument key="plugin:uninstall">Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUninstallCommand</argument>
        <argument key="plugin:update:all">Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateAllCommand</argument>
        <argument key="plugin:create">Shopware\Core\Framework\Plugin\Command\PluginCreateCommand</argument>
        <argument key="scheduled-task:register">Shopware\Core\Framework\MessageQueue\Command\RegisterScheduledTasksCommand</argument>
        <argument key="scheduled-task:run">Shopware\Core\Framework\MessageQueue\Command\ScheduledTaskRunner</argument>
        <argument key="scheduled-task:list">Shopware\Core\Framework\MessageQueue\Command\ListScheduledTaskCommand</argument>
        <argument key="scheduled-task:run-single">Shopware\Core\Framework\MessageQueue\Command\RunSingleScheduledTaskCommand</argument>
        <argument key="store:download">Shopware\Core\Framework\Store\Command\StoreDownloadCommand</argument>
        <argument key="store:login">Shopware\Core\Framework\Store\Command\StoreLoginCommand</argument>
        <argument key="snippets:validate">Shopware\Core\System\Snippet\Command\ValidateSnippetsCommand</argument>
        <argument key="state-machine:dump">Shopware\Core\System\StateMachine\Command\WorkflowDumpCommand</argument>
        <argument key="system:config:get">Shopware\Core\System\SystemConfig\Command\ConfigGet</argument>
        <argument key="system:config:set">Shopware\Core\System\SystemConfig\Command\ConfigSet</argument>
        <argument key="number-range:migrate">Shopware\Core\System\NumberRange\Command\MigrateIncrementStorageCommand</argument>
        <argument key="media:generate-thumbnails">Shopware\Core\Content\Media\Commands\GenerateThumbnailsCommand</argument>
        <argument key="media:generate-media-types">Shopware\Core\Content\Media\Commands\GenerateMediaTypesCommand</argument>
        <argument key="media:delete-unused">Shopware\Core\Content\Media\Commands\DeleteNotUsedMediaCommand</argument>
        <argument key="media:update-path">Shopware\Core\Content\Media\Infrastructure\Command\UpdatePathCommand</argument>
        <argument key="product-export:generate">Shopware\Core\Content\ProductExport\Command\ProductExportGenerateCommand</argument>
        <argument key="import-export:delete-expired">Shopware\Core\Content\ImportExport\Command\DeleteExpiredFilesCommand</argument>
        <argument key="import:entity">Shopware\Core\Content\ImportExport\Command\ImportEntityCommand</argument>
        <argument key="sitemap:generate">Shopware\Core\Content\Sitemap\Commands\SitemapGenerateCommand</argument>
        <argument key="cart:migrate">Shopware\Core\Checkout\Cart\Command\CartMigrateCommand</argument>
        <argument key="customer:delete-unused-guests">Shopware\Core\Checkout\Customer\Command\DeleteUnusedGuestCustomersCommand</argument>
        <argument key="system:install">Shopware\Core\Maintenance\System\Command\SystemInstallCommand</argument>
        <argument key="system:is-installed">Shopware\Core\Maintenance\System\Command\SystemIsInstalledCommand</argument>
        <argument key="system:generate-jwt-secret">Shopware\Core\Maintenance\System\Command\SystemGenerateJwtSecretCommand</argument>
        <argument key="system:generate-app-secret">Shopware\Core\Maintenance\System\Command\SystemGenerateAppSecretCommand</argument>
        <argument key="system:setup">Shopware\Core\Maintenance\System\Command\SystemSetupCommand</argument>
        <argument key="dotenv:dump">Symfony\Component\Dotenv\Command\DotenvDumpCommand</argument>
        <argument key="system:update:prepare">Shopware\Core\Maintenance\System\Command\SystemUpdatePrepareCommand</argument>
        <argument key="system:update:finish">Shopware\Core\Maintenance\System\Command\SystemUpdateFinishCommand</argument>
        <argument key="sales-channel:update:domain">Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelUpdateDomainCommand</argument>
        <argument key="system:configure-shop">Shopware\Core\Maintenance\System\Command\SystemConfigureShopCommand</argument>
        <argument key="sales-channel:create">Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelCreateCommand</argument>
        <argument key="sales-channel:list">Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelListCommand</argument>
        <argument key="sales-channel:maintenance:enable">Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceEnableCommand</argument>
        <argument key="sales-channel:maintenance:disable">Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceDisableCommand</argument>
        <argument key="user:create">Shopware\Core\Maintenance\User\Command\UserCreateCommand</argument>
        <argument key="user:change-password">Shopware\Core\Maintenance\User\Command\UserChangePasswordCommand</argument>
        <argument key="administration:delete-files-after-build">Shopware\Administration\Command\DeleteAdminFilesAfterBuildCommand</argument>
        <argument key="administration:delete-extension-local-public-files">Shopware\Administration\Command\DeleteExtensionLocalPublicFilesCommand</argument>
        <argument key="es:index">Shopware\Elasticsearch\Framework\Command\ElasticsearchIndexingCommand</argument>
        <argument key="es:test:analyzer">Shopware\Elasticsearch\Framework\Command\ElasticsearchTestAnalyzerCommand</argument>
        <argument key="es:status">Shopware\Elasticsearch\Framework\Command\ElasticsearchStatusCommand</argument>
        <argument key="es:reset">Shopware\Elasticsearch\Framework\Command\ElasticsearchResetCommand</argument>
        <argument key="es:mapping:update">Shopware\Elasticsearch\Framework\Command\ElasticsearchUpdateMappingCommand</argument>
        <argument key="es:create:alias">Shopware\Elasticsearch\Framework\Command\ElasticsearchCreateAliasCommand</argument>
        <argument key="es:index:cleanup">Shopware\Elasticsearch\Framework\Command\ElasticsearchCleanIndicesCommand</argument>
        <argument key="es:admin:index">Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminIndexingCommand</argument>
        <argument key="es:admin:reset">Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminResetCommand</argument>
        <argument key="es:admin:test">Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminTestCommand</argument>
        <argument key="es:admin:mapping:update">Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminUpdateMappingCommand</argument>
        <argument key="http:cache:warm:up">Shopware\Storefront\Framework\Command\HttpCacheWarmUpCommand</argument>
        <argument key="sales-channel:create:storefront">Shopware\Storefront\Framework\Command\SalesChannelCreateStorefrontCommand</argument>
        <argument key="theme:create">Shopware\Storefront\Theme\Command\ThemeCreateCommand</argument>
        <argument key="theme:change">Shopware\Storefront\Theme\Command\ThemeChangeCommand</argument>
        <argument key="theme:compile">Shopware\Storefront\Theme\Command\ThemeCompileCommand</argument>
        <argument key="theme:dump">Shopware\Storefront\Theme\Command\ThemeDumpCommand</argument>
        <argument key="theme:refresh">Shopware\Storefront\Theme\Command\ThemeRefreshCommand</argument>
        <argument key="theme:prepare-icons">Shopware\Storefront\Theme\Command\ThemePrepareIconsCommand</argument>
        <argument key="about">console.command.about</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:invalidate-tags">console.command.cache_pool_invalidate_tags</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:dotenv">console.command.dotenv_debug</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="messenger:consume">console.command.messenger_consume_messages</argument>
        <argument key="messenger:setup-transports">console.command.messenger_setup_transports</argument>
        <argument key="debug:messenger">console.command.messenger_debug</argument>
        <argument key="messenger:stop-workers">console.command.messenger_stop_workers</argument>
        <argument key="messenger:failed:retry">console.command.messenger_failed_messages_retry</argument>
        <argument key="messenger:failed:show">console.command.messenger_failed_messages_show</argument>
        <argument key="messenger:failed:remove">console.command.messenger_failed_messages_remove</argument>
        <argument key="messenger:stats">console.command.messenger_stats</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:serializer">console.command.serializer_debug</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:extract">console.command.translation_extract</argument>
        <argument key="debug:validator">console.command.validator_debug</argument>
        <argument key="translation:pull">console.command.translation_pull</argument>
        <argument key="translation:push">console.command.translation_push</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="mailer:test">console.command.mailer_test</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="server:dump">var_dumper.command.server_dump</argument>
        <argument key="server:log">monolog.command.server_log</argument>
      </argument>
    </service>
    <service id=".service_locator.MFSiPub" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Shopware\Core\Framework\Migration\Command\CreateMigrationCommand" type="service_closure" id=".Shopware\Core\Framework\Migration\Command\CreateMigrationCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Migration\Command\RefreshMigrationCommand" type="service_closure" id=".Shopware\Core\Framework\Migration\Command\RefreshMigrationCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Migration\Command\MigrationCommand" type="service_closure" id=".Shopware\Core\Framework\Migration\Command\MigrationCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Demodata\PersonalData\CleanPersonalDataCommand" type="service_closure" id=".Shopware\Core\Framework\Demodata\PersonalData\CleanPersonalDataCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Migration\Command\MigrationDestructiveCommand" type="service_closure" id=".Shopware\Core\Framework\Migration\Command\MigrationDestructiveCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Changelog\Command\ChangelogCreateCommand" type="service_closure" id=".Shopware\Core\Framework\Changelog\Command\ChangelogCreateCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Changelog\Command\ChangelogReleaseCommand" type="service_closure" id=".Shopware\Core\Framework\Changelog\Command\ChangelogReleaseCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Changelog\Command\ChangelogChangeCommand" type="service_closure" id=".Shopware\Core\Framework\Changelog\Command\ChangelogChangeCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Changelog\Command\ChangelogCheckCommand" type="service_closure" id=".Shopware\Core\Framework\Changelog\Command\ChangelogCheckCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Feature\Command\FeatureDumpCommand" type="service_closure" id=".Shopware\Core\Framework\Feature\Command\FeatureDumpCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Adapter\Command\S3FilesystemVisibilityCommand" type="service_closure" id=".Shopware\Core\Framework\Adapter\Command\S3FilesystemVisibilityCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Api\Command\DumpSchemaCommand" type="service_closure" id=".Shopware\Core\Framework\Api\Command\DumpSchemaCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Api\Command\DumpClassSchemaCommand" type="service_closure" id=".Shopware\Core\Framework\Api\Command\DumpClassSchemaCommand.lazy"/>
        <argument key="Shopware\Core\Framework\App\Command\RefreshAppCommand" type="service_closure" id=".Shopware\Core\Framework\App\Command\RefreshAppCommand.lazy"/>
        <argument key="Shopware\Core\Framework\App\Command\InstallAppCommand" type="service_closure" id=".Shopware\Core\Framework\App\Command\InstallAppCommand.lazy"/>
        <argument key="Shopware\Core\Framework\App\Command\UninstallAppCommand" type="service_closure" id=".Shopware\Core\Framework\App\Command\UninstallAppCommand.lazy"/>
        <argument key="Shopware\Core\Framework\App\Command\ActivateAppCommand" type="service_closure" id=".Shopware\Core\Framework\App\Command\ActivateAppCommand.lazy"/>
        <argument key="Shopware\Core\Framework\App\Command\DeactivateAppCommand" type="service_closure" id=".Shopware\Core\Framework\App\Command\DeactivateAppCommand.lazy"/>
        <argument key="Shopware\Core\Framework\App\Command\CreateAppCommand" type="service_closure" id=".Shopware\Core\Framework\App\Command\CreateAppCommand.lazy"/>
        <argument key="Shopware\Core\Framework\App\Command\ValidateAppCommand" type="service_closure" id=".Shopware\Core\Framework\App\Command\ValidateAppCommand.lazy"/>
        <argument key="Shopware\Core\Framework\App\Command\ResolveAppUrlChangeCommand" type="service_closure" id=".Shopware\Core\Framework\App\Command\ResolveAppUrlChangeCommand.lazy"/>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateSchemaCommand" type="service_closure" id=".Shopware\Core\Framework\DataAbstractionLayer\Command\CreateSchemaCommand.lazy"/>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateEntitiesCommand" type="service_closure" id=".Shopware\Core\Framework\DataAbstractionLayer\Command\CreateEntitiesCommand.lazy"/>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Command\CreateHydratorCommand" type="service_closure" id=".Shopware\Core\Framework\DataAbstractionLayer\Command\CreateHydratorCommand.lazy"/>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand" type="service_closure" id=".Shopware\Core\Framework\DataAbstractionLayer\Command\RefreshIndexCommand.lazy"/>
        <argument key="Shopware\Core\Framework\DataAbstractionLayer\Command\DataAbstractionLayerValidateCommand" type="service_closure" id=".Shopware\Core\Framework\DataAbstractionLayer\Command\DataAbstractionLayerValidateCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Demodata\Command\DemodataCommand" type="service_closure" id=".Shopware\Core\Framework\Demodata\Command\DemodataCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Event\Command\DebugDumpBusinessEventsCommand" type="service_closure" id=".Shopware\Core\Framework\Event\Command\DebugDumpBusinessEventsCommand.lazy"/>
        <argument key="console.command.assets_install" type="service_closure" id=".console.command.assets_install.lazy"/>
        <argument key="Shopware\Core\Framework\Plugin\Command\BundleDumpCommand" type="service_closure" id=".Shopware\Core\Framework\Plugin\Command\BundleDumpCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Plugin\Command\PluginRefreshCommand" type="service_closure" id=".Shopware\Core\Framework\Plugin\Command\PluginRefreshCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Plugin\Command\PluginListCommand" type="service_closure" id=".Shopware\Core\Framework\Plugin\Command\PluginListCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Plugin\Command\PluginZipImportCommand" type="service_closure" id=".Shopware\Core\Framework\Plugin\Command\PluginZipImportCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginInstallCommand" type="service_closure" id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginInstallCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginActivateCommand" type="service_closure" id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginActivateCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateCommand" type="service_closure" id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginDeactivateCommand" type="service_closure" id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginDeactivateCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUninstallCommand" type="service_closure" id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUninstallCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateAllCommand" type="service_closure" id=".Shopware\Core\Framework\Plugin\Command\Lifecycle\PluginUpdateAllCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Plugin\Command\PluginCreateCommand" type="service_closure" id=".Shopware\Core\Framework\Plugin\Command\PluginCreateCommand.lazy"/>
        <argument key="Shopware\Core\Framework\MessageQueue\Command\RegisterScheduledTasksCommand" type="service_closure" id=".Shopware\Core\Framework\MessageQueue\Command\RegisterScheduledTasksCommand.lazy"/>
        <argument key="Shopware\Core\Framework\MessageQueue\Command\ScheduledTaskRunner" type="service_closure" id=".Shopware\Core\Framework\MessageQueue\Command\ScheduledTaskRunner.lazy"/>
        <argument key="Shopware\Core\Framework\MessageQueue\Command\ListScheduledTaskCommand" type="service_closure" id=".Shopware\Core\Framework\MessageQueue\Command\ListScheduledTaskCommand.lazy"/>
        <argument key="Shopware\Core\Framework\MessageQueue\Command\RunSingleScheduledTaskCommand" type="service_closure" id=".Shopware\Core\Framework\MessageQueue\Command\RunSingleScheduledTaskCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Store\Command\StoreDownloadCommand" type="service_closure" id=".Shopware\Core\Framework\Store\Command\StoreDownloadCommand.lazy"/>
        <argument key="Shopware\Core\Framework\Store\Command\StoreLoginCommand" type="service_closure" id=".Shopware\Core\Framework\Store\Command\StoreLoginCommand.lazy"/>
        <argument key="Shopware\Core\System\Snippet\Command\ValidateSnippetsCommand" type="service_closure" id=".Shopware\Core\System\Snippet\Command\ValidateSnippetsCommand.lazy"/>
        <argument key="Shopware\Core\System\StateMachine\Command\WorkflowDumpCommand" type="service_closure" id=".Shopware\Core\System\StateMachine\Command\WorkflowDumpCommand.lazy"/>
        <argument key="Shopware\Core\System\SystemConfig\Command\ConfigGet" type="service_closure" id=".Shopware\Core\System\SystemConfig\Command\ConfigGet.lazy"/>
        <argument key="Shopware\Core\System\SystemConfig\Command\ConfigSet" type="service_closure" id=".Shopware\Core\System\SystemConfig\Command\ConfigSet.lazy"/>
        <argument key="Shopware\Core\System\NumberRange\Command\MigrateIncrementStorageCommand" type="service_closure" id=".Shopware\Core\System\NumberRange\Command\MigrateIncrementStorageCommand.lazy"/>
        <argument key="Shopware\Core\Content\Media\Commands\GenerateThumbnailsCommand" type="service_closure" id=".Shopware\Core\Content\Media\Commands\GenerateThumbnailsCommand.lazy"/>
        <argument key="Shopware\Core\Content\Media\Commands\GenerateMediaTypesCommand" type="service_closure" id=".Shopware\Core\Content\Media\Commands\GenerateMediaTypesCommand.lazy"/>
        <argument key="Shopware\Core\Content\Media\Commands\DeleteNotUsedMediaCommand" type="service_closure" id=".Shopware\Core\Content\Media\Commands\DeleteNotUsedMediaCommand.lazy"/>
        <argument key="Shopware\Core\Content\Media\Infrastructure\Command\UpdatePathCommand" type="service_closure" id=".Shopware\Core\Content\Media\Infrastructure\Command\UpdatePathCommand.lazy"/>
        <argument key="Shopware\Core\Content\ProductExport\Command\ProductExportGenerateCommand" type="service_closure" id=".Shopware\Core\Content\ProductExport\Command\ProductExportGenerateCommand.lazy"/>
        <argument key="Shopware\Core\Content\ImportExport\Command\DeleteExpiredFilesCommand" type="service_closure" id=".Shopware\Core\Content\ImportExport\Command\DeleteExpiredFilesCommand.lazy"/>
        <argument key="Shopware\Core\Content\ImportExport\Command\ImportEntityCommand" type="service_closure" id=".Shopware\Core\Content\ImportExport\Command\ImportEntityCommand.lazy"/>
        <argument key="Shopware\Core\Content\Sitemap\Commands\SitemapGenerateCommand" type="service_closure" id=".Shopware\Core\Content\Sitemap\Commands\SitemapGenerateCommand.lazy"/>
        <argument key="Shopware\Core\Checkout\Cart\Command\CartMigrateCommand" type="service_closure" id=".Shopware\Core\Checkout\Cart\Command\CartMigrateCommand.lazy"/>
        <argument key="Shopware\Core\Checkout\Customer\Command\DeleteUnusedGuestCustomersCommand" type="service_closure" id=".Shopware\Core\Checkout\Customer\Command\DeleteUnusedGuestCustomersCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\System\Command\SystemInstallCommand" type="service_closure" id=".Shopware\Core\Maintenance\System\Command\SystemInstallCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\System\Command\SystemIsInstalledCommand" type="service_closure" id=".Shopware\Core\Maintenance\System\Command\SystemIsInstalledCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\System\Command\SystemGenerateJwtSecretCommand" type="service_closure" id=".Shopware\Core\Maintenance\System\Command\SystemGenerateJwtSecretCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\System\Command\SystemGenerateAppSecretCommand" type="service_closure" id=".Shopware\Core\Maintenance\System\Command\SystemGenerateAppSecretCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\System\Command\SystemSetupCommand" type="service_closure" id=".Shopware\Core\Maintenance\System\Command\SystemSetupCommand.lazy"/>
        <argument key="Symfony\Component\Dotenv\Command\DotenvDumpCommand" type="service_closure" id=".Symfony\Component\Dotenv\Command\DotenvDumpCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\System\Command\SystemUpdatePrepareCommand" type="service_closure" id=".Shopware\Core\Maintenance\System\Command\SystemUpdatePrepareCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\System\Command\SystemUpdateFinishCommand" type="service_closure" id=".Shopware\Core\Maintenance\System\Command\SystemUpdateFinishCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelUpdateDomainCommand" type="service_closure" id=".Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelUpdateDomainCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\System\Command\SystemConfigureShopCommand" type="service_closure" id=".Shopware\Core\Maintenance\System\Command\SystemConfigureShopCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelCreateCommand" type="service_closure" id=".Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelCreateCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelListCommand" type="service_closure" id=".Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelListCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceEnableCommand" type="service_closure" id=".Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceEnableCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceDisableCommand" type="service_closure" id=".Shopware\Core\Maintenance\SalesChannel\Command\SalesChannelMaintenanceDisableCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\User\Command\UserCreateCommand" type="service_closure" id=".Shopware\Core\Maintenance\User\Command\UserCreateCommand.lazy"/>
        <argument key="Shopware\Core\Maintenance\User\Command\UserChangePasswordCommand" type="service_closure" id=".Shopware\Core\Maintenance\User\Command\UserChangePasswordCommand.lazy"/>
        <argument key="Shopware\Administration\Command\DeleteAdminFilesAfterBuildCommand" type="service_closure" id=".Shopware\Administration\Command\DeleteAdminFilesAfterBuildCommand.lazy"/>
        <argument key="Shopware\Administration\Command\DeleteExtensionLocalPublicFilesCommand" type="service_closure" id=".Shopware\Administration\Command\DeleteExtensionLocalPublicFilesCommand.lazy"/>
        <argument key="Shopware\Elasticsearch\Framework\Command\ElasticsearchIndexingCommand" type="service_closure" id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchIndexingCommand.lazy"/>
        <argument key="Shopware\Elasticsearch\Framework\Command\ElasticsearchTestAnalyzerCommand" type="service_closure" id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchTestAnalyzerCommand.lazy"/>
        <argument key="Shopware\Elasticsearch\Framework\Command\ElasticsearchStatusCommand" type="service_closure" id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchStatusCommand.lazy"/>
        <argument key="Shopware\Elasticsearch\Framework\Command\ElasticsearchResetCommand" type="service_closure" id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchResetCommand.lazy"/>
        <argument key="Shopware\Elasticsearch\Framework\Command\ElasticsearchUpdateMappingCommand" type="service_closure" id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchUpdateMappingCommand.lazy"/>
        <argument key="Shopware\Elasticsearch\Framework\Command\ElasticsearchCreateAliasCommand" type="service_closure" id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchCreateAliasCommand.lazy"/>
        <argument key="Shopware\Elasticsearch\Framework\Command\ElasticsearchCleanIndicesCommand" type="service_closure" id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchCleanIndicesCommand.lazy"/>
        <argument key="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminIndexingCommand" type="service_closure" id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminIndexingCommand.lazy"/>
        <argument key="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminResetCommand" type="service_closure" id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminResetCommand.lazy"/>
        <argument key="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminTestCommand" type="service_closure" id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminTestCommand.lazy"/>
        <argument key="Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminUpdateMappingCommand" type="service_closure" id=".Shopware\Elasticsearch\Framework\Command\ElasticsearchAdminUpdateMappingCommand.lazy"/>
        <argument key="Shopware\Storefront\Framework\Command\HttpCacheWarmUpCommand" type="service_closure" id=".Shopware\Storefront\Framework\Command\HttpCacheWarmUpCommand.lazy"/>
        <argument key="Shopware\Storefront\Framework\Command\SalesChannelCreateStorefrontCommand" type="service_closure" id=".Shopware\Storefront\Framework\Command\SalesChannelCreateStorefrontCommand.lazy"/>
        <argument key="Shopware\Storefront\Theme\Command\ThemeCreateCommand" type="service_closure" id=".Shopware\Storefront\Theme\Command\ThemeCreateCommand.lazy"/>
        <argument key="Shopware\Storefront\Theme\Command\ThemeChangeCommand" type="service_closure" id=".Shopware\Storefront\Theme\Command\ThemeChangeCommand.lazy"/>
        <argument key="Shopware\Storefront\Theme\Command\ThemeCompileCommand" type="service_closure" id=".Shopware\Storefront\Theme\Command\ThemeCompileCommand.lazy"/>
        <argument key="Shopware\Storefront\Theme\Command\ThemeDumpCommand" type="service_closure" id=".Shopware\Storefront\Theme\Command\ThemeDumpCommand.lazy"/>
        <argument key="Shopware\Storefront\Theme\Command\ThemeRefreshCommand" type="service_closure" id=".Shopware\Storefront\Theme\Command\ThemeRefreshCommand.lazy"/>
        <argument key="Shopware\Storefront\Theme\Command\ThemePrepareIconsCommand" type="service_closure" id=".Shopware\Storefront\Theme\Command\ThemePrepareIconsCommand.lazy"/>
        <argument key="console.command.about" type="service_closure" id=".console.command.about.lazy"/>
        <argument key="console.command.cache_clear" type="service_closure" id=".console.command.cache_clear.lazy"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id=".console.command.cache_pool_clear.lazy"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id=".console.command.cache_pool_prune.lazy"/>
        <argument key="console.command.cache_pool_invalidate_tags" type="service_closure" id=".console.command.cache_pool_invalidate_tags.lazy"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id=".console.command.cache_pool_delete.lazy"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id=".console.command.cache_pool_list.lazy"/>
        <argument key="console.command.cache_warmup" type="service_closure" id=".console.command.cache_warmup.lazy"/>
        <argument key="console.command.config_debug" type="service_closure" id=".console.command.config_debug.lazy"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id=".console.command.config_dump_reference.lazy"/>
        <argument key="console.command.container_debug" type="service_closure" id=".console.command.container_debug.lazy"/>
        <argument key="console.command.container_lint" type="service_closure" id=".console.command.container_lint.lazy"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id=".console.command.debug_autowiring.lazy"/>
        <argument key="console.command.dotenv_debug" type="service_closure" id=".console.command.dotenv_debug.lazy"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id=".console.command.event_dispatcher_debug.lazy"/>
        <argument key="console.command.messenger_consume_messages" type="service_closure" id=".console.command.messenger_consume_messages.lazy"/>
        <argument key="console.command.messenger_setup_transports" type="service_closure" id=".console.command.messenger_setup_transports.lazy"/>
        <argument key="console.command.messenger_debug" type="service_closure" id=".console.command.messenger_debug.lazy"/>
        <argument key="console.command.messenger_stop_workers" type="service_closure" id=".console.command.messenger_stop_workers.lazy"/>
        <argument key="console.command.messenger_failed_messages_retry" type="service_closure" id=".console.command.messenger_failed_messages_retry.lazy"/>
        <argument key="console.command.messenger_failed_messages_show" type="service_closure" id=".console.command.messenger_failed_messages_show.lazy"/>
        <argument key="console.command.messenger_failed_messages_remove" type="service_closure" id=".console.command.messenger_failed_messages_remove.lazy"/>
        <argument key="console.command.messenger_stats" type="service_closure" id=".console.command.messenger_stats.lazy"/>
        <argument key="console.command.router_debug" type="service_closure" id=".console.command.router_debug.lazy"/>
        <argument key="console.command.router_match" type="service_closure" id=".console.command.router_match.lazy"/>
        <argument key="console.command.serializer_debug" type="service_closure" id=".console.command.serializer_debug.lazy"/>
        <argument key="console.command.translation_debug" type="service_closure" id=".console.command.translation_debug.lazy"/>
        <argument key="console.command.translation_extract" type="service_closure" id=".console.command.translation_extract.lazy"/>
        <argument key="console.command.validator_debug" type="service_closure" id=".console.command.validator_debug.lazy"/>
        <argument key="console.command.translation_pull" type="service_closure" id=".console.command.translation_pull.lazy"/>
        <argument key="console.command.translation_push" type="service_closure" id=".console.command.translation_push.lazy"/>
        <argument key="console.command.xliff_lint" type="service_closure" id=".console.command.xliff_lint.lazy"/>
        <argument key="console.command.yaml_lint" type="service_closure" id=".console.command.yaml_lint.lazy"/>
        <argument key="console.command.secrets_set" type="service_closure" id=".console.command.secrets_set.lazy"/>
        <argument key="console.command.secrets_remove" type="service_closure" id=".console.command.secrets_remove.lazy"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id=".console.command.secrets_generate_key.lazy"/>
        <argument key="console.command.secrets_list" type="service_closure" id=".console.command.secrets_list.lazy"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id=".console.command.secrets_decrypt_to_local.lazy"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id=".console.command.secrets_encrypt_from_local.lazy"/>
        <argument key="console.command.mailer_test" type="service_closure" id=".console.command.mailer_test.lazy"/>
        <argument key="twig.command.debug" type="service_closure" id=".twig.command.debug.lazy"/>
        <argument key="twig.command.lint" type="service_closure" id=".twig.command.lint.lazy"/>
        <argument key="var_dumper.command.server_dump" type="service_closure" id=".var_dumper.command.server_dump.lazy"/>
        <argument key="monolog.command.server_log" type="service_closure" id=".monolog.command.server_log.lazy"/>
      </argument>
    </service>
    <service id=".service_locator.m_eDlXT" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service_closure" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Bridge\Twig\Extension\SerializerRuntime" type="service_closure" id="twig.runtime.serializer"/>
      </argument>
    </service>
    <service id="League\Flysystem\FilesystemOperator $frameworkPrivateFilesystem" alias="framework.filesystem.private"/>
    <service id="League\Flysystem\FilesystemOperator $frameworkPublicFilesystem" alias="framework.filesystem.public"/>
    <service id="League\Flysystem\FilesystemOperator $systemPrivateFilesystem" alias="system.filesystem.private"/>
    <service id="League\Flysystem\FilesystemOperator $systemPublicFilesystem" alias="system.filesystem.public"/>
    <service id="League\Flysystem\FilesystemOperator $contentPrivateFilesystem" alias="content.filesystem.private"/>
    <service id="League\Flysystem\FilesystemOperator $contentPublicFilesystem" alias="content.filesystem.public"/>
    <service id="core_mailer" alias="mailer.mailer"/>
    <service id="League\Flysystem\FilesystemOperator $checkoutPrivateFilesystem" alias="checkout.filesystem.private"/>
    <service id="League\Flysystem\FilesystemOperator $checkoutPublicFilesystem" alias="checkout.filesystem.public"/>
    <service id="League\Flysystem\FilesystemOperator $maintenancePrivateFilesystem" alias="maintenance.filesystem.private"/>
    <service id="League\Flysystem\FilesystemOperator $maintenancePublicFilesystem" alias="maintenance.filesystem.public"/>
    <service id="League\Flysystem\FilesystemOperator $profilingPrivateFilesystem" alias="profiling.filesystem.private"/>
    <service id="League\Flysystem\FilesystemOperator $profilingPublicFilesystem" alias="profiling.filesystem.public"/>
    <service id="League\Flysystem\FilesystemOperator $administrationPrivateFilesystem" alias="administration.filesystem.private"/>
    <service id="League\Flysystem\FilesystemOperator $administrationPublicFilesystem" alias="administration.filesystem.public"/>
    <service id="shopware.elasticsearch.logger" alias="monolog.logger.elasticsearch"/>
    <service id="League\Flysystem\FilesystemOperator $elasticsearchPrivateFilesystem" alias="elasticsearch.filesystem.private"/>
    <service id="League\Flysystem\FilesystemOperator $elasticsearchPublicFilesystem" alias="elasticsearch.filesystem.public"/>
    <service id="League\Flysystem\FilesystemOperator $storefrontPrivateFilesystem" alias="storefront.filesystem.private"/>
    <service id="League\Flysystem\FilesystemOperator $storefrontPublicFilesystem" alias="storefront.filesystem.public"/>
    <service id="Psr\Http\Message\RequestFactoryInterface" alias="nyholm.psr7.psr17_factory"/>
    <service id="Psr\Http\Message\ResponseFactoryInterface" alias="nyholm.psr7.psr17_factory"/>
    <service id="Psr\Http\Message\ServerRequestFactoryInterface" alias="nyholm.psr7.psr17_factory"/>
    <service id="Psr\Http\Message\StreamFactoryInterface" alias="nyholm.psr7.psr17_factory"/>
    <service id="Psr\Http\Message\UploadedFileFactoryInterface" alias="nyholm.psr7.psr17_factory"/>
    <service id="Psr\Http\Message\UriFactoryInterface" alias="nyholm.psr7.psr17_factory"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack"/>
    <service id="Symfony\Component\HttpKernel\HttpCache\StoreInterface" alias="http_cache.store"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator"/>
    <service id="Symfony\Component\HttpKernel\UriSigner" alias="uri_signer"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger"/>
    <service id="Symfony\Component\Clock\ClockInterface" alias="clock"/>
    <service id="Psr\Clock\ClockInterface" alias="clock"/>
    <service id="Symfony\Component\HttpKernel\Fragment\FragmentUriGeneratorInterface" alias="fragment.uri_generator"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="Shopware\Core\Framework\Adapter\Translation\Translator"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias="http_client.uri_template"/>
    <service id="Psr\Http\Client\ClientInterface" alias="psr18.http_client"/>
    <service id="http_client.uri_template_expander" alias="http_client.uri_template_expander.rize"/>
    <service id="mailer" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\MailerInterface" alias="mailer.mailer"/>
    <service id="Symfony\Component\Mailer\Transport\TransportInterface" alias="mailer.default_transport"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer"/>
    <service id="Symfony\Contracts\Translation\LocaleAwareInterface" alias="translation.locale_switcher"/>
    <service id="Symfony\Component\Translation\LocaleSwitcher" alias="translation.locale_switcher"/>
    <service id="translator" alias="Shopware\Core\Framework\Adapter\Translation\Translator" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch"/>
    <service id="router" alias="Shopware\Storefront\Framework\Routing\Router" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="Shopware\Storefront\Framework\Routing\Router"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="Shopware\Storefront\Framework\Routing\Router"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="Shopware\Storefront\Framework\Routing\Router"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="Shopware\Storefront\Framework\Routing\Router"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer"/>
    <service id="serializer.property_accessor" alias="property_accessor"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object">
      <deprecated package="symfony/serializer" version="6.2">The "%alias_id%" service alias is deprecated, type-hint against "Symfony\Component\Serializer\Normalizer\NormalizerInterface" or implement "Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Serializer\Normalizer\PropertyNormalizer" alias="serializer.normalizer.property">
      <deprecated package="symfony/serializer" version="6.2">The "%alias_id%" service alias is deprecated, type-hint against "Symfony\Component\Serializer\Normalizer\NormalizerInterface" or implement "Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface" instead.</deprecated>
    </service>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor"/>
    <service id="lock.factory" alias="lock.default.factory"/>
    <service id="Symfony\Component\Lock\LockFactory" alias="lock.default.factory"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX"/>
    <service id="cache.default_doctrine_dbal_provider" alias="database_connection"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface $cacheObject" alias="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    <service id="Symfony\Contracts\Cache\CacheInterface $cacheObject" alias=".cache.object.inner"/>
    <service id="Psr\Cache\CacheItemPoolInterface $cacheObject" alias=".cache.object.inner"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface $cacheHttp" alias="cache.http"/>
    <service id="Symfony\Contracts\Cache\CacheInterface $cacheHttp" alias=".cache.http.inner"/>
    <service id="Psr\Cache\CacheItemPoolInterface $cacheHttp" alias=".cache.http.inner"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface $cacheTags" alias=".cache.tags.taggable"/>
    <service id="Symfony\Contracts\Cache\CacheInterface $cacheTags" alias="cache.tags"/>
    <service id="Psr\Cache\CacheItemPoolInterface $cacheTags" alias="cache.tags"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface $cacheRateLimiter" alias=".cache.rate_limiter.taggable"/>
    <service id="Symfony\Contracts\Cache\CacheInterface $cacheRateLimiter" alias="cache.rate_limiter"/>
    <service id="Psr\Cache\CacheItemPoolInterface $cacheRateLimiter" alias="cache.rate_limiter"/>
    <service id="SessionHandlerInterface" alias="session.handler.native"/>
    <service id="session.storage.factory" alias="session.storage.factory.native"/>
    <service id="session.handler" alias="session.handler.native"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="Shopware\Core\Framework\Validation\HappyPathValidator"/>
    <service id="validator.mapping.class_metadata_factory" alias="Shopware\Core\Framework\Validation\HappyPathValidator"/>
    <service id="Symfony\Component\Messenger\Transport\Serialization\SerializerInterface" alias="messenger.transport.symfony_serializer"/>
    <service id="messenger.default_serializer" alias="messenger.transport.symfony_serializer"/>
    <service id="messenger.listener.stop_worker_on_sigterm_signal_listener" alias="messenger.listener.stop_worker_signals_listener">
      <deprecated package="6.3" version="symfony/messenger">The "%alias_id%" service is deprecated, use "messenger.listener.stop_worker_signals_listener" instead.</deprecated>
    </service>
    <service id="messenger.default_bus" alias="messenger.bus.shopware" public="true"/>
    <service id="Symfony\Component\Messenger\MessageBusInterface" alias="messenger.bus.default"/>
    <service id="messenger.failure_transports.default" alias="messenger.transport.failed"/>
    <service id="Symfony\Component\Mime\MimeTypesInterface" alias="mime_types"/>
    <service id="Symfony\Component\Mime\MimeTypeGuesserInterface" alias="mime_types"/>
    <service id="Twig_Environment" alias="twig">
      <deprecated package="symfony/twig-bundle" version="6.3">The "%alias_id%" service alias is deprecated, use "Twig\Environment" or "twig" instead.</deprecated>
    </service>
    <service id="Twig\Environment" alias="twig"/>
    <service id="Symfony\Component\Mime\BodyRendererInterface" alias="twig.mime_body_renderer"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger"/>
    <service id="monolog.handler.business_event_handler" alias="Shopware\Core\Framework\Log\Monolog\DoctrineSQLHandler"/>
    <service id="Shopware\Storefront\Theme\AbstractThemePathBuilder" alias="Shopware\Storefront\Theme\SeedingThemePathBuilder"/>
    <service id="Shopware\Storefront\Theme\ConfigLoader\AbstractConfigLoader" alias="Shopware\Storefront\Theme\ConfigLoader\DatabaseConfigLoader"/>
    <service id="Shopware\Storefront\Theme\ConfigLoader\AbstractAvailableThemeProvider" alias="Shopware\Storefront\Theme\ConfigLoader\DatabaseAvailableThemeProvider"/>
    <service id="League\Flysystem\FilesystemOperator $privateFilesystem" alias="shopware.filesystem.private"/>
    <service id="League\Flysystem\FilesystemOperator $publicFilesystem" alias="shopware.filesystem.public"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.7nzbL4K" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.4a.A3U6"/>
    <service id="twig.loader" alias="twig.loader.chain"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $messengerLogger" alias="monolog.logger.messenger"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $httpClientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $mailerLogger" alias="monolog.logger.mailer"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $lockLogger" alias="monolog.logger.lock"/>
    <service id="Psr\Log\LoggerInterface $debugLogger" alias="monolog.logger.debug"/>
    <service id="Psr\Log\LoggerInterface $businessEventsLogger" alias="monolog.logger.business_events"/>
    <service id="Psr\Log\LoggerInterface $elasticsearchLogger" alias="monolog.logger.elasticsearch"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $logEntryRepository" alias="log_entry.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $aclRoleRepository" alias="acl_role.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $aclUserRoleRepository" alias="acl_user_role.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appRepository" alias="app.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appTranslationRepository" alias="app_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appActionButtonRepository" alias="app_action_button.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appActionButtonTranslationRepository" alias="app_action_button_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appTemplateRepository" alias="app_template.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appPaymentMethodRepository" alias="app_payment_method.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appScriptConditionRepository" alias="app_script_condition.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appScriptConditionTranslationRepository" alias="app_script_condition_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appCmsBlockRepository" alias="app_cms_block.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appCmsBlockTranslationRepository" alias="app_cms_block_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appFlowActionRepository" alias="app_flow_action.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appFlowActionTranslationRepository" alias="app_flow_action_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appFlowEventRepository" alias="app_flow_event.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appShippingMethodRepository" alias="app_shipping_method.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customFieldRepository" alias="custom_field.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customFieldSetRepository" alias="custom_field_set.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customFieldSetRelationRepository" alias="custom_field_set_relation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $versionRepository" alias="version.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $versionCommitRepository" alias="version_commit.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $versionCommitDataRepository" alias="version_commit_data.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $pluginRepository" alias="plugin.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $pluginTranslationRepository" alias="plugin_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $scheduledTaskRepository" alias="scheduled_task.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $scriptRepository" alias="script.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $languageRepository" alias="language.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $seoUrlRepository" alias="seo_url.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $seoUrlTemplateRepository" alias="seo_url_template.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mainCategoryRepository" alias="main_category.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $webhookRepository" alias="webhook.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $webhookEventLogRepository" alias="webhook_event_log.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salesChannelRepository" alias="sales_channel.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salesChannelTranslationRepository" alias="sales_channel_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salesChannelCountryRepository" alias="sales_channel_country.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salesChannelCurrencyRepository" alias="sales_channel_currency.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salesChannelDomainRepository" alias="sales_channel_domain.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salesChannelLanguageRepository" alias="sales_channel_language.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salesChannelPaymentMethodRepository" alias="sales_channel_payment_method.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salesChannelShippingMethodRepository" alias="sales_channel_shipping_method.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salesChannelTypeRepository" alias="sales_channel_type.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salesChannelTypeTranslationRepository" alias="sales_channel_type_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salesChannelAnalyticsRepository" alias="sales_channel_analytics.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $countryRepository" alias="country.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $countryStateRepository" alias="country_state.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $countryStateTranslationRepository" alias="country_state_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $countryTranslationRepository" alias="country_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $currencyRepository" alias="currency.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $currencyCountryRoundingRepository" alias="currency_country_rounding.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $currencyTranslationRepository" alias="currency_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customEntityRepository" alias="custom_entity.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $localeRepository" alias="locale.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $localeTranslationRepository" alias="locale_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $snippetSetRepository" alias="snippet_set.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $snippetRepository" alias="snippet.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salutationRepository" alias="salutation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $salutationTranslationRepository" alias="salutation_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $taxRepository" alias="tax.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $taxRuleRepository" alias="tax_rule.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $taxRuleTypeRepository" alias="tax_rule_type.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $taxRuleTypeTranslationRepository" alias="tax_rule_type_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $taxProviderRepository" alias="tax_provider.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $taxProviderTranslationRepository" alias="tax_provider_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $unitRepository" alias="unit.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $unitTranslationRepository" alias="unit_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $userRepository" alias="user.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $userConfigRepository" alias="user_config.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $userAccessKeyRepository" alias="user_access_key.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $userRecoveryRepository" alias="user_recovery.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $integrationRepository" alias="integration.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $integrationRoleRepository" alias="integration_role.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $stateMachineRepository" alias="state_machine.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $stateMachineTranslationRepository" alias="state_machine_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $stateMachineStateRepository" alias="state_machine_state.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $stateMachineStateTranslationRepository" alias="state_machine_state_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $stateMachineTransitionRepository" alias="state_machine_transition.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $stateMachineHistoryRepository" alias="state_machine_history.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $systemConfigRepository" alias="system_config.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $numberRangeRepository" alias="number_range.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $numberRangeSalesChannelRepository" alias="number_range_sales_channel.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $numberRangeStateRepository" alias="number_range_state.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $numberRangeTypeRepository" alias="number_range_type.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $numberRangeTypeTranslationRepository" alias="number_range_type_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $numberRangeTranslationRepository" alias="number_range_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $tagRepository" alias="tag.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $categoryRepository" alias="category.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $categoryTranslationRepository" alias="category_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $categoryTagRepository" alias="category_tag.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mediaRepository" alias="media.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mediaDefaultFolderRepository" alias="media_default_folder.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mediaThumbnailRepository" alias="media_thumbnail.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mediaTranslationRepository" alias="media_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mediaFolderRepository" alias="media_folder.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mediaThumbnailSizeRepository" alias="media_thumbnail_size.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mediaFolderConfigurationRepository" alias="media_folder_configuration.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mediaFolderConfigurationMediaThumbnailSizeRepository" alias="media_folder_configuration_media_thumbnail_size.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mediaTagRepository" alias="media_tag.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productRepository" alias="product.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productStreamMappingRepository" alias="product_stream_mapping.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productCategoryRepository" alias="product_category.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productCustomFieldSetRepository" alias="product_custom_field_set.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productTagRepository" alias="product_tag.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productConfiguratorSettingRepository" alias="product_configurator_setting.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productPriceRepository" alias="product_price.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productPropertyRepository" alias="product_property.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productSearchKeywordRepository" alias="product_search_keyword.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productKeywordDictionaryRepository" alias="product_keyword_dictionary.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productReviewRepository" alias="product_review.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productManufacturerRepository" alias="product_manufacturer.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productManufacturerTranslationRepository" alias="product_manufacturer_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productMediaRepository" alias="product_media.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productDownloadRepository" alias="product_download.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productTranslationRepository" alias="product_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productOptionRepository" alias="product_option.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productCategoryTreeRepository" alias="product_category_tree.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productCrossSellingRepository" alias="product_cross_selling.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productCrossSellingTranslationRepository" alias="product_cross_selling_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productCrossSellingAssignedProductsRepository" alias="product_cross_selling_assigned_products.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productFeatureSetRepository" alias="product_feature_set.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productFeatureSetTranslationRepository" alias="product_feature_set_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productSortingRepository" alias="product_sorting.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productSortingTranslationRepository" alias="product_sorting_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productSearchConfigRepository" alias="product_search_config.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productSearchConfigFieldRepository" alias="product_search_config_field.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productVisibilityRepository" alias="product_visibility.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $deliveryTimeRepository" alias="delivery_time.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $newsletterRecipientRepository" alias="newsletter_recipient.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $newsletterRecipientTagRepository" alias="newsletter_recipient_tag.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $ruleRepository" alias="rule.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $ruleConditionRepository" alias="rule_condition.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $ruleTagRepository" alias="rule_tag.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productStreamRepository" alias="product_stream.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productStreamTranslationRepository" alias="product_stream_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productStreamFilterRepository" alias="product_stream_filter.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $productExportRepository" alias="product_export.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $propertyGroupRepository" alias="property_group.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $propertyGroupOptionRepository" alias="property_group_option.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $propertyGroupOptionTranslationRepository" alias="property_group_option_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $propertyGroupTranslationRepository" alias="property_group_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $cmsPageRepository" alias="cms_page.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $cmsPageTranslationRepository" alias="cms_page_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $cmsSectionRepository" alias="cms_section.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $cmsBlockRepository" alias="cms_block.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $cmsSlotRepository" alias="cms_slot.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $cmsSlotTranslationRepository" alias="cms_slot_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mailTemplateRepository" alias="mail_template.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mailTemplateTranslationRepository" alias="mail_template_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mailTemplateTypeRepository" alias="mail_template_type.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mailTemplateTypeTranslationRepository" alias="mail_template_type_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mailTemplateMediaRepository" alias="mail_template_media.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mailHeaderFooterRepository" alias="mail_header_footer.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $mailHeaderFooterTranslationRepository" alias="mail_header_footer_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $deliveryTimeTranslationRepository" alias="delivery_time_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $importExportProfileRepository" alias="import_export_profile.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $importExportLogRepository" alias="import_export_log.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $importExportFileRepository" alias="import_export_file.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $importExportProfileTranslationRepository" alias="import_export_profile_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $landingPageRepository" alias="landing_page.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $landingPageTranslationRepository" alias="landing_page_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $landingPageTagRepository" alias="landing_page_tag.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $landingPageSalesChannelRepository" alias="landing_page_sales_channel.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $flowRepository" alias="flow.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $flowSequenceRepository" alias="flow_sequence.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $flowTemplateRepository" alias="flow_template.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customerRepository" alias="customer.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customerGroupTranslationRepository" alias="customer_group_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customerAddressRepository" alias="customer_address.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customerRecoveryRepository" alias="customer_recovery.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customerGroupRepository" alias="customer_group.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customerGroupRegistrationSalesChannelsRepository" alias="customer_group_registration_sales_channels.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customerTagRepository" alias="customer_tag.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customerWishlistRepository" alias="customer_wishlist.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $customerWishlistProductRepository" alias="customer_wishlist_product.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $documentRepository" alias="document.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $documentTypeRepository" alias="document_type.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $documentTypeTranslationRepository" alias="document_type_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $documentBaseConfigRepository" alias="document_base_config.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $documentBaseConfigSalesChannelRepository" alias="document_base_config_sales_channel.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderRepository" alias="order.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderAddressRepository" alias="order_address.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderCustomerRepository" alias="order_customer.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderDeliveryRepository" alias="order_delivery.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderDeliveryPositionRepository" alias="order_delivery_position.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderLineItemRepository" alias="order_line_item.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderLineItemDownloadRepository" alias="order_line_item_download.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderTagRepository" alias="order_tag.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderTransactionRepository" alias="order_transaction.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderTransactionCaptureRepository" alias="order_transaction_capture.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderTransactionCaptureRefundRepository" alias="order_transaction_capture_refund.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $orderTransactionCaptureRefundPositionRepository" alias="order_transaction_capture_refund_position.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $paymentMethodRepository" alias="payment_method.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $paymentMethodTranslationRepository" alias="payment_method_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionRepository" alias="promotion.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionSalesChannelRepository" alias="promotion_sales_channel.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionIndividualCodeRepository" alias="promotion_individual_code.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionDiscountRepository" alias="promotion_discount.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionDiscountRuleRepository" alias="promotion_discount_rule.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionSetgroupRepository" alias="promotion_setgroup.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionSetgroupRuleRepository" alias="promotion_setgroup_rule.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionOrderRuleRepository" alias="promotion_order_rule.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionPersonaCustomerRepository" alias="promotion_persona_customer.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionPersonaRuleRepository" alias="promotion_persona_rule.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionCartRuleRepository" alias="promotion_cart_rule.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionTranslationRepository" alias="promotion_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $promotionDiscountPricesRepository" alias="promotion_discount_prices.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $shippingMethodRepository" alias="shipping_method.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $shippingMethodTagRepository" alias="shipping_method_tag.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $shippingMethodPriceRepository" alias="shipping_method_price.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $shippingMethodTranslationRepository" alias="shipping_method_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $appAdministrationSnippetRepository" alias="app_administration_snippet.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $notificationRepository" alias="notification.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $themeRepository" alias="theme.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $themeTranslationRepository" alias="theme_translation.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $themeSalesChannelRepository" alias="theme_sales_channel.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $themeMediaRepository" alias="theme_media.repository"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\EntityRepository $themeChildRepository" alias="theme_child.repository"/>
    <service id="messenger.default_transport" alias="messenger.transport.v65"/>
    <service id="sales_channel_definition.Shopware\Core\System\Language\SalesChannel\SalesChannelLanguageDefinition" alias="Shopware\Core\System\Language\SalesChannel\SalesChannelLanguageDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\System\Language\LanguageDefinition" alias="Shopware\Core\System\Language\SalesChannel\SalesChannelLanguageDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\Seo\SeoUrl\SalesChannel\SalesChannelSeoUrlDefinition" alias="Shopware\Core\Content\Seo\SeoUrl\SalesChannel\SalesChannelSeoUrlDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\Seo\SeoUrl\SeoUrlDefinition" alias="Shopware\Core\Content\Seo\SeoUrl\SalesChannel\SalesChannelSeoUrlDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\Seo\MainCategory\SalesChannel\SalesChannelMainCategoryDefinition" alias="Shopware\Core\Content\Seo\MainCategory\SalesChannel\SalesChannelMainCategoryDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\Seo\MainCategory\MainCategoryDefinition" alias="Shopware\Core\Content\Seo\MainCategory\SalesChannel\SalesChannelMainCategoryDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\System\Country\SalesChannel\SalesChannelCountryDefinition" alias="Shopware\Core\System\Country\SalesChannel\SalesChannelCountryDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\System\Country\CountryDefinition" alias="Shopware\Core\System\Country\SalesChannel\SalesChannelCountryDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\System\Country\Aggregate\CountryState\SalesChannel\SalesChannelCountryStateDefinition" alias="Shopware\Core\System\Country\Aggregate\CountryState\SalesChannel\SalesChannelCountryStateDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\System\Country\Aggregate\CountryState\CountryStateDefinition" alias="Shopware\Core\System\Country\Aggregate\CountryState\SalesChannel\SalesChannelCountryStateDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\System\Currency\SalesChannel\SalesChannelCurrencyDefinition" alias="Shopware\Core\System\Currency\SalesChannel\SalesChannelCurrencyDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\System\Currency\CurrencyDefinition" alias="Shopware\Core\System\Currency\SalesChannel\SalesChannelCurrencyDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\System\Salutation\SalesChannel\SalesChannelSalutationDefinition" alias="Shopware\Core\System\Salutation\SalesChannel\SalesChannelSalutationDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\System\Salutation\SalutationDefinition" alias="Shopware\Core\System\Salutation\SalesChannel\SalesChannelSalutationDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\Category\SalesChannel\SalesChannelCategoryDefinition" alias="Shopware\Core\Content\Category\SalesChannel\SalesChannelCategoryDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\Category\CategoryDefinition" alias="Shopware\Core\Content\Category\SalesChannel\SalesChannelCategoryDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\SalesChannel\SalesChannelProductDefinition" alias="Shopware\Core\Content\Product\SalesChannel\SalesChannelProductDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\Product\ProductDefinition" alias="Shopware\Core\Content\Product\SalesChannel\SalesChannelProductDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\Newsletter\SalesChannel\SalesChannelNewsletterRecipientDefinition" alias="Shopware\Core\Content\Newsletter\SalesChannel\SalesChannelNewsletterRecipientDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\Newsletter\Aggregate\NewsletterRecipient\NewsletterRecipientDefinition" alias="Shopware\Core\Content\Newsletter\SalesChannel\SalesChannelNewsletterRecipientDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\LandingPage\SalesChannel\SalesChannelLandingPageDefinition" alias="Shopware\Core\Content\LandingPage\SalesChannel\SalesChannelLandingPageDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Content\LandingPage\LandingPageDefinition" alias="Shopware\Core\Content\LandingPage\SalesChannel\SalesChannelLandingPageDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Payment\SalesChannel\SalesChannelPaymentMethodDefinition" alias="Shopware\Core\Checkout\Payment\SalesChannel\SalesChannelPaymentMethodDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Payment\PaymentMethodDefinition" alias="Shopware\Core\Checkout\Payment\SalesChannel\SalesChannelPaymentMethodDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Shipping\SalesChannel\SalesChannelShippingMethodDefinition" alias="Shopware\Core\Checkout\Shipping\SalesChannel\SalesChannelShippingMethodDefinition" public="true"/>
    <service id="sales_channel_definition.Shopware\Core\Checkout\Shipping\ShippingMethodDefinition" alias="Shopware\Core\Checkout\Shipping\SalesChannel\SalesChannelShippingMethodDefinition" public="true"/>
    <service id=".service_locator.PAVAFIa" alias="messenger.receiver_locator"/>
    <service id=".service_locator.dy8LzJ8" alias="messenger.retry_strategy_locator"/>
    <service id=".service_locator.KZ_FaZE" alias=".service_locator._fH_3DO"/>
    <service id=".service_locator.UVzlyrv" alias=".service_locator.Y9V5V0n"/>
    <service id=".service_locator.o.uf2zi" alias=".service_locator.7nzbL4K"/>
    <service id=".service_locator.8HeMdMN" alias=".service_locator.4a.A3U6"/>
    <service id=".service_locator.yaUeWTl" alias=".service_locator.LZebv8u"/>
    <service id=".service_locator.RGe.Eww" alias=".service_locator.wmwio2R"/>
    <service id=".service_locator.O24_MAy" alias=".service_locator.yY.p4P7"/>
    <service id=".service_locator.jUv.zyj" alias=".service_locator.O2p6Lk7"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Search\EntitySearcherInterface" alias="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntitySearcher" public="true"/>
    <service id="Shopware\Core\Framework\DataAbstractionLayer\Search\EntityAggregatorInterface" alias="Shopware\Elasticsearch\Framework\DataAbstractionLayer\ElasticsearchEntityAggregator" public="true"/>
    <service id="Shopware\Core\Framework\Webhook\WebhookDispatcher.inner" alias="Shopware\Core\Content\Flow\Dispatching\FlowDispatcher"/>
    <service id="http_client" alias="http_client.uri_template"/>
    <service id="Shopware\Core\Framework\Adapter\Translation\Translator.inner" alias="translator.default"/>
    <service id="twig.template_iterator" alias="Shopware\Core\Framework\Adapter\Twig\AppTemplateIterator"/>
    <service id="Shopware\Core\Framework\Adapter\Twig\AppTemplateIterator.inner" alias="Shopware\Core\Framework\Adapter\Twig\TemplateIterator"/>
    <service id="Shopware\Core\Framework\Routing\ApiRequestContextResolver" alias="Shopware\Core\Framework\Routing\SalesChannelRequestContextResolver"/>
    <service id="monolog.handler.main" alias="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler"/>
    <service id="Shopware\Core\Framework\Log\Monolog\ErrorCodeLogLevelHandler.inner" alias="Shopware\Core\Framework\Log\Monolog\ExcludeExceptionHandler"/>
    <service id="Shopware\Core\Framework\Log\Monolog\ExcludeFlowEventHandler.inner" alias="Shopware\Core\Framework\Log\Monolog\ErrorCodeLogLevelHandler"/>
    <service id="messenger.bus.shopware.inner" alias="messenger.bus.default"/>
    <service id="cache.object" alias="Shopware\Core\Framework\Adapter\Cache\CacheDecorator"/>
    <service id="Shopware\Core\Framework\Api\ApiDefinition\Generator\EntitySchemaGenerator" alias="Shopware\Core\Framework\Api\ApiDefinition\Generator\CachedEntitySchemaGenerator"/>
    <service id="League\OAuth2\Server\AuthorizationValidators\BearerTokenValidator" alias="Shopware\Core\Framework\Api\OAuth\BearerTokenValidator"/>
    <service id="validator" alias="Shopware\Core\Framework\Validation\HappyPathValidator"/>
    <service id="Shopware\Core\Framework\Event\NestedEventDispatcher.inner" alias="Shopware\Core\Framework\Webhook\WebhookDispatcher"/>
    <service id="Shopware\Core\System\Language\LanguageLoader" alias="Shopware\Core\System\Language\CachedLanguageLoader"/>
    <service id="Shopware\Core\System\SalesChannel\Context\BaseContextFactory" alias="Shopware\Core\System\SalesChannel\Context\CachedBaseContextFactory"/>
    <service id="Shopware\Core\Content\Product\SalesChannel\Price\ProductPriceCalculator" alias="Shopware\Core\Content\Product\SalesChannel\Price\AppScriptProductPriceCalculator"/>
    <service id="Shopware\Administration\Snippet\SnippetFinder" alias="Shopware\Administration\Snippet\CachedSnippetFinder"/>
    <service id="Shopware\Core\Framework\Routing\RequestTransformerInterface" alias="Shopware\Storefront\Framework\Routing\RequestTransformer" public="true"/>
    <service id="Shopware\Storefront\Framework\Routing\Router.inner" alias="router.default"/>
    <service id="Shopware\Core\Content\Product\SalesChannel\Detail\ProductConfiguratorLoader" alias="Shopware\Storefront\Page\Product\Configurator\ProductPageConfiguratorLoader"/>
    <service id="Shopware\Core\Content\Media\Cms\DefaultMediaResolver" alias="Shopware\Storefront\Page\Cms\DefaultMediaResolver"/>
    <service id="Shopware\Core\Framework\Adapter\Cache\CacheTracer" alias="Shopware\Storefront\Framework\Cache\CacheTracer"/>
    <service id="Shopware\Storefront\Framework\Cookie\CookieProviderInterface" alias="Shopware\Storefront\Framework\Cookie\AppCookieProvider"/>
    <service id="Shopware\Core\Framework\App\Template\TemplateLoader" alias="Shopware\Storefront\Framework\App\Template\IconTemplateLoader"/>
    <service id="twig.app_variable" alias="Shopware\Storefront\Framework\Twig\TwigAppVariable"/>
    <service id="debug.event_dispatcher.inner" alias="Shopware\Core\Framework\Event\NestedEventDispatcher"/>
    <service id="controller_resolver" alias="debug.controller_resolver"/>
    <service id="argument_resolver" alias="debug.argument_resolver"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html"/>
    <service id="var_dumper.cli_dumper" alias="var_dumper.contextualized_cli_dumper"/>
    <service id="OpenSearch\Client" alias="shopware.es.profiled.client" public="true"/>
    <service id="admin.openSearch.client" alias="shopware.es.profiled.adminClient" public="true"/>
    <service id="Shopware\Core\System\Language\SalesChannel\LanguageRoute" alias="Shopware\Core\System\Language\SalesChannel\CachedLanguageRoute" public="true"/>
    <service id="Shopware\Core\System\SalesChannel\Context\SalesChannelContextFactory" alias="Shopware\Core\System\SalesChannel\Context\CachedSalesChannelContextFactory" public="true"/>
    <service id="Shopware\Core\System\Country\SalesChannel\CountryRoute" alias="Shopware\Core\System\Country\SalesChannel\CachedCountryRoute" public="true"/>
    <service id="Shopware\Core\System\Country\SalesChannel\CountryStateRoute" alias="Shopware\Core\System\Country\SalesChannel\CachedCountryStateRoute" public="true"/>
    <service id="Shopware\Core\System\Currency\SalesChannel\CurrencyRoute" alias="Shopware\Core\System\Currency\SalesChannel\CachedCurrencyRoute" public="true"/>
    <service id="Shopware\Core\System\Salutation\SalesChannel\SalutationRoute" alias="Shopware\Core\System\Salutation\SalesChannel\CachedSalutationRoute" public="true"/>
    <service id="Shopware\Core\System\SystemConfig\SystemConfigLoader" alias="Shopware\Core\System\SystemConfig\MemoizedSystemConfigLoader"/>
    <service id="Shopware\Core\Content\Category\SalesChannel\NavigationRoute" alias="Shopware\Core\Content\Category\SalesChannel\TreeBuildingNavigationRoute" public="true"/>
    <service id="Shopware\Core\Content\Category\SalesChannel\CategoryRoute" alias="Shopware\Core\Content\Category\SalesChannel\CachedCategoryRoute" public="true"/>
    <service id="Shopware\Core\Content\Product\SalesChannel\Suggest\ProductSuggestRoute" alias="Shopware\Core\Content\Product\SalesChannel\Suggest\CachedProductSuggestRoute" public="true"/>
    <service id="Shopware\Core\Content\Product\SalesChannel\Search\ProductSearchRoute" alias="Shopware\Core\Content\Product\SalesChannel\Search\ResolvedCriteriaProductSearchRoute" public="true"/>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\ProductListingRoute" alias="Shopware\Core\Content\Product\SalesChannel\Listing\ResolveCriteriaProductListingRoute" public="true"/>
    <service id="Shopware\Core\Content\Product\SalesChannel\Detail\ProductDetailRoute" alias="Shopware\Core\Content\Product\SalesChannel\Detail\CachedProductDetailRoute" public="true"/>
    <service id="Shopware\Core\Content\Product\SalesChannel\Review\ProductReviewRoute" alias="Shopware\Core\Content\Product\SalesChannel\Review\CachedProductReviewRoute" public="true"/>
    <service id="Shopware\Core\Content\Product\SalesChannel\CrossSelling\ProductCrossSellingRoute" alias="Shopware\Core\Content\Product\SalesChannel\CrossSelling\CachedProductCrossSellingRoute" public="true"/>
    <service id="Shopware\Core\Content\Sitemap\SalesChannel\SitemapRoute" alias="Shopware\Core\Content\Sitemap\SalesChannel\CachedSitemapRoute" public="true"/>
    <service id="Shopware\Core\Content\LandingPage\SalesChannel\LandingPageRoute" alias="Shopware\Core\Content\LandingPage\SalesChannel\CachedLandingPageRoute" public="true"/>
    <service id="Shopware\Core\Content\Flow\Dispatching\FlowLoader" alias="Shopware\Core\Content\Flow\Dispatching\CachedFlowLoader" public="true"/>
    <service id="Shopware\Core\Checkout\Cart\RuleLoader" alias="Shopware\Core\Checkout\Cart\CachedRuleLoader"/>
    <service id="Shopware\Core\Checkout\Payment\SalesChannel\PaymentMethodRoute" alias="Shopware\Core\Checkout\Payment\SalesChannel\SortedPaymentMethodRoute" public="true"/>
    <service id="Shopware\Core\Checkout\Shipping\SalesChannel\ShippingMethodRoute" alias="Shopware\Core\Checkout\Shipping\SalesChannel\SortedShippingMethodRoute" public="true"/>
    <service id="Shopware\Storefront\Framework\Routing\DomainLoader" alias="Shopware\Storefront\Framework\Routing\CachedDomainLoader"/>
    <service id="Shopware\Storefront\Theme\ResolvedConfigLoader" alias="Shopware\Storefront\Theme\CachedResolvedConfigLoader"/>
    <service id="Shopware\Core\Content\Seo\SeoResolver" alias="Shopware\Core\Content\Seo\EmptyPathInfoResolver" public="true"/>
    <service id="Shopware\Core\System\SystemConfig\MemoizedSystemConfigLoader.inner" alias="Shopware\Core\System\SystemConfig\CachedSystemConfigLoader"/>
    <service id="Shopware\Core\Content\Category\SalesChannel\TreeBuildingNavigationRoute.inner" alias="Shopware\Core\Content\Category\SalesChannel\CachedNavigationRoute"/>
    <service id="Shopware\Core\Content\Product\SalesChannel\Search\ResolvedCriteriaProductSearchRoute.inner" alias="Shopware\Core\Content\Product\SalesChannel\Search\CachedProductSearchRoute"/>
    <service id="Shopware\Core\Content\Product\SalesChannel\Listing\ResolveCriteriaProductListingRoute.inner" alias="Shopware\Core\Content\Product\SalesChannel\Listing\CachedProductListingRoute"/>
    <service id="Shopware\Core\Checkout\Payment\SalesChannel\SortedPaymentMethodRoute.inner" alias="Shopware\Core\Checkout\Payment\SalesChannel\CachedPaymentMethodRoute"/>
    <service id="Shopware\Core\Checkout\Shipping\SalesChannel\SortedShippingMethodRoute.inner" alias="Shopware\Core\Checkout\Shipping\SalesChannel\CachedShippingMethodRoute"/>
    <service id="Shopware\Core\Content\Product\DataAbstractionLayer\SearchKeywordUpdater" alias="Shopware\Elasticsearch\Product\SearchKeywordReplacement"/>
    <service id="Shopware\Core\Content\Product\SearchKeyword\ProductSearchBuilderInterface" alias="Shopware\Elasticsearch\Product\ProductSearchBuilder"/>
    <service id=".service_locator.wnYjsp8" alias=".service_locator.mAMut9a"/>
    <service id=".service_locator.vNabsi9" alias=".service_locator.zA3uUCZ"/>
    <service id=".service_locator.gFlme_s" alias=".service_locator.y4_Zrx."/>
    <service id=".service_locator.UJk7wXY" alias=".service_locator.O2p6Lk7"/>
    <service id=".service_locator.I5vHj54" alias=".service_locator.iAsjxbi"/>
    <service id=".service_locator.ke_LZlC" alias=".service_locator.uSDOPcE"/>
    <service id=".service_locator.TzRBYRb" alias=".service_locator.ndmwPHD"/>
    <service id=".service_locator.u6DWx23" alias=".service_locator.cXsfP3P"/>
  </services>
</container>
